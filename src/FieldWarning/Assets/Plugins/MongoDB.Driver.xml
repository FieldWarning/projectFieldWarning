<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MongoDB.Driver</name>
    </assembly>
    <members>
        <member name="T:MongoDB.Driver.AggregateBucketAutoGranularity">
            <summary>
            Represents the granularity value for a $bucketAuto stage.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.AggregateBucketAutoGranularity.E6">
            <summary>
            Gets the E6 granularity.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.AggregateBucketAutoGranularity.E12">
            <summary>
            Gets the E12 granularity.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.AggregateBucketAutoGranularity.E24">
            <summary>
            Gets the E24 granularity.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.AggregateBucketAutoGranularity.E48">
            <summary>
            Gets the E48 granularity.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.AggregateBucketAutoGranularity.E96">
            <summary>
            Gets the E96 granularity.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.AggregateBucketAutoGranularity.E192">
            <summary>
            Gets the E192 granularity.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.AggregateBucketAutoGranularity.PowersOf2">
            <summary>
            Gets the POWERSOF2 granularity.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.AggregateBucketAutoGranularity.R5">
            <summary>
            Gets the R5 granularity.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.AggregateBucketAutoGranularity.R10">
            <summary>
            Gets the R10 granularity.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.AggregateBucketAutoGranularity.R20">
            <summary>
            Gets the R20 granularity.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.AggregateBucketAutoGranularity.R40">
            <summary>
            Gets the R40 granularity.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.AggregateBucketAutoGranularity.R80">
            <summary>
            Gets the R80 granularity.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.AggregateBucketAutoGranularity.S1_2_5">
            <summary>
            Gets the 1-2-5 granularity.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.AggregateBucketAutoGranularity.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.AggregateBucketAutoGranularity"/> struct.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="P:MongoDB.Driver.AggregateBucketAutoGranularity.Value">
            <summary>
            Gets the value.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.AggregateBucketAutoOptions">
            <summary>
            Represents options for the BucketAuto method.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.AggregateBucketAutoOptions.Granularity">
            <summary>
            Gets or sets the granularity.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.AggregateBucketAutoResult`1">
            <summary>
            Represents the result of the $bucketAuto stage.
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.AggregateBucketAutoResult`1.#ctor(MongoDB.Driver.AggregateBucketAutoResultId{`0},System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.AggregateBucketResult`1"/> class.
            </summary>
            <param name="id">The inclusive lower boundary of the bucket.</param>
            <param name="count">The count.</param>
        </member>
        <member name="M:MongoDB.Driver.AggregateBucketAutoResult`1.#ctor(`0,`0,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.AggregateBucketResult`1" /> class.
            </summary>
            <param name="min">The minimum.</param>
            <param name="max">The maximum.</param>
            <param name="count">The count.</param>
        </member>
        <member name="P:MongoDB.Driver.AggregateBucketAutoResult`1.Id">
            <summary>
            Gets the inclusive lower boundary of the bucket.
            </summary>
            <value>
            The inclusive lower boundary of the bucket.
            </value>
        </member>
        <member name="P:MongoDB.Driver.AggregateBucketAutoResult`1.Count">
            <summary>
            Gets the count.
            </summary>
            <value>
            The count.
            </value>
        </member>
        <member name="P:MongoDB.Driver.AggregateBucketAutoResult`1.Max">
            <summary>
            Gets the maximum.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.AggregateBucketAutoResult`1.Min">
            <summary>
            Gets the minimum.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.AggregateBucketAutoResultId`1">
            <summary>
            Represents the _id value in the result of a $bucketAuto stage.
            </summary>
            <typeparam name="TValue">The type of the values.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.AggregateBucketAutoResultId`1.#ctor(`0,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.AggregateBucketAutoResultId`1"/> class.
            </summary>
            <param name="min">The minimum.</param>
            <param name="max">The maximum.</param>
        </member>
        <member name="P:MongoDB.Driver.AggregateBucketAutoResultId`1.Max">
            <summary>
            Gets the max value.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.AggregateBucketAutoResultId`1.Min">
            <summary>
            Gets the min value.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.AggregateBucketOptions`1">
            <summary>
            Represents options for the Bucket method.
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
        </member>
        <member name="P:MongoDB.Driver.AggregateBucketOptions`1.DefaultBucket">
            <summary>
            Gets or sets the default bucket.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.AggregateBucketResult`1">
            <summary>
            Represents the result of the $bucket stage.
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.AggregateBucketResult`1.#ctor(`0,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.AggregateBucketResult`1"/> class.
            </summary>
            <param name="id">The inclusive lower boundary of the bucket.</param>
            <param name="count">The count.</param>
        </member>
        <member name="P:MongoDB.Driver.AggregateBucketResult`1.Id">
            <summary>
            Gets the inclusive lower boundary of the bucket.
            </summary>
            <value>
            The inclusive lower boundary of the bucket.
            </value>
        </member>
        <member name="P:MongoDB.Driver.AggregateBucketResult`1.Count">
            <summary>
            Gets the count.
            </summary>
            <value>
            The count.
            </value>
        </member>
        <member name="T:MongoDB.Driver.AggregateCountResult">
            <summary>
            Result type for the aggregate $count stage.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.AggregateCountResult.#ctor(System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.AggregateCountResult"/> class.
            </summary>
            <param name="count">The count.</param>
        </member>
        <member name="P:MongoDB.Driver.AggregateCountResult.Count">
            <summary>
            Gets the count.
            </summary>
            <value>
            The count.
            </value>
        </member>
        <member name="T:MongoDB.Driver.AggregateExpressionDefinition`2">
            <summary>
            An aggregation expression.
            </summary>
            <typeparam name="TSource">The type of the source.</typeparam>
            <typeparam name="TResult">The type of the result.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.AggregateExpressionDefinition`2.op_Implicit(MongoDB.Bson.BsonValue)~MongoDB.Driver.AggregateExpressionDefinition{`0,`1}">
            <summary>
            Performs an implicit conversion from <see cref="T:MongoDB.Bson.BsonValue"/> to <see cref="T:MongoDB.Driver.AggregateExpressionDefinition`2"/>.
            </summary>
            <param name="expression">The expression.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.AggregateExpressionDefinition`2.op_Implicit(System.String)~MongoDB.Driver.AggregateExpressionDefinition{`0,`1}">
            <summary>
            Performs an implicit conversion from <see cref="T:System.String"/> to <see cref="T:MongoDB.Driver.AggregateExpressionDefinition`2"/>.
            </summary>
            <param name="expression">The expression.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.AggregateExpressionDefinition`2.Render(MongoDB.Bson.Serialization.IBsonSerializer{`0},MongoDB.Bson.Serialization.IBsonSerializerRegistry)">
            <summary>
            Renders the aggregation expression.
            </summary>
            <param name="sourceSerializer">The source serializer.</param>
            <param name="serializerRegistry">The serializer registry.</param>
            <returns>The rendered aggregation expression.</returns>
        </member>
        <member name="T:MongoDB.Driver.BsonValueAggregateExpressionDefinition`2">
            <summary>
            A <see cref="T:MongoDB.Bson.BsonValue"/> based aggregate expression.
            </summary>
            <typeparam name="TSource">The type of the source.</typeparam>
            <typeparam name="TResult">The type of the result.</typeparam>
            <seealso cref="T:MongoDB.Driver.AggregateExpressionDefinition`2" />
        </member>
        <member name="M:MongoDB.Driver.BsonValueAggregateExpressionDefinition`2.#ctor(MongoDB.Bson.BsonValue)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.BsonValueAggregateExpressionDefinition`2"/> class.
            </summary>
            <param name="expression">The expression.</param>
        </member>
        <member name="M:MongoDB.Driver.BsonValueAggregateExpressionDefinition`2.Render(MongoDB.Bson.Serialization.IBsonSerializer{`0},MongoDB.Bson.Serialization.IBsonSerializerRegistry)">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.ExpressionAggregateExpressionDefinition`2">
            <summary>
            A <see cref="T:MongoDB.Bson.BsonValue"/> based aggregate expression.
            </summary>
            <typeparam name="TSource">The type of the source.</typeparam>
            <typeparam name="TResult">The type of the result.</typeparam>
            <seealso cref="T:MongoDB.Driver.AggregateExpressionDefinition`2" />
        </member>
        <member name="M:MongoDB.Driver.ExpressionAggregateExpressionDefinition`2.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1}},MongoDB.Driver.ExpressionTranslationOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.ExpressionAggregateExpressionDefinition`2" /> class.
            </summary>
            <param name="expression">The expression.</param>
            <param name="translationOptions">The translation options.</param>
        </member>
        <member name="M:MongoDB.Driver.ExpressionAggregateExpressionDefinition`2.Render(MongoDB.Bson.Serialization.IBsonSerializer{`0},MongoDB.Bson.Serialization.IBsonSerializerRegistry)">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.AggregateFacet">
            <summary>
            Represents static methods for creating facets.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.AggregateFacet.Create``2(System.String,MongoDB.Driver.PipelineDefinition{``0,``1})">
            <summary>
            Creates a new instance of the <see cref="T:MongoDB.Driver.AggregateFacet`2" /> class.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="name">The facet name.</param>
            <param name="pipeline">The facet pipeline.</param>
            <returns>
            A new instance of the <see cref="T:MongoDB.Driver.AggregateFacet`2" /> class
            </returns>
        </member>
        <member name="T:MongoDB.Driver.AggregateFacet`1">
            <summary>
            Represents a facet to be passed to the Facet method.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.AggregateFacet`1.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.AggregateFacet`1"/> class.
            </summary>
            <param name="name">The facet name.</param>
        </member>
        <member name="P:MongoDB.Driver.AggregateFacet`1.Name">
            <summary>
            Gets the facet name.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.AggregateFacet`1.OutputSerializer">
            <summary>
            Gets the output serializer.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.AggregateFacet`1.OutputType">
            <summary>
            Gets the type of the output documents.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.AggregateFacet`1.RenderPipeline(MongoDB.Bson.Serialization.IBsonSerializer{`0},MongoDB.Bson.Serialization.IBsonSerializerRegistry)">
            <summary>
            Renders the facet pipeline.
            </summary>
            <param name="inputSerializer">The input serializer.</param>
            <param name="serializerRegistry">The serializer registry.</param>
            <returns>The rendered pipeline.</returns>
        </member>
        <member name="T:MongoDB.Driver.AggregateFacet`2">
            <summary>
            Represents a facet to be passed to the Facet method.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TOutput">The type of the otuput documents.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.AggregateFacet`2.#ctor(System.String,MongoDB.Driver.PipelineDefinition{`0,`1})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.AggregateFacet`2"/> class.
            </summary>
            <param name="name">The facet name.</param>
            <param name="pipeline">The facet pipeline.</param>
        </member>
        <member name="P:MongoDB.Driver.AggregateFacet`2.OutputSerializer">
            <inheritdoc/>
        </member>
        <member name="P:MongoDB.Driver.AggregateFacet`2.OutputType">
            <inheritdoc/>
        </member>
        <member name="P:MongoDB.Driver.AggregateFacet`2.Pipeline">
            <summary>
            Gets the facet pipeline.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.AggregateFacet`2.RenderPipeline(MongoDB.Bson.Serialization.IBsonSerializer{`0},MongoDB.Bson.Serialization.IBsonSerializerRegistry)">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.AggregateFacetOptions`1">
            <summary>
            Options for the aggregate $facet stage.
            </summary>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
        </member>
        <member name="P:MongoDB.Driver.AggregateFacetOptions`1.OutputSerializer">
            <summary>
            Gets or sets the output serializer.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.AggregateFacetResult">
            <summary>
            Represents an abstract AggregateFacetResult with an arbitrary TOutput type.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.AggregateFacetResult.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.AggregateFacetResult" /> class.
            </summary>
            <param name="name">The name of the facet.</param>
        </member>
        <member name="P:MongoDB.Driver.AggregateFacetResult.Name">
            <summary>
            Gets the name of the facet.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.AggregateFacetResult.Output``1">
            <summary>
            Gets the output of the facet.
            </summary>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <returns>The output of the facet.</returns>
        </member>
        <member name="T:MongoDB.Driver.AggregateFacetResult`1">
            <summary>
            Represents the result of a single facet.
            </summary>
            <typeparam name="TOutput">The type of the output.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.AggregateFacetResult`1.#ctor(System.String,System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.AggregateFacetResult`1"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="output">The output.</param>
        </member>
        <member name="P:MongoDB.Driver.AggregateFacetResult`1.Output">
            <summary>
            Gets or sets the output.
            </summary>
            <value>
            The output.
            </value>
        </member>
        <member name="T:MongoDB.Driver.AggregateFacetResults">
            <summary>
            Represents the results of a $facet stage with an arbitrary number of facets.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.AggregateFacetResults.#ctor(MongoDB.Driver.AggregateFacetResult[])">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.AggregateFacetResults"/> class.
            </summary>
            <param name="facets">The facets.</param>
        </member>
        <member name="P:MongoDB.Driver.AggregateFacetResults.Facets">
            <summary>
            Gets the facets.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.AggregateFluentBase`1">
            <summary>
            Base class for implementors of <see cref="T:MongoDB.Driver.IAggregateFluent`1" />.
            </summary>
            <typeparam name="TResult">The type of the document.</typeparam>
        </member>
        <member name="P:MongoDB.Driver.AggregateFluentBase`1.Database">
            <inheritdoc />
        </member>
        <member name="P:MongoDB.Driver.AggregateFluentBase`1.Options">
            <inheritdoc />
        </member>
        <member name="P:MongoDB.Driver.AggregateFluentBase`1.Stages">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.AggregateFluentBase`1.AppendStage``1(MongoDB.Driver.PipelineStageDefinition{`0,``0})">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.AggregateFluentBase`1.As``1(MongoDB.Bson.Serialization.IBsonSerializer{``0})">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.AggregateFluentBase`1.Bucket``1(MongoDB.Driver.AggregateExpressionDefinition{`0,``0},System.Collections.Generic.IEnumerable{``0},MongoDB.Driver.AggregateBucketOptions{``0})">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.AggregateFluentBase`1.Bucket``2(MongoDB.Driver.AggregateExpressionDefinition{`0,``0},System.Collections.Generic.IEnumerable{``0},MongoDB.Driver.ProjectionDefinition{`0,``1},MongoDB.Driver.AggregateBucketOptions{``0})">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.AggregateFluentBase`1.BucketAuto``1(MongoDB.Driver.AggregateExpressionDefinition{`0,``0},System.Int32,MongoDB.Driver.AggregateBucketAutoOptions)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.AggregateFluentBase`1.BucketAuto``2(MongoDB.Driver.AggregateExpressionDefinition{`0,``0},System.Int32,MongoDB.Driver.ProjectionDefinition{`0,``1},MongoDB.Driver.AggregateBucketAutoOptions)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.AggregateFluentBase`1.ChangeStream(MongoDB.Driver.ChangeStreamStageOptions)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.AggregateFluentBase`1.Count">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.AggregateFluentBase`1.Facet``1(System.Collections.Generic.IEnumerable{MongoDB.Driver.AggregateFacet{`0}},MongoDB.Driver.AggregateFacetOptions{``0})">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.AggregateFluentBase`1.GraphLookup``7(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.FieldDefinition{``0,``1},MongoDB.Driver.FieldDefinition{``0,``2},MongoDB.Driver.AggregateExpressionDefinition{`0,``3},MongoDB.Driver.FieldDefinition{``6,``5},MongoDB.Driver.FieldDefinition{``4,System.Int32},MongoDB.Driver.AggregateGraphLookupOptions{``0,``4,``6})">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.AggregateFluentBase`1.Group``1(MongoDB.Driver.ProjectionDefinition{`0,``0})">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.AggregateFluentBase`1.Limit(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.AggregateFluentBase`1.Lookup``2(System.String,MongoDB.Driver.FieldDefinition{`0},MongoDB.Driver.FieldDefinition{``0},MongoDB.Driver.FieldDefinition{``1},MongoDB.Driver.AggregateLookupOptions{``0,``1})">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.AggregateFluentBase`1.Lookup``4(MongoDB.Driver.IMongoCollection{``0},MongoDB.Bson.BsonDocument,MongoDB.Driver.PipelineDefinition{``0,``1},MongoDB.Driver.FieldDefinition{``3,``2},MongoDB.Driver.AggregateLookupOptions{``0,``3})">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.AggregateFluentBase`1.Match(MongoDB.Driver.FilterDefinition{`0})">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.AggregateFluentBase`1.Merge``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.MergeStageOptions{``0},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.AggregateFluentBase`1.MergeAsync``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.MergeStageOptions{``0},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.AggregateFluentBase`1.OfType``1(MongoDB.Bson.Serialization.IBsonSerializer{``0})">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.AggregateFluentBase`1.Out(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.AggregateFluentBase`1.OutAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.AggregateFluentBase`1.Project``1(MongoDB.Driver.ProjectionDefinition{`0,``0})">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.AggregateFluentBase`1.ReplaceRoot``1(MongoDB.Driver.AggregateExpressionDefinition{`0,``0})">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.AggregateFluentBase`1.ReplaceWith``1(MongoDB.Driver.AggregateExpressionDefinition{`0,``0})">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.AggregateFluentBase`1.Skip(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.AggregateFluentBase`1.Sort(MongoDB.Driver.SortDefinition{`0})">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.AggregateFluentBase`1.SortByCount``1(MongoDB.Driver.AggregateExpressionDefinition{`0,``0})">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.AggregateFluentBase`1.ThenBy(MongoDB.Driver.SortDefinition{`0})">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.AggregateFluentBase`1.Unwind``1(MongoDB.Driver.FieldDefinition{`0},MongoDB.Bson.Serialization.IBsonSerializer{``0})">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.AggregateFluentBase`1.Unwind``1(MongoDB.Driver.FieldDefinition{`0},MongoDB.Driver.AggregateUnwindOptions{``0})">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.AggregateFluentBase`1.ToCursor(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.AggregateFluentBase`1.ToCursorAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.AggregateGraphLookupOptions`3">
            <summary>
            Represents options for the GraphLookup method.
            </summary>
            <typeparam name="TFrom">The type of from documents.</typeparam>
            <typeparam name="TAsElement">The type of the as field elements.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
        </member>
        <member name="P:MongoDB.Driver.AggregateGraphLookupOptions`3.AsElementSerializer">
            <summary>
            Gets or sets the TAsElement serialzier.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.AggregateGraphLookupOptions`3.FromSerializer">
            <summary>
            Gets or sets the TFrom serializer.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.AggregateGraphLookupOptions`3.MaxDepth">
            <summary>
            Gets or sets the maximum depth.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.AggregateGraphLookupOptions`3.OutputSerializer">
            <summary>
            Gets or sets the output serializer.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.AggregateGraphLookupOptions`3.RestrictSearchWithMatch">
            <summary>
            Gets the filter to restrict the search with.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.AggregateLookupOptions`2">
            <summary>
            Options for the aggregate $lookup stage.
            </summary>
            <typeparam name="TForeignDocument">The type of the foreign document.</typeparam>
            <typeparam name="TResult">The type of the result.</typeparam>
        </member>
        <member name="P:MongoDB.Driver.AggregateLookupOptions`2.ForeignSerializer">
            <summary>
            Gets or sets the foreign document serializer.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.AggregateLookupOptions`2.ResultSerializer">
            <summary>
            Gets or sets the result serializer.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.AggregateOptions">
            <summary>
            Options for an aggregate operation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.AggregateOptions.AllowDiskUse">
            <summary>
            Gets or sets a value indicating whether to allow disk use.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.AggregateOptions.BatchSize">
            <summary>
            Gets or sets the size of a batch.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.AggregateOptions.BypassDocumentValidation">
            <summary>
            Gets or sets a value indicating whether to bypass document validation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.AggregateOptions.Collation">
            <summary>
            Gets or sets the collation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.AggregateOptions.Comment">
            <summary>
            Gets or sets the comment.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.AggregateOptions.Hint">
            <summary>
            Gets or sets the hint. This must either be a BsonString representing the index name or a BsonDocument representing the key pattern of the index.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.AggregateOptions.MaxAwaitTime">
            <summary>
            Gets or sets the maximum await time.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.AggregateOptions.MaxTime">
            <summary>
            Gets or sets the maximum time.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.AggregateOptions.TranslationOptions">
            <summary>
            Gets or sets the translation options.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.AggregateOptions.UseCursor">
            <summary>
            Gets or sets a value indicating whether to use a cursor.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.AggregateSortByCountResult`1">
            <summary>
            Result type for the aggregate $sortByCount stage.
            </summary>
            <typeparam name="TId">The type of the identifier.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.AggregateSortByCountResult`1.#ctor(`0,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.AggregateCountResult" /> class.
            </summary>
            <param name="id">The identifier.</param>
            <param name="count">The count.</param>
        </member>
        <member name="P:MongoDB.Driver.AggregateSortByCountResult`1.Count">
            <summary>
            Gets the count.
            </summary>
            <value>
            The count.
            </value>
        </member>
        <member name="P:MongoDB.Driver.AggregateSortByCountResult`1.Id">
            <summary>
            Gets the identifier.
            </summary>
            <value>
            The identifier.
            </value>
        </member>
        <member name="T:MongoDB.Driver.AggregateStringTranslationMode">
            <summary>
            Option for which expression to generate for certain string operations.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.AggregateStringTranslationMode.Bytes">
            <summary>
            Translate to the byte variation.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.AggregateStringTranslationMode.CodePoints">
            <summary>
            Translate to the code points variation. This is only supported in >= MongoDB 3.4.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.AggregateUnwindOptions`1">
            <summary>
            Options for the $unwind aggregation stage.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
        </member>
        <member name="P:MongoDB.Driver.AggregateUnwindOptions`1.IncludeArrayIndex">
            <summary>
            Gets or sets the field with which to include the array index.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.AggregateUnwindOptions`1.PreserveNullAndEmptyArrays">
            <summary>
            Gets or sets whether to preserve null and empty arrays.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.AggregateUnwindOptions`1.ResultSerializer">
            <summary>
            Gets or sets the result serializer.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.ArrayFilterDefinition">
            <summary>
            Base class for array filters.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ArrayFilterDefinition.ItemType">
            <summary>
            Gets the type of an item.
            </summary>
            <value>
            The type of an item.
            </value>
        </member>
        <member name="M:MongoDB.Driver.ArrayFilterDefinition.Render(MongoDB.Bson.Serialization.IBsonSerializer,MongoDB.Bson.Serialization.IBsonSerializerRegistry)">
            <summary>
            Renders the array filter to a <see cref="T:MongoDB.Bson.BsonDocument" />.
            </summary>
            <param name="itemSerializer">The item serializer.</param>
            <param name="serializerRegistry">The serializer registry.</param>
            <returns>
            A <see cref="T:MongoDB.Bson.BsonDocument" />.
            </returns>
        </member>
        <member name="T:MongoDB.Driver.ArrayFilterDefinition`1">
            <summary>
            Base class for array filters.
            </summary>
            <typeparam name="TItem">The type of an item.</typeparam>
        </member>
        <member name="P:MongoDB.Driver.ArrayFilterDefinition`1.ItemType">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.ArrayFilterDefinition`1.op_Implicit(MongoDB.Bson.BsonDocument)~MongoDB.Driver.ArrayFilterDefinition{`0}">
            <summary>
            Performs an implicit conversion from <see cref="T:MongoDB.Bson.BsonDocument"/> to <see cref="T:MongoDB.Driver.ArrayFilterDefinition`1"/>.
            </summary>
            <param name="document">The document.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.ArrayFilterDefinition`1.op_Implicit(System.String)~MongoDB.Driver.ArrayFilterDefinition{`0}">
            <summary>
            Performs an implicit conversion from <see cref="T:System.String"/> to <see cref="T:MongoDB.Driver.ArrayFilterDefinition`1"/>.
            </summary>
            <param name="json">The JSON string.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.ArrayFilterDefinition`1.Render(MongoDB.Bson.Serialization.IBsonSerializer{`0},MongoDB.Bson.Serialization.IBsonSerializerRegistry)">
            <summary>
            Renders the array filter to a <see cref="T:MongoDB.Bson.BsonDocument" />.
            </summary>
            <param name="itemSerializer">The item serializer.</param>
            <param name="serializerRegistry">The serializer registry.</param>
            <returns>
            A <see cref="T:MongoDB.Bson.BsonDocument" />.
            </returns>
        </member>
        <member name="T:MongoDB.Driver.BsonDocumentArrayFilterDefinition`1">
            <summary>
            A <see cref="T:MongoDB.Bson.BsonDocument"/> based array filter.
            </summary>
            <typeparam name="TItem">The type of an item.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.BsonDocumentArrayFilterDefinition`1.#ctor(MongoDB.Bson.BsonDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.BsonDocumentArrayFilterDefinition`1"/> class.
            </summary>
            <param name="document">The document.</param>
        </member>
        <member name="P:MongoDB.Driver.BsonDocumentArrayFilterDefinition`1.Document">
            <summary>
            Gets the document.
            </summary>
            <value>
            The document.
            </value>
        </member>
        <member name="M:MongoDB.Driver.BsonDocumentArrayFilterDefinition`1.Render(MongoDB.Bson.Serialization.IBsonSerializer,MongoDB.Bson.Serialization.IBsonSerializerRegistry)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.BsonDocumentArrayFilterDefinition`1.Render(MongoDB.Bson.Serialization.IBsonSerializer{`0},MongoDB.Bson.Serialization.IBsonSerializerRegistry)">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.JsonArrayFilterDefinition`1">
            <summary>
            A JSON <see cref="T:System.String"/> based array filter.
            </summary>
            <typeparam name="TItem">The type of an item.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.JsonArrayFilterDefinition`1.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.BsonDocumentArrayFilterDefinition`1"/> class.
            </summary>
            <param name="json">The JSON string.</param>
        </member>
        <member name="P:MongoDB.Driver.JsonArrayFilterDefinition`1.Document">
            <summary>
            Gets the document.
            </summary>
            <value>
            The document.
            </value>
        </member>
        <member name="P:MongoDB.Driver.JsonArrayFilterDefinition`1.Json">
            <summary>
            Gets the JSON string.
            </summary>
            <value>
            The JSON string.
            </value>
        </member>
        <member name="M:MongoDB.Driver.JsonArrayFilterDefinition`1.Render(MongoDB.Bson.Serialization.IBsonSerializer,MongoDB.Bson.Serialization.IBsonSerializerRegistry)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.JsonArrayFilterDefinition`1.Render(MongoDB.Bson.Serialization.IBsonSerializer{`0},MongoDB.Bson.Serialization.IBsonSerializerRegistry)">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.Builders`1">
            <summary>
            A static helper class containing various builders.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="P:MongoDB.Driver.Builders`1.Filter">
            <summary>
            Gets a <see cref="T:MongoDB.Driver.FilterDefinitionBuilder`1"/>.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Builders`1.IndexKeys">
            <summary>
            Gets an <see cref="T:MongoDB.Driver.IndexKeysDefinitionBuilder`1"/>.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Builders`1.Projection">
            <summary>
            Gets a <see cref="T:MongoDB.Driver.ProjectionDefinitionBuilder`1"/>.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Builders`1.Sort">
            <summary>
            Gets a <see cref="T:MongoDB.Driver.SortDefinitionBuilder`1"/>.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Builders`1.Update">
            <summary>
            Gets an <see cref="T:MongoDB.Driver.UpdateDefinitionBuilder`1"/>.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.BulkWriteError">
            <summary>
            Represents the details of a write error for a particular request.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteError.Index">
            <summary>
            Gets the index of the request that had an error.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.BulkWriteOptions">
            <summary>
            Options for a bulk write operation.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.BulkWriteOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.BulkWriteOptions"/> class.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteOptions.BypassDocumentValidation">
            <summary>
            Gets or sets a value indicating whether to bypass document validation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteOptions.IsOrdered">
            <summary>
            Gets or sets a value indicating whether the requests are fulfilled in order.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.BulkWriteResult">
            <summary>
            Represents the result of a bulk write operation.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.BulkWriteResult.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.BulkWriteResult"/> class.
            </summary>
            <param name="requestCount">The request count.</param>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteResult.DeletedCount">
            <summary>
            Gets the number of documents that were deleted.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteResult.InsertedCount">
            <summary>
            Gets the number of documents that were inserted.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteResult.IsAcknowledged">
            <summary>
            Gets a value indicating whether the bulk write operation was acknowledged.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteResult.IsModifiedCountAvailable">
            <summary>
            Gets a value indicating whether the modified count is available.
            </summary>
            <remarks>
            The modified count is only available when all servers have been upgraded to 2.6 or above.
            </remarks>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteResult.MatchedCount">
            <summary>
            Gets the number of documents that were matched.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteResult.ModifiedCount">
            <summary>
            Gets the number of documents that were actually modified during an update.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteResult.RequestCount">
            <summary>
            Gets the request count.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteResult.Upserts">
            <summary>
            Gets a list with information about each request that resulted in an upsert.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.BulkWriteResult`1">
            <summary>
            Represents the result of a bulk write operation.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.BulkWriteResult`1.#ctor(System.Int32,System.Collections.Generic.IEnumerable{MongoDB.Driver.WriteModel{`0}})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.BulkWriteResult" /> class.
            </summary>
            <param name="requestCount">The request count.</param>
            <param name="processedRequests">The processed requests.</param>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteResult`1.ProcessedRequests">
            <summary>
            Gets the processed requests.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.BulkWriteResult`1.Acknowledged">
            <summary>
            Result from an acknowledged write concern.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.BulkWriteResult`1.Acknowledged.#ctor(System.Int32,System.Int64,System.Int64,System.Int64,System.Nullable{System.Int64},System.Collections.Generic.IEnumerable{MongoDB.Driver.WriteModel{`0}},System.Collections.Generic.IEnumerable{MongoDB.Driver.BulkWriteUpsert})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.BulkWriteResult`1.Acknowledged" /> class.
            </summary>
            <param name="requestCount">The request count.</param>
            <param name="matchedCount">The matched count.</param>
            <param name="deletedCount">The deleted count.</param>
            <param name="insertedCount">The inserted count.</param>
            <param name="modifiedCount">The modified count.</param>
            <param name="processedRequests">The processed requests.</param>
            <param name="upserts">The upserts.</param>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteResult`1.Acknowledged.DeletedCount">
            <inheritdoc/>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteResult`1.Acknowledged.InsertedCount">
            <inheritdoc/>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteResult`1.Acknowledged.IsAcknowledged">
            <inheritdoc/>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteResult`1.Acknowledged.IsModifiedCountAvailable">
            <inheritdoc/>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteResult`1.Acknowledged.MatchedCount">
            <inheritdoc/>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteResult`1.Acknowledged.ModifiedCount">
            <inheritdoc/>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteResult`1.Acknowledged.Upserts">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.BulkWriteResult`1.Unacknowledged">
            <summary>
            Result from an unacknowledged write concern.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.BulkWriteResult`1.Unacknowledged.#ctor(System.Int32,System.Collections.Generic.IEnumerable{MongoDB.Driver.WriteModel{`0}})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.BulkWriteResult`1.Unacknowledged"/> class.
            </summary>
            <param name="requestCount">The request count.</param>
            <param name="processedRequests">The processed requests.</param>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteResult`1.Unacknowledged.DeletedCount">
            <inheritdoc/>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteResult`1.Unacknowledged.InsertedCount">
            <inheritdoc/>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteResult`1.Unacknowledged.IsAcknowledged">
            <inheritdoc/>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteResult`1.Unacknowledged.IsModifiedCountAvailable">
            <inheritdoc/>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteResult`1.Unacknowledged.MatchedCount">
            <inheritdoc/>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteResult`1.Unacknowledged.ModifiedCount">
            <inheritdoc/>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteResult`1.Unacknowledged.Upserts">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.BulkWriteUpsert">
            <summary>
            Represents the information about one Upsert.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteUpsert.Id">
            <summary>
            Gets the id.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteUpsert.Index">
            <summary>
            Gets the index.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.BulkWriteUpsert.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.BulkWriteUpsert.GetHashCode">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.ChangeStreamOptions">
            <summary>
            Options for a change stream operation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ChangeStreamOptions.BatchSize">
            <summary>
            Gets or sets the size of the batch.
            </summary>
            <value>
            The size of the batch.
            </value>
        </member>
        <member name="P:MongoDB.Driver.ChangeStreamOptions.Collation">
            <summary>
            Gets or sets the collation.
            </summary>
            <value>
            The collation.
            </value>
        </member>
        <member name="P:MongoDB.Driver.ChangeStreamOptions.FullDocument">
            <summary>
            Gets or sets the full document.
            </summary>
            <value>
            The full document.
            </value>
        </member>
        <member name="P:MongoDB.Driver.ChangeStreamOptions.MaxAwaitTime">
            <summary>
            Gets or sets the maximum await time.
            </summary>
            <value>
            The maximum await time.
            </value>
        </member>
        <member name="P:MongoDB.Driver.ChangeStreamOptions.ResumeAfter">
            <summary>
            Gets or sets the resume after.
            </summary>
            <value>
            The resume after.
            </value>
        </member>
        <member name="P:MongoDB.Driver.ChangeStreamOptions.StartAfter">
            <summary>
            Gets or sets the start after.
            </summary>
            <value>
            The start after.
            </value>
        </member>
        <member name="P:MongoDB.Driver.ChangeStreamOptions.StartAtOperationTime">
            <summary>
            Gets or sets the start at operation time.
            </summary>
            <value>
            The start at operation time.
            </value>
        </member>
        <member name="T:MongoDB.Driver.ChangeStreamStageOptions">
            <summary>
            Options for a $changeStream stage.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ChangeStreamStageOptions.AllChangesForCluster">
            <summary>
            Gets or sets whether to include all changes for an entire cluster in the change stream.
            </summary>
            <value>
            Whether to include all changes for an entire cluster in the change stream.
            </value>
        </member>
        <member name="P:MongoDB.Driver.ChangeStreamStageOptions.FullDocument">
            <summary>
            Gets or sets the full document.
            </summary>
            <value>
            The full document.
            </value>
        </member>
        <member name="P:MongoDB.Driver.ChangeStreamStageOptions.ResumeAfter">
            <summary>
            Gets or sets the resume after.
            </summary>
            <value>
            The resume after.
            </value>
        </member>
        <member name="P:MongoDB.Driver.ChangeStreamStageOptions.StartAfter">
            <summary>
            Get or sets the start after.
            </summary>
            <value>
            The start after.
            </value>
        </member>
        <member name="P:MongoDB.Driver.ChangeStreamStageOptions.StartAtOperationTime">
            <summary>
            Gets or sets the start at operation time.
            </summary>
            <value>
            The start at operation time.
            </value>
        </member>
        <member name="T:MongoDB.Driver.ClientSessionHandle">
            <summary>
            A client session handle.
            </summary>
            <seealso cref="T:MongoDB.Driver.IClientSessionHandle" />
        </member>
        <member name="M:MongoDB.Driver.ClientSessionHandle.#ctor(MongoDB.Driver.IMongoClient,MongoDB.Driver.ClientSessionOptions,MongoDB.Driver.Core.Bindings.ICoreSessionHandle)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.ClientSessionHandle" /> class.
            </summary>
            <param name="client">The client.</param>
            <param name="options">The options.</param>
            <param name="coreSession">The wrapped session.</param>
        </member>
        <member name="P:MongoDB.Driver.ClientSessionHandle.Client">
            <inheritdoc />
        </member>
        <member name="P:MongoDB.Driver.ClientSessionHandle.ClusterTime">
            <inheritdoc />
        </member>
        <member name="P:MongoDB.Driver.ClientSessionHandle.IsImplicit">
            <inheritdoc />
        </member>
        <member name="P:MongoDB.Driver.ClientSessionHandle.IsInTransaction">
            <inheritdoc />
        </member>
        <member name="P:MongoDB.Driver.ClientSessionHandle.OperationTime">
            <inheritdoc />
        </member>
        <member name="P:MongoDB.Driver.ClientSessionHandle.Options">
            <inheritdoc />
        </member>
        <member name="P:MongoDB.Driver.ClientSessionHandle.ServerSession">
            <inheritdoc />
        </member>
        <member name="P:MongoDB.Driver.ClientSessionHandle.WrappedCoreSession">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.ClientSessionHandle.AbortTransaction(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.ClientSessionHandle.AbortTransactionAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.ClientSessionHandle.AdvanceClusterTime(MongoDB.Bson.BsonDocument)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.ClientSessionHandle.AdvanceOperationTime(MongoDB.Bson.BsonTimestamp)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.ClientSessionHandle.CommitTransaction(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.ClientSessionHandle.CommitTransactionAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.ClientSessionHandle.Dispose">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.ClientSessionHandle.Fork">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.ClientSessionHandle.StartTransaction(MongoDB.Driver.TransactionOptions)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.ClientSessionHandle.WithTransaction``1(System.Func{MongoDB.Driver.IClientSessionHandle,System.Threading.CancellationToken,``0},MongoDB.Driver.TransactionOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.ClientSessionHandle.WithTransactionAsync``1(System.Func{MongoDB.Driver.IClientSessionHandle,System.Threading.CancellationToken,System.Threading.Tasks.Task{``0}},MongoDB.Driver.TransactionOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.ClientSessionOptions">
            <summary>
            Client session options.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ClientSessionOptions.CausalConsistency">
            <summary>
            When true or unspecified, an application will read its own writes and subsequent
            reads will never observe an earlier version of the data.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ClientSessionOptions.DefaultTransactionOptions">
            <summary>
            Gets or sets the default transaction options.
            </summary>
            <value>
            The default transaction options.
            </value>
        </member>
        <member name="T:MongoDB.Driver.ClusterRegistry">
            <summary>
            Represents a registry of already created clusters.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ClusterRegistry.Instance">
            <summary>
            Gets the default cluster registry.
            </summary>
            <value>
            The default cluster registry.
            </value>
        </member>
        <member name="M:MongoDB.Driver.ClusterRegistry.UnregisterAndDisposeCluster(MongoDB.Driver.Core.Clusters.ICluster)">
            <summary>
            Unregisters and disposes the cluster.
            </summary>
            <param name="cluster">The cluster.</param>
        </member>
        <member name="T:MongoDB.Driver.RenderedCommand`1">
            <summary>
            A rendered command.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.RenderedCommand`1.#ctor(MongoDB.Bson.BsonDocument,MongoDB.Bson.Serialization.IBsonSerializer{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.RenderedCommand`1" /> class.
            </summary>
            <param name="document">The document.</param>
            <param name="resultSerializer">The result serializer.</param>
        </member>
        <member name="P:MongoDB.Driver.RenderedCommand`1.Document">
            <summary>
            Gets the document.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.RenderedCommand`1.ResultSerializer">
            <summary>
            Gets the result serializer.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Command`1">
            <summary>
            Base class for commands.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.Command`1.Render(MongoDB.Bson.Serialization.IBsonSerializerRegistry)">
            <summary>
            Renders the command to a <see cref="T:MongoDB.Driver.RenderedCommand`1" />.
            </summary>
            <param name="serializerRegistry">The serializer registry.</param>
            <returns>A <see cref="T:MongoDB.Driver.RenderedCommand`1" />.</returns>
        </member>
        <member name="M:MongoDB.Driver.Command`1.op_Implicit(MongoDB.Bson.BsonDocument)~MongoDB.Driver.Command{`0}">
            <summary>
            Performs an implicit conversion from <see cref="T:MongoDB.Bson.BsonDocument"/> to <see cref="T:MongoDB.Driver.Command`1"/>.
            </summary>
            <param name="document">The document.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Command`1.op_Implicit(System.String)~MongoDB.Driver.Command{`0}">
            <summary>
            Performs an implicit conversion from <see cref="T:System.String"/> to <see cref="T:MongoDB.Driver.Command`1"/>.
            </summary>
            <param name="json">The JSON string.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="T:MongoDB.Driver.BsonDocumentCommand`1">
            <summary>
            A <see cref="T:MongoDB.Bson.BsonDocument" /> based command.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.BsonDocumentCommand`1.#ctor(MongoDB.Bson.BsonDocument,MongoDB.Bson.Serialization.IBsonSerializer{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.BsonDocumentCommand`1"/> class.
            </summary>
            <param name="document">The document.</param>
            <param name="resultSerializer">The result serializer.</param>
        </member>
        <member name="P:MongoDB.Driver.BsonDocumentCommand`1.Document">
            <summary>
            Gets the document.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.BsonDocumentCommand`1.ResultSerializer">
            <summary>
            Gets the result serializer.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.BsonDocumentCommand`1.Render(MongoDB.Bson.Serialization.IBsonSerializerRegistry)">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.JsonCommand`1">
            <summary>
            A JSON <see cref="T:System.String" /> based command.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.JsonCommand`1.#ctor(System.String,MongoDB.Bson.Serialization.IBsonSerializer{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.JsonCommand`1"/> class.
            </summary>
            <param name="json">The json.</param>
            <param name="resultSerializer">The result serializer.</param>
        </member>
        <member name="P:MongoDB.Driver.JsonCommand`1.Json">
            <summary>
            Gets the json.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.JsonCommand`1.ResultSerializer">
            <summary>
            Gets the result serializer.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.JsonCommand`1.Render(MongoDB.Bson.Serialization.IBsonSerializerRegistry)">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.ObjectCommand`1">
            <summary>
            An <see cref="P:MongoDB.Driver.ObjectCommand`1.Object" /> based command.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.ObjectCommand`1.#ctor(System.Object,MongoDB.Bson.Serialization.IBsonSerializer{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.ObjectCommand`1"/> class.
            </summary>
            <param name="obj">The object.</param>
            <param name="resultSerializer">The result serializer.</param>
        </member>
        <member name="P:MongoDB.Driver.ObjectCommand`1.Object">
            <summary>
            Gets the object.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ObjectCommand`1.ResultSerializer">
            <summary>
            Gets the result serializer.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.ObjectCommand`1.Render(MongoDB.Bson.Serialization.IBsonSerializerRegistry)">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.ConnectionMode">
            <summary>
            Server connection mode.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.ConnectionMode.Automatic">
            <summary>
            Automatically determine how to connect.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.ConnectionMode.Direct">
            <summary>
            Connect directly to a server.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.ConnectionMode.ReplicaSet">
            <summary>
            Connect to a replica set.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.ConnectionMode.ShardRouter">
            <summary>
            Connect to one or more shard routers.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.ConnectionMode.Standalone">
            <summary>
            Connect to a standalone server.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.CountOptions">
            <summary>
            Options for a count operation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CountOptions.Collation">
            <summary>
            Gets or sets the collation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CountOptions.Hint">
            <summary>
            Gets or sets the hint.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CountOptions.Limit">
            <summary>
            Gets or sets the limit.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CountOptions.MaxTime">
            <summary>
            Gets or sets the maximum time.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CountOptions.Skip">
            <summary>
            Gets or sets the skip.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.CreateCollectionOptions">
            <summary>
            Options for creating a collection.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CreateCollectionOptions.Collation">
            <summary>
            Gets or sets the collation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CreateCollectionOptions.AutoIndexId">
            <summary>
            Gets or sets a value indicating whether to automatically create an index on the _id.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CreateCollectionOptions.Capped">
            <summary>
            Gets or sets a value indicating whether the collection is capped.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CreateCollectionOptions.IndexOptionDefaults">
            <summary>
            Gets or sets the index option defaults.
            </summary>
            <value>
            The index option defaults.
            </value>
        </member>
        <member name="P:MongoDB.Driver.CreateCollectionOptions.MaxDocuments">
            <summary>
            Gets or sets the maximum number of documents (used with capped collections).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CreateCollectionOptions.MaxSize">
            <summary>
            Gets or sets the maximum size of the collection (used with capped collections).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CreateCollectionOptions.NoPadding">
            <summary>
            Gets or sets whether padding should not be used.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CreateCollectionOptions.SerializerRegistry">
            <summary>
            Gets or sets the serializer registry.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CreateCollectionOptions.StorageEngine">
            <summary>
            Gets or sets the storage engine options.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CreateCollectionOptions.UsePowerOf2Sizes">
            <summary>
            Gets or sets a value indicating whether to use power of 2 sizes.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CreateCollectionOptions.ValidationAction">
            <summary>
            Gets or sets the validation action.
            </summary>
            <value>
            The validation action.
            </value>
        </member>
        <member name="P:MongoDB.Driver.CreateCollectionOptions.ValidationLevel">
            <summary>
            Gets or sets the validation level.
            </summary>
            <value>
            The validation level.
            </value>
        </member>
        <member name="T:MongoDB.Driver.CreateCollectionOptions`1">
            <summary>
            Options for creating a collection.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.CreateCollectionOptions`1.CoercedFrom(MongoDB.Driver.CreateCollectionOptions)">
            <summary>
            Coerces a generic CreateCollectionOptions{TDocument} from a non-generic CreateCollectionOptions.
            </summary>
            <param name="options">The options.</param>
            <returns>The generic options.</returns>
        </member>
        <member name="P:MongoDB.Driver.CreateCollectionOptions`1.DocumentSerializer">
            <summary>
            Gets or sets the document serializer.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CreateCollectionOptions`1.Validator">
            <summary>
            Gets or sets the validator.
            </summary>
            <value>
            The validator.
            </value>
        </member>
        <member name="T:MongoDB.Driver.CreateIndexModel`1">
            <summary>
            Model for creating an index.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.CreateIndexModel`1.#ctor(MongoDB.Driver.IndexKeysDefinition{`0},MongoDB.Driver.CreateIndexOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.CreateIndexModel`1"/> class.
            </summary>
            <param name="keys">The keys.</param>
            <param name="options">The options.</param>
        </member>
        <member name="P:MongoDB.Driver.CreateIndexModel`1.Keys">
            <summary>
            Gets the keys.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CreateIndexModel`1.Options">
            <summary>
            Gets the options.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.CreateIndexOptions">
            <summary>
            Options for creating an index.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CreateIndexOptions.Background">
            <summary>
            Gets or sets a value indicating whether to create the index in the background.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CreateIndexOptions.Bits">
            <summary>
            Gets or sets the precision, in bits, used with geohash indexes.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CreateIndexOptions.BucketSize">
            <summary>
            Gets or sets the size of a geohash bucket.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CreateIndexOptions.Collation">
            <summary>
            Gets or sets the collation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CreateIndexOptions.DefaultLanguage">
            <summary>
            Gets or sets the default language.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CreateIndexOptions.ExpireAfter">
            <summary>
            Gets or sets when documents expire (used with TTL indexes).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CreateIndexOptions.LanguageOverride">
            <summary>
            Gets or sets the language override.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CreateIndexOptions.Max">
            <summary>
            Gets or sets the max value for 2d indexes.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CreateIndexOptions.Min">
            <summary>
            Gets or sets the min value for 2d indexes.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CreateIndexOptions.Name">
            <summary>
            Gets or sets the index name.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CreateIndexOptions.Sparse">
            <summary>
            Gets or sets a value indicating whether the index is a sparse index.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CreateIndexOptions.SphereIndexVersion">
            <summary>
            Gets or sets the index version for 2dsphere indexes.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CreateIndexOptions.StorageEngine">
            <summary>
            Gets or sets the storage engine options.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CreateIndexOptions.TextIndexVersion">
            <summary>
            Gets or sets the index version for text indexes.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CreateIndexOptions.Unique">
            <summary>
            Gets or sets a value indicating whether the index is a unique index.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CreateIndexOptions.Version">
            <summary>
            Gets or sets the version of the index.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CreateIndexOptions.Weights">
            <summary>
            Gets or sets the weights for text indexes.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.CreateIndexOptions`1">
            <summary>
            Options for creating an index.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="P:MongoDB.Driver.CreateIndexOptions`1.PartialFilterExpression">
            <summary>
            Gets or sets the partial filter expression.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CreateIndexOptions`1.WildcardProjection">
            <summary>
            Gets or sets the wildcard projection.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.CreateManyIndexesOptions">
            <summary>
            Options for creating multiple indexes.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CreateManyIndexesOptions.MaxTime">
            <summary>
            Gets or sets the maximum time.
            </summary>
            <value>The maximum time.</value>
        </member>
        <member name="T:MongoDB.Driver.CreateOneIndexOptions">
            <summary>
            Options for creating a single index.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CreateOneIndexOptions.MaxTime">
            <summary>
            Gets or sets the maximum time.
            </summary>
            <value>The maximum time.</value>
        </member>
        <member name="T:MongoDB.Driver.CreateViewOptions`1">
            <summary>
            Options for creating a view.
            </summary>
            <typeparam name="TDocument">The type of the documents.</typeparam>
        </member>
        <member name="P:MongoDB.Driver.CreateViewOptions`1.Collation">
            <summary>
            Gets or sets the collation.
            </summary>
            <value>
            The collation.
            </value>
        </member>
        <member name="P:MongoDB.Driver.CreateViewOptions`1.DocumentSerializer">
            <summary>
            Gets or sets the document serializer.
            </summary>
            <value>
            The document serializer.
            </value>
        </member>
        <member name="P:MongoDB.Driver.CreateViewOptions`1.SerializerRegistry">
            <summary>
            Gets or sets the serializer registry.
            </summary>
            <value>
            The serializer registry.
            </value>
        </member>
        <member name="T:MongoDB.Driver.CursorType">
            <summary>
            The cursor type.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.CursorType.NonTailable">
            <summary>
            A non-tailable cursor. This is sufficient for a vast majority of uses.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.CursorType.Tailable">
            <summary>
            A tailable cursor.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.CursorType.TailableAwait">
            <summary>
            A tailable cursor with a built-in server sleep.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.DeleteManyModel`1">
            <summary>
            Model for deleting many documents.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.DeleteManyModel`1.#ctor(MongoDB.Driver.FilterDefinition{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.DeleteManyModel`1"/> class.
            </summary>
            <param name="filter">The filter.</param>
        </member>
        <member name="P:MongoDB.Driver.DeleteManyModel`1.Collation">
            <summary>
            Gets or sets the collation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.DeleteManyModel`1.Filter">
            <summary>
            Gets the filter.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.DeleteManyModel`1.ModelType">
            <summary>
            Gets the type of the model.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.DeleteOneModel`1">
            <summary>
            Model for deleting a single document.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.DeleteOneModel`1.#ctor(MongoDB.Driver.FilterDefinition{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.DeleteOneModel`1"/> class.
            </summary>
            <param name="filter">The filter.</param>
        </member>
        <member name="P:MongoDB.Driver.DeleteOneModel`1.Collation">
            <summary>
            Gets or sets the collation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.DeleteOneModel`1.Filter">
            <summary>
            Gets the filter.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.DeleteOneModel`1.ModelType">
            <summary>
            Gets the type of the model.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.DeleteOptions">
            <summary>
            Options for the Delete methods.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.DeleteOptions.Collation">
            <summary>
            Gets or sets the collation.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.DeleteResult">
            <summary>
            The result of a delete operation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.DeleteResult.DeletedCount">
            <summary>
            Gets the deleted count. If IsAcknowledged is false, this will throw an exception.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.DeleteResult.IsAcknowledged">
            <summary>
            Gets a value indicating whether the result is acknowledged.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.DeleteResult.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.DeleteResult"/> class.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.DeleteResult.Acknowledged">
            <summary>
            The result of an acknowledged delete operation.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.DeleteResult.Acknowledged.#ctor(System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.DeleteResult.Acknowledged"/> class.
            </summary>
            <param name="deletedCount">The deleted count.</param>
        </member>
        <member name="P:MongoDB.Driver.DeleteResult.Acknowledged.DeletedCount">
            <inheritdoc/>
        </member>
        <member name="P:MongoDB.Driver.DeleteResult.Acknowledged.IsAcknowledged">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.DeleteResult.Unacknowledged">
            <summary>
            The result of an unacknowledged delete operation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.DeleteResult.Unacknowledged.Instance">
            <summary>
            Gets the instance.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.DeleteResult.Unacknowledged.DeletedCount">
            <inheritdoc/>
        </member>
        <member name="P:MongoDB.Driver.DeleteResult.Unacknowledged.IsAcknowledged">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.DistinctOptions">
            <summary>
            Options for the distinct command.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.DistinctOptions.Collation">
            <summary>
            Gets or sets the collation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.DistinctOptions.MaxTime">
            <summary>
            Gets or sets the maximum time.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.DropIndexOptions">
            <summary>
            Options for dropping an index.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.DropIndexOptions.MaxTime">
            <summary>
            Gets or sets the maximum time.
            </summary>
            <value>The maximum time.</value>
        </member>
        <member name="T:MongoDB.Driver.Encryption.AutoEncryptionOptions">
            <summary>
            Auto encryption options.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Encryption.AutoEncryptionOptions.#ctor(MongoDB.Driver.CollectionNamespace,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object}},MongoDB.Driver.Optional{System.Boolean},MongoDB.Driver.Optional{System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object}},MongoDB.Driver.Optional{MongoDB.Driver.IMongoClient},MongoDB.Driver.Optional{System.Collections.Generic.IReadOnlyDictionary{System.String,MongoDB.Bson.BsonDocument}})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Encryption.AutoEncryptionOptions"/> class.
            </summary>
            <param name="keyVaultNamespace">The keyVault namespace.</param>
            <param name="kmsProviders">The kms providers.</param>
            <param name="bypassAutoEncryption">The bypass auto encryption flag.</param>
            <param name="extraOptions">The extra options.</param>
            <param name="keyVaultClient">The keyVault client.</param>
            <param name="schemaMap">The schema map.</param>
        </member>
        <member name="P:MongoDB.Driver.Encryption.AutoEncryptionOptions.BypassAutoEncryption">
            <summary>
            Gets a value indicating whether to bypass automatic encryption.
            </summary>
            <value>
              <c>true</c> if automatic encryption should be bypasssed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Encryption.AutoEncryptionOptions.ExtraOptions">
            <summary>
            Gets the extra options.
            </summary>
            <value>
            The extra options.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Encryption.AutoEncryptionOptions.KeyVaultClient">
            <summary>
            Gets the key vault client.
            </summary>
            <value>
            The key vault client.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Encryption.AutoEncryptionOptions.KeyVaultNamespace">
            <summary>
            Gets the key vault namespace.
            </summary>
            <value>
            The key vault namespace.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Encryption.AutoEncryptionOptions.KmsProviders">
            <summary>
            Gets the KMS providers.
            </summary>
            <value>
            The KMS providers.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Encryption.AutoEncryptionOptions.SchemaMap">
            <summary>
            Gets the schema map.
            </summary>
            <value>
            The schema map.
            </value>
        </member>
        <member name="M:MongoDB.Driver.Encryption.AutoEncryptionOptions.With(MongoDB.Driver.Optional{MongoDB.Driver.CollectionNamespace},MongoDB.Driver.Optional{System.Collections.Generic.IReadOnlyDictionary{System.String,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object}}},MongoDB.Driver.Optional{System.Boolean},MongoDB.Driver.Optional{System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object}},MongoDB.Driver.Optional{MongoDB.Driver.IMongoClient},MongoDB.Driver.Optional{System.Collections.Generic.IReadOnlyDictionary{System.String,MongoDB.Bson.BsonDocument}})">
            <summary>
            Returns a new instance of the <see cref="T:MongoDB.Driver.Encryption.AutoEncryptionOptions"/> class.
            </summary>
            <param name="keyVaultNamespace">The keyVault namespace.</param>
            <param name="kmsProviders">The kms providers.</param>
            <param name="bypassAutoEncryption">The bypass auto encryption flag.</param>
            <param name="extraOptions">The extra options.</param>
            <param name="keyVaultClient">The keyVault client.</param>
            <param name="schemaMap">The schema map.</param>
            <returns>A new instance of <see cref="T:MongoDB.Driver.Encryption.AutoEncryptionOptions"/>.</returns>
        </member>
        <member name="M:MongoDB.Driver.Encryption.AutoEncryptionOptions.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.Encryption.AutoEncryptionOptions.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.Encryption.AutoEncryptionOptions.ToString">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.Encryption.ClientEncryption">
            <summary>
            Explicit client encryption.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Encryption.ClientEncryption.#ctor(MongoDB.Driver.Encryption.ClientEncryptionOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Encryption.ClientEncryption"/> class.
            </summary>
            <param name="clientEncryptionOptions">The client encryption options.</param>
        </member>
        <member name="M:MongoDB.Driver.Encryption.ClientEncryption.CreateDataKey(System.String,MongoDB.Driver.Encryption.DataKeyOptions,System.Threading.CancellationToken)">
            <summary>
            Creates a data key.
            </summary>
            <param name="kmsProvider">The kms provider.</param>
            <param name="dataKeyOptions">The data key options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A data key.</returns>
        </member>
        <member name="M:MongoDB.Driver.Encryption.ClientEncryption.CreateDataKeyAsync(System.String,MongoDB.Driver.Encryption.DataKeyOptions,System.Threading.CancellationToken)">
            <summary>
            Creates a data key.
            </summary>
            <param name="kmsProvider">The kms provider.</param>
            <param name="dataKeyOptions">The data key options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A data key.</returns>
        </member>
        <member name="M:MongoDB.Driver.Encryption.ClientEncryption.Decrypt(MongoDB.Bson.BsonBinaryData,System.Threading.CancellationToken)">
            <summary>
            Decrypts the specified value.
            </summary>
            <param name="value">The value.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The decrypted value.</returns>
        </member>
        <member name="M:MongoDB.Driver.Encryption.ClientEncryption.DecryptAsync(MongoDB.Bson.BsonBinaryData,System.Threading.CancellationToken)">
            <summary>
            Decrypts the specified value.
            </summary>
            <param name="value">The value.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The decrypted value.</returns>
        </member>
        <member name="M:MongoDB.Driver.Encryption.ClientEncryption.Dispose">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.Encryption.ClientEncryption.Encrypt(MongoDB.Bson.BsonValue,MongoDB.Driver.Encryption.EncryptOptions,System.Threading.CancellationToken)">
            <summary>
            Encrypts the specified value.
            </summary>
            <param name="value">The value.</param>
            <param name="encryptOptions">The encrypt options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The encrypted value.</returns>
        </member>
        <member name="M:MongoDB.Driver.Encryption.ClientEncryption.EncryptAsync(MongoDB.Bson.BsonValue,MongoDB.Driver.Encryption.EncryptOptions,System.Threading.CancellationToken)">
            <summary>
            Encrypts the specified value.
            </summary>
            <param name="value">The value.</param>
            <param name="encryptOptions">The encrypt options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The encrypted value.</returns>
        </member>
        <member name="T:MongoDB.Driver.Encryption.ClientEncryptionOptions">
            <summary>
            Client encryption options.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Encryption.ClientEncryptionOptions.#ctor(MongoDB.Driver.IMongoClient,MongoDB.Driver.CollectionNamespace,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object}})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Encryption.ClientEncryptionOptions"/> class.
            </summary>
            <param name="keyVaultClient">The key vault client.</param>
            <param name="keyVaultNamespace">The key vault namespace.</param>
            <param name="kmsProviders">The KMS providers.</param>
        </member>
        <member name="P:MongoDB.Driver.Encryption.ClientEncryptionOptions.KeyVaultClient">
            <summary>
            Gets the key vault client.
            </summary>
            <value>
            The key vault client.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Encryption.ClientEncryptionOptions.KeyVaultNamespace">
            <summary>
            Gets the key vault namespace.
            </summary>
            <value>
            The key vault namespace.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Encryption.ClientEncryptionOptions.KmsProviders">
            <summary>
            Gets the KMS providers.
            </summary>
            <value>
            The KMS providers.
            </value>
        </member>
        <member name="M:MongoDB.Driver.Encryption.ClientEncryptionOptions.With(MongoDB.Driver.Optional{MongoDB.Driver.IMongoClient},MongoDB.Driver.Optional{MongoDB.Driver.CollectionNamespace},MongoDB.Driver.Optional{System.Collections.Generic.IReadOnlyDictionary{System.String,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object}}})">
            <summary>
            Returns a new ClientEncryptionOptions instance with some settings changed.
            </summary>
            <param name="keyVaultClient">The key vault client.</param>
            <param name="keyVaultNamespace">The key vault namespace.</param>
            <param name="kmsProviders">The KMS providers.</param>
            <returns>A new ClientEncryptionOptions instance.</returns>
        </member>
        <member name="T:MongoDB.Driver.Encryption.DataKeyOptions">
            <summary>
            Options for creating a data key.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Encryption.DataKeyOptions.#ctor(MongoDB.Driver.Optional{System.Collections.Generic.IReadOnlyList{System.String}},MongoDB.Driver.Optional{MongoDB.Bson.BsonDocument})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Encryption.DataKeyOptions"/> class.
            </summary>
            <param name="alternateKeyNames">The alternate key names.</param>
            <param name="masterKey">The master key.</param>
        </member>
        <member name="P:MongoDB.Driver.Encryption.DataKeyOptions.AlternateKeyNames">
            <summary>
            Gets the alternate key names.
            </summary>
            <value>
            The alternate key names.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Encryption.DataKeyOptions.MasterKey">
            <summary>
            Gets the master key.
            </summary>
            <value>
            The master key.
            </value>
        </member>
        <member name="M:MongoDB.Driver.Encryption.DataKeyOptions.With(MongoDB.Driver.Optional{System.Collections.Generic.IReadOnlyList{System.String}},MongoDB.Driver.Optional{MongoDB.Bson.BsonDocument})">
            <summary>
            Returns a new DataKeyOptions instance with some settings changed.
            </summary>
            <param name="alternateKeyNames">The alternate key names.</param>
            <param name="masterKey">The master key.</param>
            <returns>A new DataKeyOptions instance.</returns>
        </member>
        <member name="T:MongoDB.Driver.Encryption.EncryptOptions">
            <summary>
            Encryption options for explicit encryption.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Encryption.EncryptOptions.#ctor(System.String,MongoDB.Driver.Optional{System.String},MongoDB.Driver.Optional{System.Nullable{System.Guid}})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Encryption.EncryptOptions"/> class.
            </summary>
            <param name="algorithm">The encryption algorithm.</param>
            <param name="alternateKeyName">The alternate key name.</param>
            <param name="keyId">The key Id.</param>
        </member>
        <member name="P:MongoDB.Driver.Encryption.EncryptOptions.Algorithm">
            <summary>
            Gets the algorithm.
            </summary>
            <value>
            The algorithm.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Encryption.EncryptOptions.AlternateKeyName">
            <summary>
            Gets the alternate key name.
            </summary>
            <value>
            The alternate key name.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Encryption.EncryptOptions.KeyId">
            <summary>
            Gets the key identifier.
            </summary>
            <value>
            The key identifier.
            </value>
        </member>
        <member name="M:MongoDB.Driver.Encryption.EncryptOptions.With(MongoDB.Driver.Optional{System.String},MongoDB.Driver.Optional{System.String},MongoDB.Driver.Optional{System.Nullable{System.Guid}})">
            <summary>
            Returns a new EncryptOptions instance with some settings changed.
            </summary>
            <param name="algorithm">The encryption algorithm.</param>
            <param name="alternateKeyName">The alternate key name.</param>
            <param name="keyId">The keyId.</param>
            <returns>A new EncryptOptions instance.</returns>
        </member>
        <member name="T:MongoDB.Driver.Encryption.MongoEncryptionException">
            <summary>
            Represents an encryption exception.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Encryption.MongoEncryptionException.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Encryption.MongoEncryptionException"/> class.
            </summary>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:MongoDB.Driver.EstimatedDocumentCountOptions">
            <summary>
            Options for estimated document count.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.EstimatedDocumentCountOptions.MaxTime">
            <summary>
            Gets or sets the maximum time.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.ExpressionTranslationOptions">
            <summary>
            Options for controlling translation from .NET expression trees into MongoDB expressions.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ExpressionTranslationOptions.StringTranslationMode">
            <summary>
            Gets or sets the string translation mode.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.ExternalEvidence">
            <summary>
            Evidence of a MongoIdentity via an external mechanism.  For example, on windows this may 
            be the current process' user or, on linux, via kinit.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.ExternalEvidence.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.ExternalEvidence" /> class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.ExternalEvidence.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.ExternalEvidence.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="T:MongoDB.Driver.RenderedFieldDefinition">
            <summary>
            A rendered field.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.RenderedFieldDefinition.#ctor(System.String,MongoDB.Bson.Serialization.IBsonSerializer)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.RenderedFieldDefinition`1" /> class.
            </summary>
            <param name="fieldName">The field name.</param>
            <param name="fieldSerializer">The field serializer.</param>
        </member>
        <member name="P:MongoDB.Driver.RenderedFieldDefinition.FieldName">
            <summary>
            Gets the field name.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.RenderedFieldDefinition.FieldSerializer">
            <summary>
            Gets the field serializer.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.RenderedFieldDefinition`1">
            <summary>
            A rendered field.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.RenderedFieldDefinition`1.#ctor(System.String,MongoDB.Bson.Serialization.IBsonSerializer{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.RenderedFieldDefinition`1" /> class.
            </summary>
            <param name="fieldName">The field name.</param>
            <param name="fieldSerializer">The field serializer.</param>
        </member>
        <member name="M:MongoDB.Driver.RenderedFieldDefinition`1.#ctor(System.String,MongoDB.Bson.Serialization.IBsonSerializer{`0},MongoDB.Bson.Serialization.IBsonSerializer{`0},MongoDB.Bson.Serialization.IBsonSerializer)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.RenderedFieldDefinition`1" /> class.
            </summary>
            <param name="fieldName">The field name.</param>
            <param name="fieldSerializer">The field serializer.</param>
            <param name="valueSerializer">The value serializer.</param>
            <param name="underlyingSerializer">The underlying serializer.</param>
        </member>
        <member name="P:MongoDB.Driver.RenderedFieldDefinition`1.FieldName">
            <summary>
            Gets the field name.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.RenderedFieldDefinition`1.FieldSerializer">
            <summary>
            Gets the field serializer.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.RenderedFieldDefinition`1.UnderlyingSerializer">
            <summary>
            Gets the underlying serializer.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.RenderedFieldDefinition`1.ValueSerializer">
            <summary>
            Gets the value serializer.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.FieldDefinition`1">
            <summary>
            Base class for field names.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.FieldDefinition`1.Render(MongoDB.Bson.Serialization.IBsonSerializer{`0},MongoDB.Bson.Serialization.IBsonSerializerRegistry)">
            <summary>
            Renders the field to a <see cref="T:System.String"/>.
            </summary>
            <param name="documentSerializer">The document serializer.</param>
            <param name="serializerRegistry">The serializer registry.</param>
            <returns>A <see cref="T:System.String"/>.</returns>
        </member>
        <member name="M:MongoDB.Driver.FieldDefinition`1.op_Implicit(System.String)~MongoDB.Driver.FieldDefinition{`0}">
            <summary>
            Performs an implicit conversion from <see cref="T:System.String"/> to <see cref="T:MongoDB.Driver.FieldDefinition`1"/>.
            </summary>
            <param name="fieldName">Name of the field.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="T:MongoDB.Driver.FieldDefinition`2">
            <summary>
            Base class for field names.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TField">The type of the field.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.FieldDefinition`2.Render(MongoDB.Bson.Serialization.IBsonSerializer{`0},MongoDB.Bson.Serialization.IBsonSerializerRegistry)">
            <summary>
            Renders the field to a <see cref="T:MongoDB.Driver.RenderedFieldDefinition`1"/>.
            </summary>
            <param name="documentSerializer">The document serializer.</param>
            <param name="serializerRegistry">The serializer registry.</param>
            <returns>A <see cref="T:MongoDB.Driver.RenderedFieldDefinition`1"/>.</returns>
        </member>
        <member name="M:MongoDB.Driver.FieldDefinition`2.Render(MongoDB.Bson.Serialization.IBsonSerializer{`0},MongoDB.Bson.Serialization.IBsonSerializerRegistry,System.Boolean)">
            <summary>
            Renders the field to a <see cref="T:MongoDB.Driver.RenderedFieldDefinition`1"/>.
            </summary>
            <param name="documentSerializer">The document serializer.</param>
            <param name="serializerRegistry">The serializer registry.</param>
            <param name="allowScalarValueForArrayField">Whether a scalar value is allowed for an array field.</param>
            <returns>A <see cref="T:MongoDB.Driver.RenderedFieldDefinition`1"/>.</returns>
        </member>
        <member name="M:MongoDB.Driver.FieldDefinition`2.op_Implicit(System.String)~MongoDB.Driver.FieldDefinition{`0,`1}">
            <summary>
            Performs an implicit conversion from <see cref="T:System.String" /> to <see cref="T:MongoDB.Driver.FieldDefinition`2" />.
            </summary>
            <param name="fieldName">Name of the field.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.FieldDefinition`2.op_Implicit(MongoDB.Driver.FieldDefinition{`0,`1})~MongoDB.Driver.FieldDefinition{`0}">
            <summary>
            Performs an implicit conversion from <see cref="T:MongoDB.Driver.FieldDefinition`2"/> to <see cref="T:MongoDB.Driver.FieldDefinition`1"/>.
            </summary>
            <param name="field">The field.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="T:MongoDB.Driver.ExpressionFieldDefinition`1">
            <summary>
            An <see cref="P:MongoDB.Driver.ExpressionFieldDefinition`1.Expression" /> based field.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.ExpressionFieldDefinition`1.#ctor(System.Linq.Expressions.LambdaExpression)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.ExpressionFieldDefinition`1" /> class.
            </summary>
            <param name="expression">The expression.</param>
        </member>
        <member name="P:MongoDB.Driver.ExpressionFieldDefinition`1.Expression">
            <summary>
            Gets the expression.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.ExpressionFieldDefinition`1.Render(MongoDB.Bson.Serialization.IBsonSerializer{`0},MongoDB.Bson.Serialization.IBsonSerializerRegistry)">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.ExpressionFieldDefinition`2">
            <summary>
            An <see cref="P:MongoDB.Driver.ExpressionFieldDefinition`2.Expression" /> based field.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TField">The type of the field.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.ExpressionFieldDefinition`2.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1}})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.ExpressionFieldDefinition`2" /> class.
            </summary>
            <param name="expression">The expression.</param>
        </member>
        <member name="P:MongoDB.Driver.ExpressionFieldDefinition`2.Expression">
            <summary>
            Gets the expression.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.ExpressionFieldDefinition`2.Render(MongoDB.Bson.Serialization.IBsonSerializer{`0},MongoDB.Bson.Serialization.IBsonSerializerRegistry)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.ExpressionFieldDefinition`2.Render(MongoDB.Bson.Serialization.IBsonSerializer{`0},MongoDB.Bson.Serialization.IBsonSerializerRegistry,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.StringFieldDefinition`1">
            <summary>
            A <see cref="T:System.String" /> based field name.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.StringFieldDefinition`1.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.StringFieldDefinition`1" /> class.
            </summary>
            <param name="fieldName">Name of the field.</param>
        </member>
        <member name="M:MongoDB.Driver.StringFieldDefinition`1.Render(MongoDB.Bson.Serialization.IBsonSerializer{`0},MongoDB.Bson.Serialization.IBsonSerializerRegistry)">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.StringFieldDefinition`2">
            <summary>
            A <see cref="T:System.String" /> based field name.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TField">The type of the field.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.StringFieldDefinition`2.#ctor(System.String,MongoDB.Bson.Serialization.IBsonSerializer{`1})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.StringFieldDefinition`2" /> class.
            </summary>
            <param name="fieldName">Name of the field.</param>
            <param name="fieldSerializer">The field serializer.</param>
        </member>
        <member name="M:MongoDB.Driver.StringFieldDefinition`2.Render(MongoDB.Bson.Serialization.IBsonSerializer{`0},MongoDB.Bson.Serialization.IBsonSerializerRegistry)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.StringFieldDefinition`2.Render(MongoDB.Bson.Serialization.IBsonSerializer{`0},MongoDB.Bson.Serialization.IBsonSerializerRegistry,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.FilterDefinition`1">
            <summary>
            Base class for filters.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="P:MongoDB.Driver.FilterDefinition`1.Empty">
            <summary>
            Gets an empty filter. An empty filter matches everything.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinition`1.Render(MongoDB.Bson.Serialization.IBsonSerializer{`0},MongoDB.Bson.Serialization.IBsonSerializerRegistry)">
            <summary>
            Renders the filter to a <see cref="T:MongoDB.Bson.BsonDocument"/>.
            </summary>
            <param name="documentSerializer">The document serializer.</param>
            <param name="serializerRegistry">The serializer registry.</param>
            <returns>A <see cref="T:MongoDB.Bson.BsonDocument"/>.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinition`1.op_Implicit(MongoDB.Bson.BsonDocument)~MongoDB.Driver.FilterDefinition{`0}">
            <summary>
            Performs an implicit conversion from <see cref="T:MongoDB.Bson.BsonDocument"/> to <see cref="T:MongoDB.Driver.FilterDefinition`1"/>.
            </summary>
            <param name="document">The document.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinition`1.op_Implicit(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})~MongoDB.Driver.FilterDefinition{`0}">
            <summary>
            Performs an implicit conversion from a predicate expression to <see cref="T:MongoDB.Driver.FilterDefinition`1"/>.
            </summary>
            <param name="predicate">The predicate.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinition`1.op_Implicit(System.String)~MongoDB.Driver.FilterDefinition{`0}">
            <summary>
            Performs an implicit conversion from <see cref="T:System.String"/> to <see cref="T:MongoDB.Driver.FilterDefinition`1"/>.
            </summary>
            <param name="json">The JSON string.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinition`1.op_BitwiseAnd(MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.FilterDefinition{`0})">
            <summary>
            Implements the operator &amp;.
            </summary>
            <param name="lhs">The LHS.</param>
            <param name="rhs">The RHS.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinition`1.op_BitwiseOr(MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.FilterDefinition{`0})">
            <summary>
            Implements the operator |.
            </summary>
            <param name="lhs">The LHS.</param>
            <param name="rhs">The RHS.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinition`1.op_LogicalNot(MongoDB.Driver.FilterDefinition{`0})">
            <summary>
            Implements the operator !.
            </summary>
            <param name="op">The op.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="T:MongoDB.Driver.BsonDocumentFilterDefinition`1">
            <summary>
            A <see cref="T:MongoDB.Bson.BsonDocument"/> based filter.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.BsonDocumentFilterDefinition`1.#ctor(MongoDB.Bson.BsonDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.BsonDocumentFilterDefinition`1"/> class.
            </summary>
            <param name="document">The document.</param>
        </member>
        <member name="P:MongoDB.Driver.BsonDocumentFilterDefinition`1.Document">
            <summary>
            Gets the document.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.BsonDocumentFilterDefinition`1.Render(MongoDB.Bson.Serialization.IBsonSerializer{`0},MongoDB.Bson.Serialization.IBsonSerializerRegistry)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.EmptyFilterDefinition`1.Render(MongoDB.Bson.Serialization.IBsonSerializer{`0},MongoDB.Bson.Serialization.IBsonSerializerRegistry)">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.ExpressionFilterDefinition`1">
            <summary>
            An <see cref="P:MongoDB.Driver.ExpressionFilterDefinition`1.Expression"/> based filter.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.ExpressionFilterDefinition`1.#ctor(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.ExpressionFilterDefinition`1"/> class.
            </summary>
            <param name="expression">The expression.</param>
        </member>
        <member name="P:MongoDB.Driver.ExpressionFilterDefinition`1.Expression">
            <summary>
            Gets the expression.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.ExpressionFilterDefinition`1.Render(MongoDB.Bson.Serialization.IBsonSerializer{`0},MongoDB.Bson.Serialization.IBsonSerializerRegistry)">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.JsonFilterDefinition`1">
            <summary>
            A JSON <see cref="T:System.String" /> based filter.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.JsonFilterDefinition`1.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.JsonFilterDefinition`1" /> class.
            </summary>
            <param name="json">The json.</param>
        </member>
        <member name="P:MongoDB.Driver.JsonFilterDefinition`1.Json">
            <summary>
            Gets the json.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.JsonFilterDefinition`1.Render(MongoDB.Bson.Serialization.IBsonSerializer{`0},MongoDB.Bson.Serialization.IBsonSerializerRegistry)">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.ObjectFilterDefinition`1">
            <summary>
            An <see cref="P:MongoDB.Driver.ObjectFilterDefinition`1.Object" /> based filter.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.ObjectFilterDefinition`1.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.ObjectFilterDefinition`1"/> class.
            </summary>
            <param name="obj">The object.</param>
        </member>
        <member name="P:MongoDB.Driver.ObjectFilterDefinition`1.Object">
            <summary>
            Gets the object.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.ObjectFilterDefinition`1.Render(MongoDB.Bson.Serialization.IBsonSerializer{`0},MongoDB.Bson.Serialization.IBsonSerializerRegistry)">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.FilterDefinitionBuilder`1">
            <summary>
            A builder for a <see cref="T:MongoDB.Driver.FilterDefinition`1"/>.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="P:MongoDB.Driver.FilterDefinitionBuilder`1.Empty">
            <summary>
            Gets an empty filter. An empty filter matches everything.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.All``1(MongoDB.Driver.FieldDefinition{`0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Creates an all filter for an array field.
            </summary>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="field">The field.</param>
            <param name="values">The values.</param>
            <returns>An all filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.All``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Creates an all filter for an array field.
            </summary>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="field">The field.</param>
            <param name="values">The values.</param>
            <returns>An all filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.And(MongoDB.Driver.FilterDefinition{`0}[])">
            <summary>
            Creates an and filter.
            </summary>
            <param name="filters">The filters.</param>
            <returns>A filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.And(System.Collections.Generic.IEnumerable{MongoDB.Driver.FilterDefinition{`0}})">
            <summary>
            Creates an and filter.
            </summary>
            <param name="filters">The filters.</param>
            <returns>An and filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.AnyEq``1(MongoDB.Driver.FieldDefinition{`0},``0)">
            <summary>
            Creates an equality filter for an array field.
            </summary>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>An equality filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.AnyEq``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},``0)">
            <summary>
            Creates an equality filter for an array field.
            </summary>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>An equality filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.AnyGt``1(MongoDB.Driver.FieldDefinition{`0},``0)">
            <summary>
            Creates a greater than filter for an array field.
            </summary>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A greater than filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.AnyGt``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},``0)">
            <summary>
            Creates a greater than filter for an array field.
            </summary>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A greater than filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.AnyGte``1(MongoDB.Driver.FieldDefinition{`0},``0)">
            <summary>
            Creates a greater than or equal filter for an array field.
            </summary>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A greater than or equal filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.AnyGte``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},``0)">
            <summary>
            Creates a greater than or equal filter for an array field.
            </summary>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A greater than or equal filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.AnyLt``1(MongoDB.Driver.FieldDefinition{`0},``0)">
            <summary>
            Creates a less than filter for an array field.
            </summary>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A less than filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.AnyLt``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},``0)">
            <summary>
            Creates a less than filter for an array field.
            </summary>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A less than filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.AnyLte``1(MongoDB.Driver.FieldDefinition{`0},``0)">
            <summary>
            Creates a less than or equal filter for an array field.
            </summary>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A less than or equal filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.AnyLte``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},``0)">
            <summary>
            Creates a less than or equal filter for an array field.
            </summary>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A less than or equal filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.AnyIn``1(MongoDB.Driver.FieldDefinition{`0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Creates an in filter for an array field.
            </summary>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="field">The field.</param>
            <param name="values">The values.</param>
            <returns>An in filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.AnyIn``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Creates an in filter for an array field.
            </summary>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="field">The field.</param>
            <param name="values">The values.</param>
            <returns>An in filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.AnyNe``1(MongoDB.Driver.FieldDefinition{`0},``0)">
            <summary>
            Creates a not equal filter for an array field.
            </summary>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A not equal filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.AnyNe``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},``0)">
            <summary>
            Creates a not equal filter for an array field.
            </summary>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A not equal filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.AnyNin``1(MongoDB.Driver.FieldDefinition{`0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Creates a not in filter for an array field.
            </summary>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="field">The field.</param>
            <param name="values">The values.</param>
            <returns>A not in filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.AnyNin``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Creates a not in filter for an array field.
            </summary>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="field">The field.</param>
            <param name="values">The values.</param>
            <returns>A not in filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.BitsAllClear(MongoDB.Driver.FieldDefinition{`0},System.Int64)">
            <summary>
            Creates a bits all clear filter.
            </summary>
            <param name="field">The field.</param>
            <param name="bitmask">The bitmask.</param>
            <returns>A bits all clear filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.BitsAllClear(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Int64)">
            <summary>
            Creates a bits all clear filter.
            </summary>
            <param name="field">The field.</param>
            <param name="bitmask">The bitmask.</param>
            <returns>A bits all clear filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.BitsAllSet(MongoDB.Driver.FieldDefinition{`0},System.Int64)">
            <summary>
            Creates a bits all set filter.
            </summary>
            <param name="field">The field.</param>
            <param name="bitmask">The bitmask.</param>
            <returns>A bits all set filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.BitsAllSet(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Int64)">
            <summary>
            Creates a bits all set filter.
            </summary>
            <param name="field">The field.</param>
            <param name="bitmask">The bitmask.</param>
            <returns>A bits all set filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.BitsAnyClear(MongoDB.Driver.FieldDefinition{`0},System.Int64)">
            <summary>
            Creates a bits any clear filter.
            </summary>
            <param name="field">The field.</param>
            <param name="bitmask">The bitmask.</param>
            <returns>A bits any clear filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.BitsAnyClear(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Int64)">
            <summary>
            Creates a bits any clear filter.
            </summary>
            <param name="field">The field.</param>
            <param name="bitmask">The bitmask.</param>
            <returns>A bits any clear filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.BitsAnySet(MongoDB.Driver.FieldDefinition{`0},System.Int64)">
            <summary>
            Creates a bits any set filter.
            </summary>
            <param name="field">The field.</param>
            <param name="bitmask">The bitmask.</param>
            <returns>A bits any set filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.BitsAnySet(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Int64)">
            <summary>
            Creates a bits any set filter.
            </summary>
            <param name="field">The field.</param>
            <param name="bitmask">The bitmask.</param>
            <returns>A bits any set filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.ElemMatch``1(MongoDB.Driver.FieldDefinition{`0},MongoDB.Driver.FilterDefinition{``0})">
            <summary>
            Creates an element match filter for an array field.
            </summary>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="field">The field.</param>
            <param name="filter">The filter.</param>
            <returns>An element match filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.ElemMatch``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},MongoDB.Driver.FilterDefinition{``0})">
            <summary>
            Creates an element match filter for an array field.
            </summary>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="field">The field.</param>
            <param name="filter">The filter.</param>
            <returns>An element match filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.ElemMatch``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            Creates an element match filter for an array field.
            </summary>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="field">The field.</param>
            <param name="filter">The filter.</param>
            <returns>An element match filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Eq``1(MongoDB.Driver.FieldDefinition{`0,``0},``0)">
            <summary>
            Creates an equality filter.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>An equality filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Eq``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
            <summary>
            Creates an equality filter.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>An equality filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Exists(MongoDB.Driver.FieldDefinition{`0},System.Boolean)">
            <summary>
            Creates an exists filter.
            </summary>
            <param name="field">The field.</param>
            <param name="exists">if set to <c>true</c> [exists].</param>
            <returns>An exists filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Exists(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Boolean)">
            <summary>
            Creates an exists filter.
            </summary>
            <param name="field">The field.</param>
            <param name="exists">if set to <c>true</c> [exists].</param>
            <returns>An exists filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.GeoIntersects``1(MongoDB.Driver.FieldDefinition{`0},MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometry{``0})">
            <summary>
            Creates a geo intersects filter.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="field">The field.</param>
            <param name="geometry">The geometry.</param>
            <returns>A geo intersects filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.GeoIntersects``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometry{``0})">
            <summary>
            Creates a geo intersects filter.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="field">The field.</param>
            <param name="geometry">The geometry.</param>
            <returns>A geo intersects filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.GeoWithin``1(MongoDB.Driver.FieldDefinition{`0},MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometry{``0})">
            <summary>
            Creates a geo within filter.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="field">The field.</param>
            <param name="geometry">The geometry.</param>
            <returns>A geo within filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.GeoWithin``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometry{``0})">
            <summary>
            Creates a geo within filter.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="field">The field.</param>
            <param name="geometry">The geometry.</param>
            <returns>A geo within filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.GeoWithinBox(MongoDB.Driver.FieldDefinition{`0},System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Creates a geo within box filter.
            </summary>
            <param name="field">The field.</param>
            <param name="lowerLeftX">The lower left x.</param>
            <param name="lowerLeftY">The lower left y.</param>
            <param name="upperRightX">The upper right x.</param>
            <param name="upperRightY">The upper right y.</param>
            <returns>A geo within box filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.GeoWithinBox(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Creates a geo within box filter.
            </summary>
            <param name="field">The field.</param>
            <param name="lowerLeftX">The lower left x.</param>
            <param name="lowerLeftY">The lower left y.</param>
            <param name="upperRightX">The upper right x.</param>
            <param name="upperRightY">The upper right y.</param>
            <returns>A geo within box filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.GeoWithinCenter(MongoDB.Driver.FieldDefinition{`0},System.Double,System.Double,System.Double)">
            <summary>
            Creates a geo within center filter.
            </summary>
            <param name="field">The field.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="radius">The radius.</param>
            <returns>A geo within center filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.GeoWithinCenter(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Double,System.Double,System.Double)">
            <summary>
            Creates a geo within center filter.
            </summary>
            <param name="field">The field.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="radius">The radius.</param>
            <returns>A geo within center filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.GeoWithinCenterSphere(MongoDB.Driver.FieldDefinition{`0},System.Double,System.Double,System.Double)">
            <summary>
            Creates a geo within center sphere filter.
            </summary>
            <param name="field">The field.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="radius">The radius.</param>
            <returns>A geo within center sphere filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.GeoWithinCenterSphere(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Double,System.Double,System.Double)">
            <summary>
            Creates a geo within center sphere filter.
            </summary>
            <param name="field">The field.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="radius">The radius.</param>
            <returns>A geo within center sphere filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.GeoWithinPolygon(MongoDB.Driver.FieldDefinition{`0},System.Double[0:,0:])">
            <summary>
            Creates a geo within polygon filter.
            </summary>
            <param name="field">The field.</param>
            <param name="points">The points.</param>
            <returns>A geo within polygon filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.GeoWithinPolygon(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Double[0:,0:])">
            <summary>
            Creates a geo within polygon filter.
            </summary>
            <param name="field">The field.</param>
            <param name="points">The points.</param>
            <returns>A geo within polygon filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Gt(MongoDB.Driver.FieldDefinition{`0,System.UInt32},System.UInt32)">
            <summary>
            Creates a greater than filter for a UInt32 field.
            </summary>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A greater than filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Gt(MongoDB.Driver.FieldDefinition{`0,System.UInt64},System.UInt64)">
            <summary>
            Creates a greater than filter for a UInt64 field.
            </summary>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A greater than filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Gt``1(MongoDB.Driver.FieldDefinition{`0,``0},``0)">
            <summary>
            Creates a greater than filter.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A greater than filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Gt(System.Linq.Expressions.Expression{System.Func{`0,System.UInt32}},System.UInt32)">
            <summary>
            Creates a greater than filter for a UInt32 field.
            </summary>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A greater than filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Gt(System.Linq.Expressions.Expression{System.Func{`0,System.UInt64}},System.UInt64)">
            <summary>
            Creates a greater than filter for a UInt64 field.
            </summary>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A greater than filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Gt``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
            <summary>
            Creates a greater than filter.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A greater than filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Gte(MongoDB.Driver.FieldDefinition{`0,System.UInt32},System.UInt32)">
            <summary>
            Creates a greater than or equal filter for a UInt32 field.
            </summary>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A greater than or equal filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Gte(MongoDB.Driver.FieldDefinition{`0,System.UInt64},System.UInt64)">
            <summary>
            Creates a greater than or equal filter for a UInt64 field.
            </summary>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A greater than or equal filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Gte``1(MongoDB.Driver.FieldDefinition{`0,``0},``0)">
            <summary>
            Creates a greater than or equal filter.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A greater than or equal filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Gte(System.Linq.Expressions.Expression{System.Func{`0,System.UInt32}},System.UInt32)">
            <summary>
            Creates a greater than or equal filter for a UInt32 field.
            </summary>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A greater than or equal filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Gte(System.Linq.Expressions.Expression{System.Func{`0,System.UInt64}},System.UInt64)">
            <summary>
            Creates a greater than or equal filter for a UInt64 field.
            </summary>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A greater than or equal filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Gte``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
            <summary>
            Creates a greater than or equal filter.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A greater than or equal filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.In``1(MongoDB.Driver.FieldDefinition{`0,``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Creates an in filter.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="field">The field.</param>
            <param name="values">The values.</param>
            <returns>An in filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.In``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Creates an in filter.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="field">The field.</param>
            <param name="values">The values.</param>
            <returns>An in filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.JsonSchema(MongoDB.Bson.BsonDocument)">
            <summary>
            Creates a json schema filter.
            </summary>
            <param name="schema">The json validation schema.</param>
            <returns>A schema filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Lt(MongoDB.Driver.FieldDefinition{`0,System.UInt32},System.UInt32)">
            <summary>
            Creates a less than filter for a UInt32 field.
            </summary>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A less than filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Lt(MongoDB.Driver.FieldDefinition{`0,System.UInt64},System.UInt64)">
            <summary>
            Creates a less than filter for a UInt64 field.
            </summary>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A less than filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Lt``1(MongoDB.Driver.FieldDefinition{`0,``0},``0)">
            <summary>
            Creates a less than filter.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A less than filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Lt(System.Linq.Expressions.Expression{System.Func{`0,System.UInt32}},System.UInt32)">
            <summary>
            Creates a less than filter for a UInt32 field.
            </summary>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A less than filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Lt(System.Linq.Expressions.Expression{System.Func{`0,System.UInt64}},System.UInt64)">
            <summary>
            Creates a less than filter for a UInt64 field.
            </summary>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A less than filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Lt``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
            <summary>
            Creates a less than filter.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A less than filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Lte(MongoDB.Driver.FieldDefinition{`0,System.UInt32},System.UInt32)">
            <summary>
            Creates a less than or equal filter for a UInt32 field.
            </summary>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A less than or equal filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Lte(MongoDB.Driver.FieldDefinition{`0,System.UInt64},System.UInt64)">
            <summary>
            Creates a less than or equal filter for a UInt64 field.
            </summary>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A less than or equal filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Lte``1(MongoDB.Driver.FieldDefinition{`0,``0},``0)">
            <summary>
            Creates a less than or equal filter.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A less than or equal filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Lte(System.Linq.Expressions.Expression{System.Func{`0,System.UInt32}},System.UInt32)">
            <summary>
            Creates a less than or equal filter for a UInt32 field.
            </summary>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A less than or equal filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Lte(System.Linq.Expressions.Expression{System.Func{`0,System.UInt64}},System.UInt64)">
            <summary>
            Creates a less than or equal filter for a UInt64 field.
            </summary>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A less than or equal filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Lte``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
            <summary>
            Creates a less than or equal filter.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A less than or equal filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Mod(MongoDB.Driver.FieldDefinition{`0},System.Int64,System.Int64)">
            <summary>
            Creates a modulo filter.
            </summary>
            <param name="field">The field.</param>
            <param name="modulus">The modulus.</param>
            <param name="remainder">The remainder.</param>
            <returns>A modulo filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Mod(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Int64,System.Int64)">
            <summary>
            Creates a modulo filter.
            </summary>
            <param name="field">The field.</param>
            <param name="modulus">The modulus.</param>
            <param name="remainder">The remainder.</param>
            <returns>A modulo filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Ne``1(MongoDB.Driver.FieldDefinition{`0,``0},``0)">
            <summary>
            Creates a not equal filter.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A not equal filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Ne``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
            <summary>
            Creates a not equal filter.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A not equal filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Near(MongoDB.Driver.FieldDefinition{`0},System.Double,System.Double,System.Nullable{System.Double},System.Nullable{System.Double})">
            <summary>
            Creates a near filter.
            </summary>
            <param name="field">The field.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="maxDistance">The maximum distance.</param>
            <param name="minDistance">The minimum distance.</param>
            <returns>A near filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Near(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Double,System.Double,System.Nullable{System.Double},System.Nullable{System.Double})">
            <summary>
            Creates a near filter.
            </summary>
            <param name="field">The field.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="maxDistance">The maximum distance.</param>
            <param name="minDistance">The minimum distance.</param>
            <returns>A near filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Near``1(MongoDB.Driver.FieldDefinition{`0},MongoDB.Driver.GeoJsonObjectModel.GeoJsonPoint{``0},System.Nullable{System.Double},System.Nullable{System.Double})">
            <summary>
            Creates a near filter.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="field">The field.</param>
            <param name="point">The geometry.</param>
            <param name="maxDistance">The maximum distance.</param>
            <param name="minDistance">The minimum distance.</param>
            <returns>A near filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Near``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},MongoDB.Driver.GeoJsonObjectModel.GeoJsonPoint{``0},System.Nullable{System.Double},System.Nullable{System.Double})">
            <summary>
            Creates a near filter.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="field">The field.</param>
            <param name="point">The geometry.</param>
            <param name="maxDistance">The maximum distance.</param>
            <param name="minDistance">The minimum distance.</param>
            <returns>A near filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.NearSphere(MongoDB.Driver.FieldDefinition{`0},System.Double,System.Double,System.Nullable{System.Double},System.Nullable{System.Double})">
            <summary>
            Creates a near sphere filter.
            </summary>
            <param name="field">The field.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="maxDistance">The maximum distance.</param>
            <param name="minDistance">The minimum distance.</param>
            <returns>A near sphere filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.NearSphere(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Double,System.Double,System.Nullable{System.Double},System.Nullable{System.Double})">
            <summary>
            Creates a near sphere filter.
            </summary>
            <param name="field">The field.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="maxDistance">The maximum distance.</param>
            <param name="minDistance">The minimum distance.</param>
            <returns>A near sphere filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.NearSphere``1(MongoDB.Driver.FieldDefinition{`0},MongoDB.Driver.GeoJsonObjectModel.GeoJsonPoint{``0},System.Nullable{System.Double},System.Nullable{System.Double})">
            <summary>
            Creates a near sphere filter.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="field">The field.</param>
            <param name="point">The geometry.</param>
            <param name="maxDistance">The maximum distance.</param>
            <param name="minDistance">The minimum distance.</param>
            <returns>A near sphere filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.NearSphere``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},MongoDB.Driver.GeoJsonObjectModel.GeoJsonPoint{``0},System.Nullable{System.Double},System.Nullable{System.Double})">
            <summary>
            Creates a near sphere filter.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="field">The field.</param>
            <param name="point">The geometry.</param>
            <param name="maxDistance">The maximum distance.</param>
            <param name="minDistance">The minimum distance.</param>
            <returns>A near sphere filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Nin``1(MongoDB.Driver.FieldDefinition{`0,``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Creates a not in filter.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="field">The field.</param>
            <param name="values">The values.</param>
            <returns>A not in filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Nin``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Creates a not in filter.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="field">The field.</param>
            <param name="values">The values.</param>
            <returns>A not in filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Not(MongoDB.Driver.FilterDefinition{`0})">
            <summary>
            Creates a not filter.
            </summary>
            <param name="filter">The filter.</param>
            <returns>A not filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.OfType``1">
            <summary>
            Creates an OfType filter that matches documents of a derived type.
            </summary>
            <typeparam name="TDerived">The type of the matching derived documents.</typeparam>
            <returns>An OfType filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.OfType``1(MongoDB.Driver.FilterDefinition{``0})">
            <summary>
            Creates an OfType filter that matches documents of a derived type and that also match a filter on the derived document.
            </summary>
            <typeparam name="TDerived">The type of the matching derived documents.</typeparam>
            <param name="derivedDocumentFilter">A filter on the derived document.</param>
            <returns>An OfType filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.OfType``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            Creates an OfType filter that matches documents of a derived type and that also match a filter on the derived document.
            </summary>
            <typeparam name="TDerived">The type of the matching derived documents.</typeparam>
            <param name="derivedDocumentFilter">A filter on the derived document.</param>
            <returns>An OfType filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.OfType``2(MongoDB.Driver.FieldDefinition{`0,``0})">
            <summary>
            Creates an OfType filter that matches documents with a field of a derived typer.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <typeparam name="TDerived">The type of the matching derived field value.</typeparam>
            <param name="field">The field.</param>
            <returns>An OfType filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.OfType``2(MongoDB.Driver.FieldDefinition{`0,``0},MongoDB.Driver.FilterDefinition{``1})">
            <summary>
            Creates an OfType filter that matches documents with a field of a derived type and that also match a filter on the derived field.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <typeparam name="TDerived">The type of the matching derived field value.</typeparam>
            <param name="field">The field.</param>
            <param name="derivedFieldFilter">A filter on the derived field.</param>
            <returns>An OfType filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.OfType``2(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Creates an OfType filter that matches documents with a field of a derived type.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <typeparam name="TDerived">The type of the matching derived field value.</typeparam>
            <param name="field">The field.</param>
            <returns>An OfType filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.OfType``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{``1,System.Boolean}})">
            <summary>
            Creates an OfType filter that matches documents with a field of a derived type and that also match a filter on the derived field.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <typeparam name="TDerived">The type of the matching derived field value.</typeparam>
            <param name="field">The field.</param>
            <param name="derivedFieldFilter">A filter on the derived field.</param>
            <returns>An OfType filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Or(MongoDB.Driver.FilterDefinition{`0}[])">
            <summary>
            Creates an or filter.
            </summary>
            <param name="filters">The filters.</param>
            <returns>An or filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Or(System.Collections.Generic.IEnumerable{MongoDB.Driver.FilterDefinition{`0}})">
            <summary>
            Creates an or filter.
            </summary>
            <param name="filters">The filters.</param>
            <returns>An or filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Regex(MongoDB.Driver.FieldDefinition{`0},MongoDB.Bson.BsonRegularExpression)">
            <summary>
            Creates a regular expression filter.
            </summary>
            <param name="field">The field.</param>
            <param name="regex">The regex.</param>
            <returns>A regular expression filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Regex(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},MongoDB.Bson.BsonRegularExpression)">
            <summary>
            Creates a regular expression filter.
            </summary>
            <param name="field">The field.</param>
            <param name="regex">The regex.</param>
            <returns>A regular expression filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Size(MongoDB.Driver.FieldDefinition{`0},System.Int32)">
            <summary>
            Creates a size filter.
            </summary>
            <param name="field">The field.</param>
            <param name="size">The size.</param>
            <returns>A size filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Size(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Int32)">
            <summary>
            Creates a size filter.
            </summary>
            <param name="field">The field.</param>
            <param name="size">The size.</param>
            <returns>A size filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.SizeGt(MongoDB.Driver.FieldDefinition{`0},System.Int32)">
            <summary>
            Creates a size greater than filter.
            </summary>
            <param name="field">The field.</param>
            <param name="size">The size.</param>
            <returns>A size greater than filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.SizeGt(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Int32)">
            <summary>
            Creates a size greater than filter.
            </summary>
            <param name="field">The field.</param>
            <param name="size">The size.</param>
            <returns>A size greater than filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.SizeGte(MongoDB.Driver.FieldDefinition{`0},System.Int32)">
            <summary>
            Creates a size greater than or equal filter.
            </summary>
            <param name="field">The field.</param>
            <param name="size">The size.</param>
            <returns>A size greater than or equal filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.SizeGte(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Int32)">
            <summary>
            Creates a size greater than or equal filter.
            </summary>
            <param name="field">The field.</param>
            <param name="size">The size.</param>
            <returns>A size greater than or equal filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.SizeLt(MongoDB.Driver.FieldDefinition{`0},System.Int32)">
            <summary>
            Creates a size less than filter.
            </summary>
            <param name="field">The field.</param>
            <param name="size">The size.</param>
            <returns>A size less than filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.SizeLt(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Int32)">
            <summary>
            Creates a size less than filter.
            </summary>
            <param name="field">The field.</param>
            <param name="size">The size.</param>
            <returns>A size less than filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.SizeLte(MongoDB.Driver.FieldDefinition{`0},System.Int32)">
            <summary>
            Creates a size less than or equal filter.
            </summary>
            <param name="field">The field.</param>
            <param name="size">The size.</param>
            <returns>A size less than or equal filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.SizeLte(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Int32)">
            <summary>
            Creates a size less than or equal filter.
            </summary>
            <param name="field">The field.</param>
            <param name="size">The size.</param>
            <returns>A size less than or equal filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Text(System.String,MongoDB.Driver.TextSearchOptions)">
            <summary>
            Creates a text filter.
            </summary>
            <param name="search">The search.</param>
            <param name="options">The text search options.</param>
            <returns>A text filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Text(System.String,System.String)">
            <summary>
            Creates a text filter.
            </summary>
            <param name="search">The search.</param>
            <param name="language">The language.</param>
            <returns>A text filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Type(MongoDB.Driver.FieldDefinition{`0},MongoDB.Bson.BsonType)">
            <summary>
            Creates a type filter.
            </summary>
            <param name="field">The field.</param>
            <param name="type">The type.</param>
            <returns>A type filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Type(MongoDB.Driver.FieldDefinition{`0},System.String)">
            <summary>
            Creates a type filter.
            </summary>
            <param name="field">The field.</param>
            <param name="type">The type.</param>
            <returns>A type filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Type(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},MongoDB.Bson.BsonType)">
            <summary>
            Creates a type filter.
            </summary>
            <param name="field">The field.</param>
            <param name="type">The type.</param>
            <returns>A type filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Type(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String)">
            <summary>
            Creates a type filter.
            </summary>
            <param name="field">The field.</param>
            <param name="type">The type.</param>
            <returns>A type filter.</returns>
        </member>
        <member name="M:MongoDB.Driver.FilterDefinitionBuilder`1.Where(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Creates a filter based on the expression.
            </summary>
            <param name="expression">The expression.</param>
            <returns>An expression filter.</returns>
        </member>
        <member name="T:MongoDB.Driver.FindFluentBase`2">
            <summary>
            Base class for implementors of <see cref="T:MongoDB.Driver.IFindFluent`2" />.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
        </member>
        <member name="P:MongoDB.Driver.FindFluentBase`2.Filter">
            <inheritdoc />
        </member>
        <member name="P:MongoDB.Driver.FindFluentBase`2.Options">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.FindFluentBase`2.As``1(MongoDB.Bson.Serialization.IBsonSerializer{``0})">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.FindFluentBase`2.Count(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.FindFluentBase`2.CountAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.FindFluentBase`2.CountDocuments(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.FindFluentBase`2.CountDocumentsAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.FindFluentBase`2.Limit(System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.FindFluentBase`2.Project``1(MongoDB.Driver.ProjectionDefinition{`0,``0})">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.FindFluentBase`2.Skip(System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.FindFluentBase`2.Sort(MongoDB.Driver.SortDefinition{`0})">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.FindFluentBase`2.ToCursor(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.FindFluentBase`2.ToCursorAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.FindOneAndDeleteOptions`2">
            <summary>
            Options for a findAndModify command to delete an object.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
        </member>
        <member name="P:MongoDB.Driver.FindOneAndDeleteOptions`2.Collation">
            <summary>
            Gets or sets the collation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.FindOneAndDeleteOptions`2.MaxTime">
            <summary>
            Gets or sets the maximum time.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.FindOneAndDeleteOptions`2.Projection">
            <summary>
            Gets or sets the projection.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.FindOneAndDeleteOptions`2.Sort">
            <summary>
            Gets or sets the sort.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.FindOneAndDeleteOptions`1">
            <summary>
            Options for a findAndModify command to delete an object.
            </summary>
            <typeparam name="TDocument">The type of the document and the result.</typeparam>
        </member>
        <member name="T:MongoDB.Driver.FindOneAndReplaceOptions`2">
            <summary>
            Options for a findAndModify command to replace an object.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
        </member>
        <member name="M:MongoDB.Driver.FindOneAndReplaceOptions`2.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.FindOneAndReplaceOptions`2"/> class.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.FindOneAndReplaceOptions`2.Collation">
            <summary>
            Gets or sets the collation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.FindOneAndReplaceOptions`2.BypassDocumentValidation">
            <summary>
            Gets or sets a value indicating whether to bypass document validation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.FindOneAndReplaceOptions`2.IsUpsert">
            <summary>
            Gets or sets a value indicating whether to insert the document if it doesn't already exist.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.FindOneAndReplaceOptions`2.MaxTime">
            <summary>
            Gets or sets the maximum time.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.FindOneAndReplaceOptions`2.Projection">
            <summary>
            Gets or sets the projection.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.FindOneAndReplaceOptions`2.ReturnDocument">
            <summary>
            Gets or sets which version of the document to return.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.FindOneAndReplaceOptions`2.Sort">
            <summary>
            Gets or sets the sort.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.FindOneAndReplaceOptions`1">
            <summary>
            Options for a findAndModify command to replace an object.
            </summary>
            <typeparam name="TDocument">The type of the document and the result.</typeparam>
        </member>
        <member name="T:MongoDB.Driver.FindOneAndUpdateOptions`2">
            <summary>
            Options for a findAndModify command to update an object.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
        </member>
        <member name="M:MongoDB.Driver.FindOneAndUpdateOptions`2.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.FindOneAndUpdateOptions`2"/> class.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.FindOneAndUpdateOptions`2.ArrayFilters">
            <summary>
            Gets or sets the array filters.
            </summary>
            <value>
            The array filters.
            </value>
        </member>
        <member name="P:MongoDB.Driver.FindOneAndUpdateOptions`2.BypassDocumentValidation">
            <summary>
            Gets or sets a value indicating whether to bypass document validation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.FindOneAndUpdateOptions`2.Collation">
            <summary>
            Gets or sets the collation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.FindOneAndUpdateOptions`2.IsUpsert">
            <summary>
            Gets or sets a value indicating whether to insert the document if it doesn't already exist.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.FindOneAndUpdateOptions`2.MaxTime">
            <summary>
            Gets or sets the maximum time.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.FindOneAndUpdateOptions`2.Projection">
            <summary>
            Gets or sets the projection.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.FindOneAndUpdateOptions`2.ReturnDocument">
            <summary>
            Gets or sets which version of the document to return.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.FindOneAndUpdateOptions`2.Sort">
            <summary>
            Gets or sets the sort.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.FindOneAndUpdateOptions`1">
            <summary>
            Options for a findAndModify command to update an object.
            </summary>
            <typeparam name="TDocument">The type of the document and the result.</typeparam>
        </member>
        <member name="T:MongoDB.Driver.FindOptionsBase">
            <summary>
            Options for a find operation.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.FindOptionsBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.FindOptionsBase"/> class.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.FindOptionsBase.AllowPartialResults">
            <summary>
            Gets or sets a value indicating whether to allow partial results when some shards are unavailable.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.FindOptionsBase.BatchSize">
            <summary>
            Gets or sets the size of a batch.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.FindOptionsBase.Collation">
            <summary>
            Gets or sets the collation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.FindOptionsBase.Comment">
            <summary>
            Gets or sets the comment.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.FindOptionsBase.CursorType">
            <summary>
            Gets or sets the type of the cursor.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.FindOptionsBase.Hint">
            <summary>
            Gets or sets the hint.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.FindOptionsBase.Max">
            <summary>
            Gets or sets the max key value.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.FindOptionsBase.MaxAwaitTime">
            <summary>
            Gets or sets the maximum await time for TailableAwait cursors.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.FindOptionsBase.MaxTime">
            <summary>
            Gets or sets the maximum time.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.FindOptionsBase.Min">
            <summary>
            Gets or sets the min key value.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.FindOptionsBase.Modifiers">
            <summary>
            Gets or sets the modifiers.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.FindOptionsBase.NoCursorTimeout">
            <summary>
            Gets or sets whether a cursor will time out.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.FindOptionsBase.OplogReplay">
            <summary>
            Gets or sets whether the OplogReplay bit will be set.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.FindOptionsBase.ReturnKey">
            <summary>
            Gets or sets returnKey. If true, returns only the index keys in the resulting documents.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.FindOptionsBase.ShowRecordId">
            <summary>
            Gets or sets whether the record Id should be added to the result document.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.FindOptions">
            <summary>
            Options for finding documents.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.FindOptions`2">
            <summary>
            Options for finding documents.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
        </member>
        <member name="P:MongoDB.Driver.FindOptions`2.Limit">
            <summary>
            Gets or sets how many documents to return.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.FindOptions`2.Projection">
            <summary>
            Gets or sets the projection.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.FindOptions`2.Skip">
            <summary>
            Gets or sets how many documents to skip before returning the rest.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.FindOptions`2.Sort">
            <summary>
            Gets or sets the sort.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.FindOptions`1">
            <summary>
            Options for finding documents.
            </summary>
            <typeparam name="TDocument">The type of the document and the result.</typeparam>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJson">
            <summary>
            A static class containing helper methods to create GeoJson objects.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.BoundingBox``1(``0,``0)">
            <summary>
            Creates a GeoJson bounding box.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="min">The min.</param>
            <param name="max">The max.</param>
            <returns>A GeoJson bounding box.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.Feature``1(MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometry{``0})">
            <summary>
            Creates a GeoJson Feature object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="geometry">The geometry.</param>
            <returns>A GeoJson Feature object.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.Feature``1(MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeatureArgs{``0},MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometry{``0})">
            <summary>
            Creates a GeoJson Feature object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="args">The additional args.</param>
            <param name="geometry">The geometry.</param>
            <returns>A GeoJson Feature object.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.FeatureCollection``1(MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs{``0},MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeature{``0}[])">
            <summary>
            Creates a GeoJson FeatureCollection object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="args">The additional args.</param>
            <param name="features">The features.</param>
            <returns>A GeoJson FeatureCollection object.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.FeatureCollection``1(MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeature{``0}[])">
            <summary>
            Creates a GeoJson FeatureCollection object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="features">The features.</param>
            <returns>A GeoJson FeatureCollection object.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.Geographic(System.Double,System.Double)">
            <summary>
            Creates a GeoJson 2D geographic position (longitude, latitude).
            </summary>
            <param name="longitude">The longitude.</param>
            <param name="latitude">The latitude.</param>
            <returns>A GeoJson 2D geographic position.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.Geographic(System.Double,System.Double,System.Double)">
            <summary>
            Creates a GeoJson 3D geographic position (longitude, latitude, altitude).
            </summary>
            <param name="longitude">The longitude.</param>
            <param name="latitude">The latitude.</param>
            <param name="altitude">The altitude.</param>
            <returns>A GeoJson 3D geographic position.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.GeometryCollection``1(MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs{``0},MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometry{``0}[])">
            <summary>
            Creates a GeoJson GeometryCollection object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="args">The additional args.</param>
            <param name="geometries">The geometries.</param>
            <returns>A GeoJson GeometryCollection object.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.GeometryCollection``1(MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometry{``0}[])">
            <summary>
            Creates a GeoJson GeometryCollection object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="geometries">The geometries.</param>
            <returns>A GeoJson GeometryCollection object.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.LinearRingCoordinates``1(``0[])">
            <summary>
            Creates the coordinates of a GeoJson linear ring.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="positions">The positions.</param>
            <returns>The coordinates of a GeoJson linear ring.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.LineString``1(MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs{``0},``0[])">
            <summary>
            Creates a GeoJson LineString object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="args">The additional args.</param>
            <param name="positions">The positions.</param>
            <returns>A GeoJson LineString object.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.LineString``1(``0[])">
            <summary>
            Creates a GeoJson LineString object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="positions">The positions.</param>
            <returns>A GeoJson LineString object.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.LineStringCoordinates``1(``0[])">
            <summary>
            Creates the coordinates of a GeoJson LineString.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="positions">The positions.</param>
            <returns>The coordinates of a GeoJson LineString.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.MultiLineString``1(MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs{``0},MongoDB.Driver.GeoJsonObjectModel.GeoJsonLineStringCoordinates{``0}[])">
            <summary>
            Creates a GeoJson MultiLineString object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="args">The additional args.</param>
            <param name="lineStrings">The line strings.</param>
            <returns>A GeoJson MultiLineString object.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.MultiLineString``1(MongoDB.Driver.GeoJsonObjectModel.GeoJsonLineStringCoordinates{``0}[])">
            <summary>
            Creates a GeoJson MultiLineString object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="lineStrings">The line strings.</param>
            <returns>A GeoJson MultiLineString object.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.MultiPoint``1(MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs{``0},``0[])">
            <summary>
            Creates a GeoJson MultiPoint object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="args">The additional args.</param>
            <param name="positions">The positions.</param>
            <returns>A GeoJson MultiPoint object.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.MultiPoint``1(``0[])">
            <summary>
            Creates a GeoJson MultiPoint object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="positions">The positions.</param>
            <returns>A GeoJson MultiPoint object.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.MultiPolygon``1(MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs{``0},MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygonCoordinates{``0}[])">
            <summary>
            Creates a GeoJson MultiPolygon object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="args">The additional args.</param>
            <param name="polygons">The polygons.</param>
            <returns>A GeoJson MultiPolygon object.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.MultiPolygon``1(MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygonCoordinates{``0}[])">
            <summary>
            Creates a GeoJson MultiPolygon object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="polygons">The polygons.</param>
            <returns>A GeoJson MultiPolygon object.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.Point``1(MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs{``0},``0)">
            <summary>
            Creates a GeoJson Point object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="args">The additional args.</param>
            <param name="coordinates">The coordinates.</param>
            <returns>A GeoJson Point object.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.Point``1(``0)">
            <summary>
            Creates a GeoJson Point object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="coordinates">The coordinates.</param>
            <returns>A GeoJson Point object.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.Polygon``1(MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs{``0},``0[])">
            <summary>
            Creates a GeoJson Polygon object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="args">The additional args.</param>
            <param name="positions">The positions.</param>
            <returns>A GeoJson Polygon object.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.Polygon``1(MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs{``0},MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygonCoordinates{``0})">
            <summary>
            Creates a GeoJson Polygon object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="args">The additional args.</param>
            <param name="coordinates">The coordinates.</param>
            <returns>A GeoJson Polygon object.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.Polygon``1(MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygonCoordinates{``0})">
            <summary>
            Creates a GeoJson Polygon object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="coordinates">The coordinates.</param>
            <returns>A GeoJson Polygon object.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.Polygon``1(``0[])">
            <summary>
            Creates a GeoJson Polygon object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="positions">The positions.</param>
            <returns>A GeoJson Polygon object.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.PolygonCoordinates``1(``0[])">
            <summary>
            Creates the coordinates of a GeoJson Polygon object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="positions">The positions.</param>
            <returns>The coordinates of a GeoJson Polygon object.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.PolygonCoordinates``1(MongoDB.Driver.GeoJsonObjectModel.GeoJsonLinearRingCoordinates{``0},MongoDB.Driver.GeoJsonObjectModel.GeoJsonLinearRingCoordinates{``0}[])">
            <summary>
            Creates the coordinates of a GeoJson Polygon object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="exterior">The exterior.</param>
            <param name="holes">The holes.</param>
            <returns>The coordinates of a GeoJson Polygon object.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.Position(System.Double,System.Double)">
            <summary>
            Creates a GeoJson 2D position (x, y).
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns>A GeoJson 2D position.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.Position(System.Double,System.Double,System.Double)">
            <summary>
            Creates a GeoJson 3D position (x, y, z).
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="z">The z.</param>
            <returns>A GeoJson 3D position.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.Projected(System.Double,System.Double)">
            <summary>
            Creates a GeoJson 2D projected position (easting, northing).
            </summary>
            <param name="easting">The easting.</param>
            <param name="northing">The northing.</param>
            <returns>A GeoJson 2D projected position.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.Projected(System.Double,System.Double,System.Double)">
            <summary>
            Creates a GeoJson 3D projected position (easting, northing, altitude).
            </summary>
            <param name="easting">The easting.</param>
            <param name="northing">The northing.</param>
            <param name="altitude">The altitude.</param>
            <returns>A GeoJson 3D projected position.</returns>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJson2DCoordinates">
            <summary>
            Represents a GeoJson 2D position (x, y).
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson2DCoordinates.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJson2DCoordinates"/> class.
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJson2DCoordinates.Values">
            <summary>
            Gets the coordinate values.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJson2DCoordinates.X">
            <summary>
            Gets the X coordinate.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJson2DCoordinates.Y">
            <summary>
            Gets the Y coordinate.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJson2DGeographicCoordinates">
            <summary>
            Represents a GeoJson 2D geographic position (longitude, latitude).
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson2DGeographicCoordinates.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJson2DGeographicCoordinates"/> class.
            </summary>
            <param name="longitude">The longitude.</param>
            <param name="latitude">The latitude.</param>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJson2DGeographicCoordinates.Values">
            <summary>
            Gets the coordinate values.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJson2DGeographicCoordinates.Longitude">
            <summary>
            Gets the longitude.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJson2DGeographicCoordinates.Latitude">
            <summary>
            Gets the latitude.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJson2DProjectedCoordinates">
            <summary>
            Represents a GeoJson 2D projected position (easting, northing).
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson2DProjectedCoordinates.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJson2DProjectedCoordinates"/> class.
            </summary>
            <param name="easting">The easting.</param>
            <param name="northing">The northing.</param>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJson2DProjectedCoordinates.Values">
            <summary>
            Gets the coordinate values.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJson2DProjectedCoordinates.Easting">
            <summary>
            Gets the easting.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJson2DProjectedCoordinates.Northing">
            <summary>
            Gets the northing.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJson3DCoordinates">
            <summary>
            Represents a GeoJson 3D position (x, y, z).
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson3DCoordinates.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJson3DCoordinates"/> class.
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <param name="z">The z coordinate.</param>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJson3DCoordinates.Values">
            <summary>
            Gets the coordinate values.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJson3DCoordinates.X">
            <summary>
            Gets the X coordinate.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJson3DCoordinates.Y">
            <summary>
            Gets the Y coordinate.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJson3DCoordinates.Z">
            <summary>
            Gets the Z coordinate.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJson3DGeographicCoordinates">
            <summary>
            Represents a GeoJson 3D geographic position (longitude, latitude, altitude).
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson3DGeographicCoordinates.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJson3DGeographicCoordinates"/> class.
            </summary>
            <param name="longitude">The longitude.</param>
            <param name="latitude">The latitude.</param>
            <param name="altitude">The altitude.</param>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJson3DGeographicCoordinates.Values">
            <summary>
            Gets the coordinate values.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJson3DGeographicCoordinates.Longitude">
            <summary>
            Gets the longitude.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJson3DGeographicCoordinates.Latitude">
            <summary>
            Gets the latitude.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJson3DGeographicCoordinates.Altitude">
            <summary>
            Gets the altitude.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJson3DProjectedCoordinates">
            <summary>
            Represents a GeoJson 3D projected position (easting, northing, altitude).
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson3DProjectedCoordinates.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJson3DProjectedCoordinates"/> class.
            </summary>
            <param name="easting">The easting.</param>
            <param name="northing">The northing.</param>
            <param name="altitude">The altitude.</param>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJson3DProjectedCoordinates.Values">
            <summary>
            Gets the coordinate values.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJson3DProjectedCoordinates.Easting">
            <summary>
            Gets the easting.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJson3DProjectedCoordinates.Northing">
            <summary>
            Gets the northing.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJson3DProjectedCoordinates.Altitude">
            <summary>
            Gets the altitude.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonBoundingBox`1">
            <summary>
            Represents a GeoJson bounding box.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonBoundingBox`1.#ctor(`0,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonBoundingBox`1"/> class.
            </summary>
            <param name="min">The min.</param>
            <param name="max">The max.</param>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonBoundingBox`1.Max">
            <summary>
            Gets the max.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonBoundingBox`1.Min">
            <summary>
            Gets the min.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonCoordinateReferenceSystem">
            <summary>
            Represents a GeoJson coordinate reference system (see subclasses).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonCoordinateReferenceSystem.Type">
            <summary>
            Gets the type of the GeoJson coordinate reference system.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonCoordinates">
            <summary>
            Represents a GeoJson position in some coordinate system (see subclasses).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonCoordinates.Values">
            <summary>
            Gets the coordinate values.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonCoordinates.op_Equality(MongoDB.Driver.GeoJsonObjectModel.GeoJsonCoordinates,MongoDB.Driver.GeoJsonObjectModel.GeoJsonCoordinates)">
            <summary>
            Determines whether two <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonCoordinates"/> instances are equal.
            </summary>
            <param name="lhs">The LHS.</param>
            <param name="rhs">The RHS.</param>
            <returns>
              <c>true</c> if the left hand side is equal to the right hand side; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonCoordinates.op_Inequality(MongoDB.Driver.GeoJsonObjectModel.GeoJsonCoordinates,MongoDB.Driver.GeoJsonObjectModel.GeoJsonCoordinates)">
            <summary>
            Determines whether two <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonCoordinates"/> instances are not equal.
            </summary>
            <param name="lhs">The LHS.</param>
            <param name="rhs">The RHS.</param>
            <returns>
              <c>true</c> if the left hand side is not equal to the right hand side; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonCoordinates.Equals(MongoDB.Driver.GeoJsonObjectModel.GeoJsonCoordinates)">
            <summary>
            Determines whether the specified <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonCoordinates" /> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonCoordinates" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonCoordinates" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonCoordinates.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonCoordinates.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeature`1">
            <summary>
            Represents a GeoJson Feature object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeature`1.#ctor(MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometry{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeature`1"/> class.
            </summary>
            <param name="geometry">The geometry.</param>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeature`1.#ctor(MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeatureArgs{`0},MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometry{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeature`1"/> class.
            </summary>
            <param name="args">The additional args.</param>
            <param name="geometry">The geometry.</param>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeature`1.Geometry">
            <summary>
            Gets the geometry.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeature`1.Id">
            <summary>
            Gets the id.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeature`1.Properties">
            <summary>
            Gets the properties.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeature`1.Type">
            <summary>
            Gets the type of the GeoJson object.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeatureArgs`1">
            <summary>
            Represents additional arguments for a GeoJson Feature object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeatureArgs`1.Id">
            <summary>
            Gets or sets the id.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeatureArgs`1.Properties">
            <summary>
            Gets or sets the properties.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeatureCollection`1">
            <summary>
            Represents a GeoJson FeatureCollection.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeatureCollection`1.#ctor(System.Collections.Generic.IEnumerable{MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeature{`0}})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeatureCollection`1"/> class.
            </summary>
            <param name="features">The features.</param>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeatureCollection`1.#ctor(MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs{`0},System.Collections.Generic.IEnumerable{MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeature{`0}})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeatureCollection`1"/> class.
            </summary>
            <param name="args">The additional args.</param>
            <param name="features">The features.</param>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeatureCollection`1.Features">
            <summary>
            Gets the features.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeatureCollection`1.Type">
            <summary>
            Gets the type of the GeoJson object.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometry`1">
            <summary>
            Represents a GeoJson Geometry object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometry`1.#ctor(MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometry`1"/> class.
            </summary>
            <param name="args">The additional args.</param>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometryCollection`1">
            <summary>
            Represents a GeoJson GeometryCollection object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometryCollection`1.#ctor(System.Collections.Generic.IEnumerable{MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometry{`0}})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometryCollection`1"/> class.
            </summary>
            <param name="geometries">The geometries.</param>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometryCollection`1.#ctor(MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs{`0},System.Collections.Generic.IEnumerable{MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometry{`0}})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometryCollection`1"/> class.
            </summary>
            <param name="args">The additional args.</param>
            <param name="geometries">The geometries.</param>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometryCollection`1.Geometries">
            <summary>
            Gets the geometries.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometryCollection`1.Type">
            <summary>
            Gets the type of the GeoJson object.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonLinearRingCoordinates`1">
            <summary>
            Represents the coordinates of a GeoJson linear ring.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonLinearRingCoordinates`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonLinearRingCoordinates`1"/> class.
            </summary>
            <param name="positions">The positions.</param>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonLineString`1">
            <summary>
            Represents a GeoJson LineString object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonLineString`1.#ctor(MongoDB.Driver.GeoJsonObjectModel.GeoJsonLineStringCoordinates{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonLineString`1"/> class.
            </summary>
            <param name="coordinates">The coordinates.</param>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonLineString`1.#ctor(MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs{`0},MongoDB.Driver.GeoJsonObjectModel.GeoJsonLineStringCoordinates{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonLineString`1"/> class.
            </summary>
            <param name="args">The additional args.</param>
            <param name="coordinates">The coordinates.</param>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonLineString`1.Coordinates">
            <summary>
            Gets the coordinates.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonLineString`1.Type">
            <summary>
            Gets the type of the GeoJson object.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonLineStringCoordinates`1">
            <summary>
            Represents the coordinates of a GeoJson LineString object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonLineStringCoordinates`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonLineStringCoordinates`1"/> class.
            </summary>
            <param name="positions">The positions.</param>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonLineStringCoordinates`1.Positions">
            <summary>
            Gets the positions.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonLinkedCoordinateReferenceSystem">
            <summary>
            Represents a GeoJson linked coordinate reference system.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonLinkedCoordinateReferenceSystem.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonLinkedCoordinateReferenceSystem"/> class.
            </summary>
            <param name="href">The href.</param>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonLinkedCoordinateReferenceSystem.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonLinkedCoordinateReferenceSystem"/> class.
            </summary>
            <param name="href">The href.</param>
            <param name="hrefType">Type of the href.</param>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonLinkedCoordinateReferenceSystem.HRef">
            <summary>
            Gets the href.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonLinkedCoordinateReferenceSystem.HRefType">
            <summary>
            Gets the type of the href.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonLinkedCoordinateReferenceSystem.Type">
            <summary>
            Gets the type of the GeoJson coordinate reference system.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiLineString`1">
            <summary>
            Represents a GeoJson MultiLineString object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiLineString`1.#ctor(MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiLineStringCoordinates{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiLineString`1"/> class.
            </summary>
            <param name="coordinates">The coordinates.</param>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiLineString`1.#ctor(MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs{`0},MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiLineStringCoordinates{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiLineString`1"/> class.
            </summary>
            <param name="args">The additional args.</param>
            <param name="coordinates">The coordinates.</param>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiLineString`1.Coordinates">
            <summary>
            Gets the coordinates.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiLineString`1.Type">
            <summary>
            Gets the type of the GeoJson object.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiLineStringCoordinates`1">
            <summary>
            Represents the coordinates of a GeoJson MultiLineString object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiLineStringCoordinates`1.#ctor(System.Collections.Generic.IEnumerable{MongoDB.Driver.GeoJsonObjectModel.GeoJsonLineStringCoordinates{`0}})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiLineStringCoordinates`1"/> class.
            </summary>
            <param name="lineStrings">The line strings.</param>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiLineStringCoordinates`1.LineStrings">
            <summary>
            Gets the LineStrings.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPoint`1">
            <summary>
            Represents a GeoJson MultiPoint object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPoint`1.#ctor(MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPointCoordinates{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPoint`1"/> class.
            </summary>
            <param name="coordinates">The coordinates.</param>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPoint`1.#ctor(MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs{`0},MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPointCoordinates{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPoint`1"/> class.
            </summary>
            <param name="args">The additional args.</param>
            <param name="coordinates">The coordinates.</param>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPoint`1.Coordinates">
            <summary>
            Gets the coordinates.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPoint`1.Type">
            <summary>
            Gets the type of the GeoJson object.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPointCoordinates`1">
            <summary>
            Represents the coordinates of a GeoJson MultiPoint object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPointCoordinates`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPointCoordinates`1"/> class.
            </summary>
            <param name="positions">The positions.</param>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPointCoordinates`1.Positions">
            <summary>
            Gets the positions.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPolygon`1">
            <summary>
            Represents a GeoJson MultiPolygon object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPolygon`1.#ctor(MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPolygonCoordinates{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPolygon`1"/> class.
            </summary>
            <param name="coordinates">The coordinates.</param>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPolygon`1.#ctor(MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs{`0},MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPolygonCoordinates{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPolygon`1"/> class.
            </summary>
            <param name="args">The additional args.</param>
            <param name="coordinates">The coordinates.</param>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPolygon`1.Coordinates">
            <summary>
            Gets the coordinates.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPolygon`1.Type">
            <summary>
            Gets the type of the GeoJson object.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPolygonCoordinates`1">
            <summary>
            Represents the coordinates of a GeoJson MultiPolygon object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPolygonCoordinates`1.#ctor(System.Collections.Generic.IEnumerable{MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygonCoordinates{`0}})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPolygonCoordinates`1"/> class.
            </summary>
            <param name="polygons">The polygons.</param>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPolygonCoordinates`1.Polygons">
            <summary>
            Gets the Polygons.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonNamedCoordinateReferenceSystem">
            <summary>
            Represents a GeoJson named coordinate reference system.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonNamedCoordinateReferenceSystem.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonNamedCoordinateReferenceSystem"/> class.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonNamedCoordinateReferenceSystem.Name">
            <summary>
            Gets the name.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonNamedCoordinateReferenceSystem.Type">
            <summary>
            Gets the type of the GeoJson coordinate reference system.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonObject`1">
            <summary>
            Represents a GeoJson object (see subclasses).
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonObject`1.#ctor(MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonObject`1"/> class.
            </summary>
            <param name="args">The additional args.</param>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonObject`1.BoundingBox">
            <summary>
            Gets the bounding box.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonObject`1.CoordinateReferenceSystem">
            <summary>
            Gets the coordinate reference system.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonObject`1.ExtraMembers">
            <summary>
            Gets the extra members.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonObject`1.Type">
            <summary>
            Gets the type of the GeoJson object.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs`1">
            <summary>
            Represents additional args provided when creating a GeoJson object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs`1.BoundingBox">
            <summary>
            Gets or sets the bounding box.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs`1.CoordinateReferenceSystem">
            <summary>
            Gets or sets the coordinate reference system.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs`1.ExtraMembers">
            <summary>
            Gets or sets the extra members.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectType">
            <summary>
            Represents the type of a GeoJson object.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectType.Feature">
            <summary>
            A Feature.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectType.FeatureCollection">
            <summary>
            A FeatureCollection.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectType.GeometryCollection">
            <summary>
            A GeometryCollection.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectType.LineString">
            <summary>
            A LineString.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectType.MultiLineString">
            <summary>
            A MultiLineString.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectType.MultiPoint">
            <summary>
            A MultiPoint.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectType.MultiPolygon">
            <summary>
            A MultiPolygon.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectType.Point">
            <summary>
            A Point.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectType.Polygon">
            <summary>
            A Polygon.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonPoint`1">
            <summary>
            Represents a GeoJson Point object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonPoint`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonPoint`1"/> class.
            </summary>
            <param name="coordinates">The coordinates.</param>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonPoint`1.#ctor(MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs{`0},`0)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonPoint`1"/> class.
            </summary>
            <param name="args">The additional args.</param>
            <param name="coordinates">The coordinates.</param>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonPoint`1.Coordinates">
            <summary>
            Gets the coordinates.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonPoint`1.Type">
            <summary>
            Gets the type of the GeoJson object.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygon`1">
            <summary>
            Represents a GeoJson Polygon object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygon`1.#ctor(MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygonCoordinates{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygon`1"/> class.
            </summary>
            <param name="coordinates">The coordinates.</param>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygon`1.#ctor(MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs{`0},MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygonCoordinates{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygon`1"/> class.
            </summary>
            <param name="args">The additional args.</param>
            <param name="coordinates">The coordinates.</param>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygon`1.Coordinates">
            <summary>
            Gets the coordinates.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygon`1.Type">
            <summary>
            Gets the type of the GeoJson object.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygonCoordinates`1">
            <summary>
            Represents the coordinates of a GeoJson Polygon object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygonCoordinates`1.#ctor(MongoDB.Driver.GeoJsonObjectModel.GeoJsonLinearRingCoordinates{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygonCoordinates`1"/> class.
            </summary>
            <param name="exterior">The exterior.</param>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygonCoordinates`1.#ctor(MongoDB.Driver.GeoJsonObjectModel.GeoJsonLinearRingCoordinates{`0},System.Collections.Generic.IEnumerable{MongoDB.Driver.GeoJsonObjectModel.GeoJsonLinearRingCoordinates{`0}})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygonCoordinates`1"/> class.
            </summary>
            <param name="exterior">The exterior.</param>
            <param name="holes">The holes.</param>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygonCoordinates`1.Exterior">
            <summary>
            Gets the exterior.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygonCoordinates`1.Holes">
            <summary>
            Gets the holes.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson2DCoordinatesSerializer">
            <summary>
            Represents a serializer for a GeoJson2DCoordinates value.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson2DCoordinatesSerializer.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <param name="args">The deserialization args.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson2DCoordinatesSerializer.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,MongoDB.Driver.GeoJsonObjectModel.GeoJson2DCoordinates)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="args">The serialization args.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson2DGeographicCoordinatesSerializer">
            <summary>
            Represents a serializer for a GeoJson2DGeographicCoordinates value.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson2DGeographicCoordinatesSerializer.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <param name="args">The deserialization args.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson2DGeographicCoordinatesSerializer.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,MongoDB.Driver.GeoJsonObjectModel.GeoJson2DGeographicCoordinates)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="args">The serialization args.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson2DProjectedCoordinatesSerializer">
            <summary>
            Represents a serializer for a GeoJson2DProjectedCoordinates value.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson2DProjectedCoordinatesSerializer.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <param name="args">The deserialization args.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson2DProjectedCoordinatesSerializer.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,MongoDB.Driver.GeoJsonObjectModel.GeoJson2DProjectedCoordinates)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="args">The serialization args.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson3DCoordinatesSerializer">
            <summary>
            Represents a serializer for a GeoJson3DCoordinates value.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson3DCoordinatesSerializer.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <param name="args">The deserialization args.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson3DCoordinatesSerializer.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,MongoDB.Driver.GeoJsonObjectModel.GeoJson3DCoordinates)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="args">The serialization args.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson3DGeographicCoordinatesSerializer">
            <summary>
            Represents a serializer for a GeoJson3DGeographicCoordinates value.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson3DGeographicCoordinatesSerializer.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <param name="args">The deserialization args.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson3DGeographicCoordinatesSerializer.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,MongoDB.Driver.GeoJsonObjectModel.GeoJson3DGeographicCoordinates)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="args">The serialization args.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson3DProjectedCoordinatesSerializer">
            <summary>
            Represents a serializer for a GeoJson3DProjectedCoordinates value.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson3DProjectedCoordinatesSerializer.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <param name="args">The deserialization args.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson3DProjectedCoordinatesSerializer.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,MongoDB.Driver.GeoJsonObjectModel.GeoJson3DProjectedCoordinates)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="args">The serialization args.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonBoundingBoxSerializer`1">
            <summary>
            Represents a serializer for a GeoJsonBoundingBox value.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonBoundingBoxSerializer`1.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <param name="args">The deserialization args.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonBoundingBoxSerializer`1.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,MongoDB.Driver.GeoJsonObjectModel.GeoJsonBoundingBox{`0})">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="args">The serialization args.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonCoordinateReferenceSystemSerializer">
            <summary>
            Represents a serializer for a GeoJsonCoordinateReferenceSystem value.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonCoordinateReferenceSystemSerializer.GetActualType(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Gets the actual type.
            </summary>
            <param name="context">The context.</param>
            <returns>The actual type.</returns>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonCoordinatesSerializer">
            <summary>
            Represents a serializer for a GeoJsonCoordinates value.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonCoordinatesSerializer.GetActualType(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Gets the actual type.
            </summary>
            <param name="context">The context.</param>
            <returns>The actual type.</returns>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonFeatureCollectionSerializer`1">
            <summary>
            Represents a serializer for a GeoJsonFeatureCollection value.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonFeatureCollectionSerializer`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonFeatureCollectionSerializer`1"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonFeatureCollectionSerializer`1.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <param name="args">The deserialization args.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonFeatureCollectionSerializer`1.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeatureCollection{`0})">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="args">The serialization args.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonFeatureSerializer`1">
            <summary>
            Represents a serializer for a GeoJsonFeature value.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonFeatureSerializer`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonFeatureSerializer`1"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonFeatureSerializer`1.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <param name="args">The deserialization args.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonFeatureSerializer`1.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeature{`0})">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="args">The serialization args.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonGeometryCollectionSerializer`1">
            <summary>
            Represents a serializer for a GeoJsonGeometryCollection value.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonGeometryCollectionSerializer`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonGeometryCollectionSerializer`1"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonGeometryCollectionSerializer`1.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <param name="args">The deserialization args.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonGeometryCollectionSerializer`1.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometryCollection{`0})">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="args">The serialization args.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonGeometrySerializer`1">
            <summary>
            Represents a serializer for a GeoJsonGeometry value.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonGeometrySerializer`1.GetActualType(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Gets the actual type.
            </summary>
            <param name="context">The context.</param>
            <returns>The actual type.</returns>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonLinearRingCoordinatesSerializer`1">
            <summary>
            Represents a serializer for a GeoJsonLinearRingCoordinates value.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonLinearRingCoordinatesSerializer`1.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <param name="args">The deserialization args.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonLinearRingCoordinatesSerializer`1.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,MongoDB.Driver.GeoJsonObjectModel.GeoJsonLinearRingCoordinates{`0})">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="args">The serialization args.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonLineStringCoordinatesSerializer`1">
            <summary>
            Represents a serializer for a GeoJsonLineStringCoordinates value.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonLineStringCoordinatesSerializer`1.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <param name="args">The deserialization args.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonLineStringCoordinatesSerializer`1.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,MongoDB.Driver.GeoJsonObjectModel.GeoJsonLineStringCoordinates{`0})">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="args">The serialization args.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonLineStringSerializer`1">
            <summary>
            Represents a serializer for a GeoJsonLineString value.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonLineStringSerializer`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonLineStringSerializer`1"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonLineStringSerializer`1.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <param name="args">The deserialization args.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonLineStringSerializer`1.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,MongoDB.Driver.GeoJsonObjectModel.GeoJsonLineString{`0})">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="args">The serialization args.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonLinkedCoordinateReferenceSystemSerializer">
            <summary>
            Represents a serializer for a GeoJsonLinkedCoordinateReferenceSystem value.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonLinkedCoordinateReferenceSystemSerializer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonLinkedCoordinateReferenceSystemSerializer"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonLinkedCoordinateReferenceSystemSerializer.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)">
            <summary>
            Deserializes a class.
            </summary>
            <param name="context">The deserialization context.</param>
            <param name="args">The deserialization args.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonLinkedCoordinateReferenceSystemSerializer.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,MongoDB.Driver.GeoJsonObjectModel.GeoJsonLinkedCoordinateReferenceSystem)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="args">The serialization args.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiLineStringCoordinatesSerializer`1">
            <summary>
            Represents a serializer for a GeoJsonMultiLineStringCoordinates value.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiLineStringCoordinatesSerializer`1.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <param name="args">The deserialization args.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiLineStringCoordinatesSerializer`1.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiLineStringCoordinates{`0})">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="args">The serialization args.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiLineStringSerializer`1">
            <summary>
            Represents a serializer for a GeoJsonMultiLineString value.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiLineStringSerializer`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiLineStringSerializer`1"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiLineStringSerializer`1.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <param name="args">The deserialization args.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiLineStringSerializer`1.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiLineString{`0})">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="args">The serialization args.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiPointCoordinatesSerializer`1">
            <summary>
            Represents a serializer for a GeoJsonMultiPointCoordinates value.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiPointCoordinatesSerializer`1.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <param name="args">The deserialization args.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiPointCoordinatesSerializer`1.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPointCoordinates{`0})">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="args">The serialization args.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiPointSerializer`1">
            <summary>
            Represents a serializer for a GeoJsonMultiPoint value.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiPointSerializer`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiPointSerializer`1"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiPointSerializer`1.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <param name="args">The deserialization args.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiPointSerializer`1.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPoint{`0})">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="args">The serialization args.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiPolygonCoordinatesSerializer`1">
            <summary>
            Represents a serializer for a GeoJsonMultiPolygonCoordinates value.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiPolygonCoordinatesSerializer`1.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <param name="args">The deserialization args.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiPolygonCoordinatesSerializer`1.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPolygonCoordinates{`0})">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="args">The serialization args.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiPolygonSerializer`1">
            <summary>
            Represents a serializer for a GeoJsonMultiPolygon value.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiPolygonSerializer`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiPolygonSerializer`1"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiPolygonSerializer`1.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <param name="args">The deserialization args.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiPolygonSerializer`1.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPolygon{`0})">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="args">The serialization args.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonNamedCoordinateReferenceSystemSerializer">
            <summary>
            Represents a serializer for a GeoJsonNamedCoordinateReferenceSystem value.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonNamedCoordinateReferenceSystemSerializer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonNamedCoordinateReferenceSystemSerializer"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonNamedCoordinateReferenceSystemSerializer.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)">
            <summary>
            Deserializes a class.
            </summary>
            <param name="context">The deserialization context.</param>
            <param name="args">The deserialization args.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonNamedCoordinateReferenceSystemSerializer.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,MongoDB.Driver.GeoJsonObjectModel.GeoJsonNamedCoordinateReferenceSystem)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="args">The serialization args.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonObjectSerializer`1">
            <summary>
            Represents a serializer for a GeoJson object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonObjectSerializer`1.GetActualType(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Gets the actual type.
            </summary>
            <param name="context">The context.</param>
            <returns>The actual type.</returns>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonObjectSerializerHelper`1">
            <summary>
            Represents a serializer helper for GeoJsonObjects.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonObjectSerializerHelper`1.#ctor(System.String,MongoDB.Bson.Serialization.Serializers.SerializerHelper.Member[])">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonObjectSerializerHelper`1"/> class.
            </summary>
            <param name="type">The type.</param>
            <param name="derivedMembers">The derived members.</param>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonObjectSerializerHelper`1.DeserializeBaseMember(MongoDB.Bson.Serialization.BsonDeserializationContext,System.String,System.Int64,MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs{`0})">
            <summary>
            Deserializes a base member.
            </summary>
            <param name="context">The context.</param>
            <param name="elementName">The element name.</param>
            <param name="flag">The flag.</param>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonObjectSerializerHelper`1.SerializeMembers``1(MongoDB.Bson.Serialization.BsonSerializationContext,``0,System.Action{MongoDB.Bson.Serialization.BsonSerializationContext,``0})">
            <summary>
            Serializes the members.
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="context">The context.</param>
            <param name="value">The value.</param>
            <param name="serializeDerivedMembers">The delegate to serialize the derived members.</param>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonPointSerializer`1">
            <summary>
            Represents a serializer for a GeoJsonPoint value.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonPointSerializer`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonPointSerializer`1"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonPointSerializer`1.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <param name="args">The deserialization args.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonPointSerializer`1.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,MongoDB.Driver.GeoJsonObjectModel.GeoJsonPoint{`0})">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="args">The serialization args.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonPolygonCoordinatesSerializer`1">
            <summary>
            Represents a serializer for a GeoJsonPolygonCoordinates value.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonPolygonCoordinatesSerializer`1.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <param name="args">The deserialization args.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonPolygonCoordinatesSerializer`1.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygonCoordinates{`0})">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="args">The serialization args.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonPolygonSerializer`1">
            <summary>
            Represents a serializer for a GeoJsonPolygon value.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonPolygonSerializer`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonPointSerializer`1"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonPolygonSerializer`1.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <param name="args">The deserialization args.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonPolygonSerializer`1.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygon{`0})">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="args">The serialization args.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:MongoDB.Driver.IAggregateFluent`1">
            <summary>
            Fluent interface for aggregate.
            </summary>
            <remarks>
            This interface is not guaranteed to remain stable. Implementors should use
            <see cref="T:MongoDB.Driver.AggregateFluentBase`1" />.
            </remarks>
            <typeparam name="TResult">The type of the result of the pipeline.</typeparam>
        </member>
        <member name="P:MongoDB.Driver.IAggregateFluent`1.Database">
            <summary>
            Gets the database.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.IAggregateFluent`1.Options">
            <summary>
            Gets the options.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.IAggregateFluent`1.Stages">
            <summary>
            Gets the stages.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluent`1.AppendStage``1(MongoDB.Driver.PipelineStageDefinition{`0,``0})">
            <summary>
            Appends the stage to the pipeline.
            </summary>
            <typeparam name="TNewResult">The type of the result of the stage.</typeparam>
            <param name="stage">The stage.</param>
            <returns>The fluent aggregate interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluent`1.As``1(MongoDB.Bson.Serialization.IBsonSerializer{``0})">
            <summary>
            Changes the result type of the pipeline.
            </summary>
            <typeparam name="TNewResult">The type of the new result.</typeparam>
            <param name="newResultSerializer">The new result serializer.</param>
            <returns>The fluent aggregate interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluent`1.Bucket``1(MongoDB.Driver.AggregateExpressionDefinition{`0,``0},System.Collections.Generic.IEnumerable{``0},MongoDB.Driver.AggregateBucketOptions{``0})">
            <summary>
            Appends a $bucket stage to the pipeline.
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="groupBy">The expression providing the value to group by.</param>
            <param name="boundaries">The bucket boundaries.</param>
            <param name="options">The options.</param>
            <returns>The fluent aggregate interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluent`1.Bucket``2(MongoDB.Driver.AggregateExpressionDefinition{`0,``0},System.Collections.Generic.IEnumerable{``0},MongoDB.Driver.ProjectionDefinition{`0,``1},MongoDB.Driver.AggregateBucketOptions{``0})">
            <summary>
            Appends a $bucket stage to the pipeline with a custom projection.
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
            <typeparam name="TNewResult">The type of the new result.</typeparam>
            <param name="groupBy">The expression providing the value to group by.</param>
            <param name="boundaries">The bucket boundaries.</param>
            <param name="output">The output projection.</param>
            <param name="options">The options.</param>
            <returns>The fluent aggregate interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluent`1.BucketAuto``1(MongoDB.Driver.AggregateExpressionDefinition{`0,``0},System.Int32,MongoDB.Driver.AggregateBucketAutoOptions)">
            <summary>
            Appends a $bucketAuto stage to the pipeline.
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="groupBy">The expression providing the value to group by.</param>
            <param name="buckets">The number of buckets.</param>
            <param name="options">The options (optional).</param>
            <returns>The fluent aggregate interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluent`1.BucketAuto``2(MongoDB.Driver.AggregateExpressionDefinition{`0,``0},System.Int32,MongoDB.Driver.ProjectionDefinition{`0,``1},MongoDB.Driver.AggregateBucketAutoOptions)">
            <summary>
            Appends a $bucketAuto stage to the pipeline with a custom projection.
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
            <typeparam name="TNewResult">The type of the new result.</typeparam>
            <param name="groupBy">The expression providing the value to group by.</param>
            <param name="buckets">The number of buckets.</param>
            <param name="output">The output projection.</param>
            <param name="options">The options (optional).</param>
            <returns>The fluent aggregate interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluent`1.ChangeStream(MongoDB.Driver.ChangeStreamStageOptions)">
            <summary>
            Appends a $changeStream stage to the pipeline.
            Normally you would prefer to use the Watch method of <see cref="T:MongoDB.Driver.IMongoCollection`1" />.
            Only use this method if subsequent stages project away the resume token (the _id)
            or you don't want the resulting cursor to automatically resume.
            </summary>
            <param name="options">The options.</param>
            <returns>The fluent aggregate interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluent`1.Count">
            <summary>
            Appends a count stage to the pipeline.
            </summary>
            <returns>The fluent aggregate interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluent`1.Facet``1(System.Collections.Generic.IEnumerable{MongoDB.Driver.AggregateFacet{`0}},MongoDB.Driver.AggregateFacetOptions{``0})">
            <summary>
            Appends a $facet stage to the pipeline.
            </summary>
            <typeparam name="TNewResult">The type of the new result.</typeparam>
            <param name="facets">The facets.</param>
            <param name="options">The options.</param>
            <returns>
            The fluent aggregate interface.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluent`1.GraphLookup``7(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.FieldDefinition{``0,``1},MongoDB.Driver.FieldDefinition{``0,``2},MongoDB.Driver.AggregateExpressionDefinition{`0,``3},MongoDB.Driver.FieldDefinition{``6,``5},MongoDB.Driver.FieldDefinition{``4,System.Int32},MongoDB.Driver.AggregateGraphLookupOptions{``0,``4,``6})">
            <summary>
            Appends a $graphLookup stage to the pipeline.
            </summary>
            <typeparam name="TFrom">The type of the from documents.</typeparam>
            <typeparam name="TConnectFrom">The type of the connect from field (must be either TConnectTo or a type that implements IEnumerable{TConnectTo}).</typeparam>
            <typeparam name="TConnectTo">The type of the connect to field.</typeparam>
            <typeparam name="TStartWith">The type of the start with expression (must be either TConnectTo or a type that implements IEnumerable{TConnectTo}).</typeparam>
            <typeparam name="TAsElement">The type of the as field elements.</typeparam>
            <typeparam name="TAs">The type of the as field.</typeparam>
            <typeparam name="TNewResult">The type of the new result (must be same as TResult with an additional as field).</typeparam>
            <param name="from">The from collection.</param>
            <param name="connectFromField">The connect from field.</param>
            <param name="connectToField">The connect to field.</param>
            <param name="startWith">The start with value.</param>
            <param name="as">The as field.</param>
            <param name="depthField">The depth field.</param>
            <param name="options">The options.</param>
            <returns>The fluent aggregate interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluent`1.Group``1(MongoDB.Driver.ProjectionDefinition{`0,``0})">
            <summary>
            Appends a group stage to the pipeline.
            </summary>
            <typeparam name="TNewResult">The type of the result of the stage.</typeparam>
            <param name="group">The group projection.</param>
            <returns>The fluent aggregate interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluent`1.Limit(System.Int32)">
            <summary>
            Appends a limit stage to the pipeline.
            </summary>
            <param name="limit">The limit.</param>
            <returns>The fluent aggregate interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluent`1.Lookup``2(System.String,MongoDB.Driver.FieldDefinition{`0},MongoDB.Driver.FieldDefinition{``0},MongoDB.Driver.FieldDefinition{``1},MongoDB.Driver.AggregateLookupOptions{``0,``1})">
            <summary>
            Appends a lookup stage to the pipeline.
            </summary>
            <typeparam name="TForeignDocument">The type of the foreign document.</typeparam>
            <typeparam name="TNewResult">The type of the new result.</typeparam>
            <param name="foreignCollectionName">Name of the other collection.</param>
            <param name="localField">The local field.</param>
            <param name="foreignField">The foreign field.</param>
            <param name="as">The field in <typeparamref name="TNewResult" /> to place the foreign results.</param>
            <param name="options">The options.</param>
            <returns>The fluent aggregate interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluent`1.Lookup``4(MongoDB.Driver.IMongoCollection{``0},MongoDB.Bson.BsonDocument,MongoDB.Driver.PipelineDefinition{``0,``1},MongoDB.Driver.FieldDefinition{``3,``2},MongoDB.Driver.AggregateLookupOptions{``0,``3})">
            <summary>
            Appends a lookup stage to the pipeline.
            </summary>
            <typeparam name="TForeignDocument">The type of the foreign collection documents.</typeparam>
            <typeparam name="TAsElement">The type of the as field elements.</typeparam>
            <typeparam name="TAs">The type of the as field.</typeparam>
            <typeparam name="TNewResult">The type of the new result.</typeparam>
            <param name="foreignCollection">The foreign collection.</param>
            <param name="let">The "let" definition.</param>
            <param name="lookupPipeline">The lookup pipeline.</param>
            <param name="as">The as field in <typeparamref name="TNewResult" /> in which to place the results of the lookup pipeline.</param>
            <param name="options">The options.</param>
            <returns>The fluent aggregate interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluent`1.Match(MongoDB.Driver.FilterDefinition{`0})">
            <summary>
            Appends a match stage to the pipeline.
            </summary>
            <param name="filter">The filter.</param>
            <returns>The fluent aggregate interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluent`1.Merge``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.MergeStageOptions{``0},System.Threading.CancellationToken)">
            <summary>
            Appends a merge stage to the pipeline and executes it, and then returns a cursor to read the contents of the output collection.
            </summary>
            <typeparam name="TOutput">The type of output documents.</typeparam>
            <param name="outputCollection">The output collection.</param>
            <param name="mergeOptions">The merge options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A cursor.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluent`1.MergeAsync``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.MergeStageOptions{``0},System.Threading.CancellationToken)">
            <summary>
            Appends a merge stage to the pipeline and executes it, and then returns a cursor to read the contents of the output collection.
            </summary>
            <typeparam name="TOutput">The type of output documents.</typeparam>
            <param name="outputCollection">The output collection.</param>
            <param name="mergeOptions">The merge options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A cursor.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluent`1.OfType``1(MongoDB.Bson.Serialization.IBsonSerializer{``0})">
            <summary>
            Appends a match stage to the pipeline that matches derived documents and changes the result type to the derived type.
            </summary>
            <typeparam name="TNewResult">The type of the derived documents.</typeparam>
            <param name="newResultSerializer">The new result serializer.</param>
            <returns>The fluent aggregate interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluent`1.Out(System.String,System.Threading.CancellationToken)">
            <summary>
            Appends an out stage to the pipeline and executes it, and then returns a cursor to read the contents of the output collection.
            </summary>
            <param name="collectionName">Name of the collection.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A cursor.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluent`1.OutAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Appends an out stage to the pipeline and executes it, and then returns a cursor to read the contents of the output collection.
            </summary>
            <param name="collectionName">Name of the collection.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task whose result is a cursor.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluent`1.Project``1(MongoDB.Driver.ProjectionDefinition{`0,``0})">
            <summary>
            Appends a project stage to the pipeline.
            </summary>
            <typeparam name="TNewResult">The type of the result of the stage.</typeparam>
            <param name="projection">The projection.</param>
            <returns>
            The fluent aggregate interface.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluent`1.ReplaceRoot``1(MongoDB.Driver.AggregateExpressionDefinition{`0,``0})">
            <summary>
            Appends a $replaceRoot stage to the pipeline.
            </summary>
            <typeparam name="TNewResult">The type of the new result.</typeparam>
            <param name="newRoot">The new root.</param>
            <returns>The fluent aggregate interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluent`1.ReplaceWith``1(MongoDB.Driver.AggregateExpressionDefinition{`0,``0})">
            <summary>
            Appends a $replaceWith stage to the pipeline.
            </summary>
            <typeparam name="TNewResult">The type of the new result.</typeparam>
            <param name="newRoot">The new root.</param>
            <returns>The fluent aggregate interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluent`1.Skip(System.Int32)">
            <summary>
            Appends a skip stage to the pipeline.
            </summary>
            <param name="skip">The number of documents to skip.</param>
            <returns>The fluent aggregate interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluent`1.Sort(MongoDB.Driver.SortDefinition{`0})">
            <summary>
            Appends a sort stage to the pipeline.
            </summary>
            <param name="sort">The sort specification.</param>
            <returns>The fluent aggregate interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluent`1.SortByCount``1(MongoDB.Driver.AggregateExpressionDefinition{`0,``0})">
            <summary>
            Appends a sortByCount stage to the pipeline.
            </summary>
            <typeparam name="TId">The type of the identifier.</typeparam>
            <param name="id">The identifier.</param>
            <returns>The fluent aggregate interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluent`1.Unwind``1(MongoDB.Driver.FieldDefinition{`0},MongoDB.Bson.Serialization.IBsonSerializer{``0})">
            <summary>
            Appends an unwind stage to the pipeline.
            </summary>
            <typeparam name="TNewResult">The type of the result of the stage.</typeparam>
            <param name="field">The field.</param>
            <param name="newResultSerializer">The new result serializer.</param>
            <returns>
            The fluent aggregate interface.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluent`1.Unwind``1(MongoDB.Driver.FieldDefinition{`0},MongoDB.Driver.AggregateUnwindOptions{``0})">
            <summary>
            Appends an unwind stage to the pipeline.
            </summary>
            <typeparam name="TNewResult">The type of the new result.</typeparam>
            <param name="field">The field.</param>
            <param name="options">The options.</param>
            <returns>The fluent aggregate interface.</returns>
        </member>
        <member name="T:MongoDB.Driver.IOrderedAggregateFluent`1">
            <summary>
            Fluent interface for aggregate.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.IOrderedAggregateFluent`1.ThenBy(MongoDB.Driver.SortDefinition{`0})">
            <summary>
            Combines the current sort definition with an additional sort definition.
            </summary>
            <param name="newSort">The new sort.</param>
            <returns>The fluent aggregate interface.</returns>
        </member>
        <member name="T:MongoDB.Driver.IAggregateFluentExtensions">
            <summary>
            Extension methods for <see cref="T:MongoDB.Driver.IAggregateFluent`1"/>
            </summary>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluentExtensions.Bucket``2(MongoDB.Driver.IAggregateFluent{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{``1},MongoDB.Driver.AggregateBucketOptions{``1})">
            <summary>
            Appends a $bucket stage to the pipeline.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="aggregate">The aggregate.</param>
            <param name="groupBy">The expression providing the value to group by.</param>
            <param name="boundaries">The bucket boundaries.</param>
            <param name="options">The options.</param>
            <returns>The fluent aggregate interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluentExtensions.Bucket``3(MongoDB.Driver.IAggregateFluent{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{System.Linq.IGrouping{``1,``0},``2}},MongoDB.Driver.AggregateBucketOptions{``1})">
            <summary>
            Appends a $bucket stage to the pipeline.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
            <typeparam name="TNewResult">The type of the new result.</typeparam>
            <param name="aggregate">The aggregate.</param>
            <param name="groupBy">The expression providing the value to group by.</param>
            <param name="boundaries">The bucket boundaries.</param>
            <param name="output">The output projection.</param>
            <param name="options">The options.</param>
            <returns>The fluent aggregate interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluentExtensions.BucketAuto``2(MongoDB.Driver.IAggregateFluent{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int32,MongoDB.Driver.AggregateBucketAutoOptions)">
            <summary>
            Appends a $bucketAuto stage to the pipeline.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="aggregate">The aggregate.</param>
            <param name="groupBy">The expression providing the value to group by.</param>
            <param name="buckets">The number of buckets.</param>
            <param name="options">The options (optional).</param>
            <returns>The fluent aggregate interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluentExtensions.BucketAuto``3(MongoDB.Driver.IAggregateFluent{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int32,System.Linq.Expressions.Expression{System.Func{System.Linq.IGrouping{``1,``0},``2}},MongoDB.Driver.AggregateBucketAutoOptions)">
            <summary>
            Appends a $bucketAuto stage to the pipeline.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
            <typeparam name="TNewResult">The type of the new result.</typeparam>
            <param name="aggregate">The aggregate.</param>
            <param name="groupBy">The expression providing the value to group by.</param>
            <param name="buckets">The number of buckets.</param>
            <param name="output">The output projection.</param>
            <param name="options">The options (optional).</param>
            <returns>The fluent aggregate interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluentExtensions.Facet``1(MongoDB.Driver.IAggregateFluent{``0},System.Collections.Generic.IEnumerable{MongoDB.Driver.AggregateFacet{``0}})">
            <summary>
            Appends a $facet stage to the pipeline.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="aggregate">The aggregate.</param>
            <param name="facets">The facets.</param>
            <returns>The fluent aggregate interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluentExtensions.Facet``1(MongoDB.Driver.IAggregateFluent{``0},MongoDB.Driver.AggregateFacet{``0}[])">
            <summary>
            Appends a $facet stage to the pipeline.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="aggregate">The aggregate.</param>
            <param name="facets">The facets.</param>
            <returns>The fluent aggregate interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluentExtensions.Facet``2(MongoDB.Driver.IAggregateFluent{``0},MongoDB.Driver.AggregateFacet{``0}[])">
            <summary>
            Appends a $facet stage to the pipeline.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <typeparam name="TNewResult">The type of the new result.</typeparam>
            <param name="aggregate">The aggregate.</param>
            <param name="facets">The facets.</param>
            <returns>
            The fluent aggregate interface.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluentExtensions.GraphLookup``7(MongoDB.Driver.IAggregateFluent{``0},MongoDB.Driver.IMongoCollection{``1},MongoDB.Driver.FieldDefinition{``1,``2},MongoDB.Driver.FieldDefinition{``1,``3},MongoDB.Driver.AggregateExpressionDefinition{``0,``4},MongoDB.Driver.FieldDefinition{``6,``5},MongoDB.Driver.AggregateGraphLookupOptions{``1,``1,``6})">
            <summary>
            Appends a $graphLookup stage to the pipeline.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <typeparam name="TFrom">The type of the from documents.</typeparam>
            <typeparam name="TConnectFrom">The type of the connect from field (must be either TConnectTo or a type that implements IEnumerable{TConnectTo}).</typeparam>
            <typeparam name="TConnectTo">The type of the connect to field.</typeparam>
            <typeparam name="TStartWith">The type of the start with expression (must be either TConnectTo or a type that implements IEnumerable{TConnectTo}).</typeparam>
            <typeparam name="TAs">The type of the as field.</typeparam>
            <typeparam name="TNewResult">The type of the new result (must be same as TResult with an additional as field).</typeparam>
            <param name="aggregate">The aggregate.</param>
            <param name="from">The from collection.</param>
            <param name="connectFromField">The connect from field.</param>
            <param name="connectToField">The connect to field.</param>
            <param name="startWith">The start with value.</param>
            <param name="as">The as field.</param>
            <param name="options">The options.</param>
            <returns>The fluent aggregate interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluentExtensions.GraphLookup``2(MongoDB.Driver.IAggregateFluent{``0},MongoDB.Driver.IMongoCollection{``1},MongoDB.Driver.FieldDefinition{``1,MongoDB.Bson.BsonValue},MongoDB.Driver.FieldDefinition{``1,MongoDB.Bson.BsonValue},MongoDB.Driver.AggregateExpressionDefinition{``0,MongoDB.Bson.BsonValue},MongoDB.Driver.FieldDefinition{MongoDB.Bson.BsonDocument,System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonDocument}},MongoDB.Driver.FieldDefinition{MongoDB.Bson.BsonDocument,System.Int32})">
            <summary>
            Appends a $graphLookup stage to the pipeline.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <typeparam name="TFrom">The type of the from documents.</typeparam>
            <param name="aggregate">The aggregate.</param>
            <param name="from">The from collection.</param>
            <param name="connectFromField">The connect from field.</param>
            <param name="connectToField">The connect to field.</param>
            <param name="startWith">The start with value.</param>
            <param name="as">The as field.</param>
            <param name="depthField">The depth field.</param>
            <returns>The fluent aggregate interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluentExtensions.GraphLookup``7(MongoDB.Driver.IAggregateFluent{``0},MongoDB.Driver.IMongoCollection{``1},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``1,``3}},System.Linq.Expressions.Expression{System.Func{``0,``4}},System.Linq.Expressions.Expression{System.Func{``6,``5}},MongoDB.Driver.AggregateGraphLookupOptions{``1,``1,``6})">
            <summary>
            Appends a $graphLookup stage to the pipeline.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <typeparam name="TNewResult">The type of the new result (must be same as TResult with an additional as field).</typeparam>
            <typeparam name="TFrom">The type of the from documents.</typeparam>
            <typeparam name="TConnectFrom">The type of the connect from field (must be either TConnectTo or a type that implements IEnumerable{TConnectTo}).</typeparam>
            <typeparam name="TConnectTo">The type of the connect to field.</typeparam>
            <typeparam name="TStartWith">The type of the start with expression (must be either TConnectTo or a type that implements IEnumerable{TConnectTo}).</typeparam>
            <typeparam name="TAs">The type of the as field.</typeparam>
            <param name="aggregate">The aggregate.</param>
            <param name="from">The from collection.</param>
            <param name="connectFromField">The connect from field.</param>
            <param name="connectToField">The connect to field.</param>
            <param name="startWith">The start with value.</param>
            <param name="as">The as field.</param>
            <param name="options">The options.</param>
            <returns>The fluent aggregate interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluentExtensions.GraphLookup``8(MongoDB.Driver.IAggregateFluent{``0},MongoDB.Driver.IMongoCollection{``1},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``1,``3}},System.Linq.Expressions.Expression{System.Func{``0,``4}},System.Linq.Expressions.Expression{System.Func{``7,``6}},System.Linq.Expressions.Expression{System.Func{``5,System.Int32}},MongoDB.Driver.AggregateGraphLookupOptions{``1,``5,``7})">
            <summary>
            Appends a $graphLookup stage to the pipeline.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <typeparam name="TFrom">The type of the from documents.</typeparam>
            <typeparam name="TConnectFrom">The type of the connect from field (must be either TConnectTo or a type that implements IEnumerable{TConnectTo}).</typeparam>
            <typeparam name="TConnectTo">The type of the connect to field.</typeparam>
            <typeparam name="TStartWith">The type of the start with expression (must be either TConnectTo or a type that implements IEnumerable{TConnectTo}).</typeparam>
            <typeparam name="TAsElement">The type of the as field elements.</typeparam>
            <typeparam name="TAs">The type of the as field.</typeparam>
            <typeparam name="TNewResult">The type of the new result (must be same as TResult with an additional as field).</typeparam>
            <param name="aggregate">The aggregate.</param>
            <param name="from">The from collection.</param>
            <param name="connectFromField">The connect from field.</param>
            <param name="connectToField">The connect to field.</param>
            <param name="startWith">The start with value.</param>
            <param name="as">The as field.</param>
            <param name="depthField">The depth field.</param>
            <param name="options">The options.</param>
            <returns>The fluent aggregate interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluentExtensions.Group``1(MongoDB.Driver.IAggregateFluent{``0},MongoDB.Driver.ProjectionDefinition{``0,MongoDB.Bson.BsonDocument})">
            <summary>
            Appends a group stage to the pipeline.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="aggregate">The aggregate.</param>
            <param name="group">The group projection.</param>
            <returns>
            The fluent aggregate interface.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluentExtensions.Group``3(MongoDB.Driver.IAggregateFluent{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{System.Linq.IGrouping{``1,``0},``2}})">
            <summary>
            Appends a group stage to the pipeline.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <typeparam name="TKey">The type of the key.</typeparam>
            <typeparam name="TNewResult">The type of the new result.</typeparam>
            <param name="aggregate">The aggregate.</param>
            <param name="id">The id.</param>
            <param name="group">The group projection.</param>
            <returns>
            The fluent aggregate interface.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluentExtensions.Lookup``1(MongoDB.Driver.IAggregateFluent{``0},System.String,MongoDB.Driver.FieldDefinition{``0},MongoDB.Driver.FieldDefinition{MongoDB.Bson.BsonDocument},MongoDB.Driver.FieldDefinition{MongoDB.Bson.BsonDocument})">
            <summary>
            Appends a lookup stage to the pipeline.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="aggregate">The aggregate.</param>
            <param name="foreignCollectionName">Name of the foreign collection.</param>
            <param name="localField">The local field.</param>
            <param name="foreignField">The foreign field.</param>
            <param name="as">The field in the result to place the foreign matches.</param>
            <returns>The fluent aggregate interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluentExtensions.Lookup``3(MongoDB.Driver.IAggregateFluent{``0},MongoDB.Driver.IMongoCollection{``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Linq.Expressions.Expression{System.Func{``1,System.Object}},System.Linq.Expressions.Expression{System.Func{``2,System.Object}},MongoDB.Driver.AggregateLookupOptions{``1,``2})">
            <summary>
            Appends a lookup stage to the pipeline.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <typeparam name="TForeignDocument">The type of the foreign collection.</typeparam>
            <typeparam name="TNewResult">The type of the new result.</typeparam>
            <param name="aggregate">The aggregate.</param>
            <param name="foreignCollection">The foreign collection.</param>
            <param name="localField">The local field.</param>
            <param name="foreignField">The foreign field.</param>
            <param name="as">The field in the result to place the foreign matches.</param>
            <param name="options">The options.</param>
            <returns>The fluent aggregate interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluentExtensions.Lookup``1(MongoDB.Driver.IAggregateFluent{``0},MongoDB.Driver.IMongoCollection{MongoDB.Bson.BsonDocument},MongoDB.Bson.BsonDocument,MongoDB.Driver.PipelineDefinition{MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonDocument},MongoDB.Driver.FieldDefinition{MongoDB.Bson.BsonDocument,System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonDocument}})">
            <summary>
            Appends a lookup stage to the pipeline.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="aggregate">The aggregate.</param>
            <param name="foreignCollection">The foreign collection.</param>
            <param name="let">The "let" definition.</param>
            <param name="lookupPipeline">The lookup pipeline.</param>
            <param name="as">The as field in the result in which to place the results of the lookup pipeline.</param>
            <returns>The fluent aggregate interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluentExtensions.Lookup``5(MongoDB.Driver.IAggregateFluent{``0},MongoDB.Driver.IMongoCollection{``1},MongoDB.Bson.BsonDocument,MongoDB.Driver.PipelineDefinition{``1,``2},System.Linq.Expressions.Expression{System.Func{``4,``3}},MongoDB.Driver.AggregateLookupOptions{``1,``4})">
            <summary>
            Appends a lookup stage to the pipeline.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <typeparam name="TForeignDocument">The type of the foreign collection documents.</typeparam>
            <typeparam name="TAsElement">The type of the as field elements.</typeparam>
            <typeparam name="TAs">The type of the as field.</typeparam>
            <typeparam name="TNewResult">The type of the new result.</typeparam>
            <param name="aggregate">The aggregate.</param>
            <param name="foreignCollection">The foreign collection.</param>
            <param name="let">The "let" definition.</param>
            <param name="lookupPipeline">The lookup pipeline.</param>
            <param name="as">The as field in <typeparamref name="TNewResult" /> in which to place the results of the lookup pipeline.</param>
            <param name="options">The options.</param>
            <returns>The fluent aggregate interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluentExtensions.Match``1(MongoDB.Driver.IAggregateFluent{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            Appends a match stage to the pipeline.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="aggregate">The aggregate.</param>
            <param name="filter">The filter.</param>
            <returns>
            The fluent aggregate interface.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluentExtensions.Project``1(MongoDB.Driver.IAggregateFluent{``0},MongoDB.Driver.ProjectionDefinition{``0,MongoDB.Bson.BsonDocument})">
            <summary>
            Appends a project stage to the pipeline.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="aggregate">The aggregate.</param>
            <param name="projection">The projection.</param>
            <returns>
            The fluent aggregate interface.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluentExtensions.Project``2(MongoDB.Driver.IAggregateFluent{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            Appends a project stage to the pipeline.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <typeparam name="TNewResult">The type of the new result.</typeparam>
            <param name="aggregate">The aggregate.</param>
            <param name="projection">The projection.</param>
            <returns>
            The fluent aggregate interface.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluentExtensions.ReplaceRoot``2(MongoDB.Driver.IAggregateFluent{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            Appends a $replaceRoot stage to the pipeline.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <typeparam name="TNewResult">The type of the new result.</typeparam>
            <param name="aggregate">The aggregate.</param>
            <param name="newRoot">The new root.</param>
            <returns>
            The fluent aggregate interface.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluentExtensions.ReplaceWith``2(MongoDB.Driver.IAggregateFluent{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            Appends a $replaceWith stage to the pipeline.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <typeparam name="TNewResult">The type of the new result.</typeparam>
            <param name="aggregate">The aggregate.</param>
            <param name="newRoot">The new root.</param>
            <returns>
            The fluent aggregate interface.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluentExtensions.SortBy``1(MongoDB.Driver.IAggregateFluent{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Appends an ascending sort stage to the pipeline.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="aggregate">The aggregate.</param>
            <param name="field">The field to sort by.</param>
            <returns>
            The fluent aggregate interface.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluentExtensions.SortByCount``2(MongoDB.Driver.IAggregateFluent{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            Appends a sortByCount stage to the pipeline.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <typeparam name="TKey">The type of the key.</typeparam>
            <param name="aggregate">The aggregate.</param>
            <param name="id">The id.</param>
            <returns>
            The fluent aggregate interface.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluentExtensions.SortByDescending``1(MongoDB.Driver.IAggregateFluent{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Appends a descending sort stage to the pipeline.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="aggregate">The aggregate.</param>
            <param name="field">The field to sort by.</param>
            <returns>
            The fluent aggregate interface.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluentExtensions.ThenBy``1(MongoDB.Driver.IOrderedAggregateFluent{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Modifies the current sort stage by appending an ascending field specification to it.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="aggregate">The aggregate.</param>
            <param name="field">The field to sort by.</param>
            <returns>
            The fluent aggregate interface.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluentExtensions.ThenByDescending``1(MongoDB.Driver.IOrderedAggregateFluent{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Modifies the current sort stage by appending a descending field specification to it.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="aggregate">The aggregate.</param>
            <param name="field">The field to sort by.</param>
            <returns>
            The fluent aggregate interface.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluentExtensions.Unwind``1(MongoDB.Driver.IAggregateFluent{``0},MongoDB.Driver.FieldDefinition{``0})">
            <summary>
            Appends an unwind stage to the pipeline.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="aggregate">The aggregate.</param>
            <param name="field">The field to unwind.</param>
            <returns>
            The fluent aggregate interface.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluentExtensions.Unwind``1(MongoDB.Driver.IAggregateFluent{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Appends an unwind stage to the pipeline.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="aggregate">The aggregate.</param>
            <param name="field">The field to unwind.</param>
            <returns>
            The fluent aggregate interface.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluentExtensions.Unwind``2(MongoDB.Driver.IAggregateFluent{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},MongoDB.Bson.Serialization.IBsonSerializer{``1})">
            <summary>
            Appends an unwind stage to the pipeline.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <typeparam name="TNewResult">The type of the new result.</typeparam>
            <param name="aggregate">The aggregate.</param>
            <param name="field">The field to unwind.</param>
            <param name="newResultSerializer">The new result serializer.</param>
            <returns>
            The fluent aggregate interface.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluentExtensions.Unwind``2(MongoDB.Driver.IAggregateFluent{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},MongoDB.Driver.AggregateUnwindOptions{``1})">
            <summary>
            Appends an unwind stage to the pipeline.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <typeparam name="TNewResult">The type of the new result.</typeparam>
            <param name="aggregate">The aggregate.</param>
            <param name="field">The field to unwind.</param>
            <param name="options">The options.</param>
            <returns>
            The fluent aggregate interface.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluentExtensions.First``1(MongoDB.Driver.IAggregateFluent{``0},System.Threading.CancellationToken)">
            <summary>
            Returns the first document of the aggregate result.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="aggregate">The aggregate.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The fluent aggregate interface.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluentExtensions.FirstAsync``1(MongoDB.Driver.IAggregateFluent{``0},System.Threading.CancellationToken)">
            <summary>
            Returns the first document of the aggregate result.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="aggregate">The aggregate.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The fluent aggregate interface.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluentExtensions.FirstOrDefault``1(MongoDB.Driver.IAggregateFluent{``0},System.Threading.CancellationToken)">
            <summary>
            Returns the first document of the aggregate result, or the default value if the result set is empty.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="aggregate">The aggregate.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The fluent aggregate interface.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluentExtensions.FirstOrDefaultAsync``1(MongoDB.Driver.IAggregateFluent{``0},System.Threading.CancellationToken)">
            <summary>
            Returns the first document of the aggregate result, or the default value if the result set is empty.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="aggregate">The aggregate.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The fluent aggregate interface.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluentExtensions.Single``1(MongoDB.Driver.IAggregateFluent{``0},System.Threading.CancellationToken)">
            <summary>
            Returns the only document of the aggregate result. Throws an exception if the result set does not contain exactly one document.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="aggregate">The aggregate.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The fluent aggregate interface.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluentExtensions.SingleAsync``1(MongoDB.Driver.IAggregateFluent{``0},System.Threading.CancellationToken)">
            <summary>
            Returns the only document of the aggregate result. Throws an exception if the result set does not contain exactly one document.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="aggregate">The aggregate.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The fluent aggregate interface.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluentExtensions.SingleOrDefault``1(MongoDB.Driver.IAggregateFluent{``0},System.Threading.CancellationToken)">
            <summary>
            Returns the only document of the aggregate result, or the default value if the result set is empty. Throws an exception if the result set contains more than one document.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="aggregate">The aggregate.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The fluent aggregate interface.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IAggregateFluentExtensions.SingleOrDefaultAsync``1(MongoDB.Driver.IAggregateFluent{``0},System.Threading.CancellationToken)">
            <summary>
            Returns the only document of the aggregate result, or the default value if the result set is empty. Throws an exception if the result set contains more than one document.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="aggregate">The aggregate.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The fluent aggregate interface.
            </returns>
        </member>
        <member name="T:MongoDB.Driver.IClientSession">
            <summary>
            The interface for a client session.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.IClientSession.Client">
            <summary>
            Gets the client.
            </summary>
            <value>
            The client.
            </value>
        </member>
        <member name="P:MongoDB.Driver.IClientSession.ClusterTime">
            <summary>
            Gets the cluster time.
            </summary>
            <value>
            The cluster time.
            </value>
        </member>
        <member name="P:MongoDB.Driver.IClientSession.IsImplicit">
            <summary>
            Gets a value indicating whether this session is an implicit session.
            </summary>
            <value>
              <c>true</c> if this session is an implicit session; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MongoDB.Driver.IClientSession.IsInTransaction">
            <summary>
            Gets a value indicating whether this instance is in a transaction.
            </summary>
            <value>
              <c>true</c> if this instance is in a transaction; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MongoDB.Driver.IClientSession.OperationTime">
            <summary>
            Gets the operation time.
            </summary>
            <value>
            The operation time.
            </value>
        </member>
        <member name="P:MongoDB.Driver.IClientSession.Options">
            <summary>
            Gets the options.
            </summary>
            <value>
            The options.
            </value>
        </member>
        <member name="P:MongoDB.Driver.IClientSession.ServerSession">
            <summary>
            Gets the server session.
            </summary>
            <value>
            The server session.
            </value>
        </member>
        <member name="P:MongoDB.Driver.IClientSession.WrappedCoreSession">
            <summary>
            Gets the wrapped core session (intended for internal use only).
            </summary>
            <value>
            The wrapped core session.
            </value>
        </member>
        <member name="M:MongoDB.Driver.IClientSession.AbortTransaction(System.Threading.CancellationToken)">
            <summary>
            Aborts the transaction.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:MongoDB.Driver.IClientSession.AbortTransactionAsync(System.Threading.CancellationToken)">
            <summary>
            Aborts the transaction.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:MongoDB.Driver.IClientSession.AdvanceClusterTime(MongoDB.Bson.BsonDocument)">
            <summary>
            Advances the cluster time.
            </summary>
            <param name="newClusterTime">The new cluster time.</param>
        </member>
        <member name="M:MongoDB.Driver.IClientSession.AdvanceOperationTime(MongoDB.Bson.BsonTimestamp)">
            <summary>
            Advances the operation time.
            </summary>
            <param name="newOperationTime">The new operation time.</param>
        </member>
        <member name="M:MongoDB.Driver.IClientSession.CommitTransaction(System.Threading.CancellationToken)">
            <summary>
            Commits the transaction.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:MongoDB.Driver.IClientSession.CommitTransactionAsync(System.Threading.CancellationToken)">
            <summary>
            Commits the transaction.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:MongoDB.Driver.IClientSession.StartTransaction(MongoDB.Driver.TransactionOptions)">
            <summary>
            Starts a transaction.
            </summary>
            <param name="transactionOptions">The transaction options.</param>
        </member>
        <member name="M:MongoDB.Driver.IClientSession.WithTransaction``1(System.Func{MongoDB.Driver.IClientSessionHandle,System.Threading.CancellationToken,``0},MongoDB.Driver.TransactionOptions,System.Threading.CancellationToken)">
            <summary>
            Executes a callback within a transaction, with retries if needed.
            </summary>
            <param name="callback">The user defined callback.</param>
            <param name="transactionOptions">The transaction options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <typeparam name="TResult">The type of callback result.</typeparam>
            <returns>The callback result.</returns>
        </member>
        <member name="M:MongoDB.Driver.IClientSession.WithTransactionAsync``1(System.Func{MongoDB.Driver.IClientSessionHandle,System.Threading.CancellationToken,System.Threading.Tasks.Task{``0}},MongoDB.Driver.TransactionOptions,System.Threading.CancellationToken)">
            <summary>
            Executes a callback within a transaction, with retries if needed.
            </summary>
            <param name="callbackAsync">The user defined callback.</param>
            <param name="transactionOptions">The transaction options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <typeparam name="TResult">The type of callback result.</typeparam>
            <returns>The callback result.</returns>
        </member>
        <member name="T:MongoDB.Driver.IClientSessionHandle">
            <summary>
            A handle to an underlying reference counted IClientSession.
            </summary>
            <seealso cref="T:MongoDB.Driver.IClientSession" />
        </member>
        <member name="M:MongoDB.Driver.IClientSessionHandle.Fork">
            <summary>
            Forks this instance.
            </summary>
            <returns>A session.</returns>
        </member>
        <member name="T:MongoDB.Driver.IFilteredMongoCollection`1">
            <summary>
            A filtered mongo collection. The filter will be and'ed with all filters.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="P:MongoDB.Driver.IFilteredMongoCollection`1.Filter">
            <summary>
            Gets the filter.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.IFindFluent`2">
            <summary>
            Fluent interface for find.
            </summary>
            <remarks>
            This interface is not guaranteed to remain stable. Implementors should use
            <see cref="T:MongoDB.Driver.FindFluentBase`2" />.
            </remarks>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
        </member>
        <member name="P:MongoDB.Driver.IFindFluent`2.Filter">
            <summary>
            Gets or sets the filter.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.IFindFluent`2.Options">
            <summary>
            Gets the options.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.IFindFluent`2.As``1(MongoDB.Bson.Serialization.IBsonSerializer{``0})">
            <summary>
            A simplified type of projection that changes the result type by using a different serializer.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="resultSerializer">The result serializer.</param>
            <returns>The fluent find interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IFindFluent`2.Count(System.Threading.CancellationToken)">
            <summary>
            Counts the number of documents.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The count.</returns>
        </member>
        <member name="M:MongoDB.Driver.IFindFluent`2.CountAsync(System.Threading.CancellationToken)">
            <summary>
            Counts the number of documents.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task whose result is the count.</returns>
        </member>
        <member name="M:MongoDB.Driver.IFindFluent`2.CountDocuments(System.Threading.CancellationToken)">
            <summary>
            Counts the number of documents.
            </summary>
            <remarks>
            Note: when migrating from Count to CountDocuments the following query operations must be replaced:
            
            <code>
            +-------------+--------------------------------+
            | Operator    | Replacement                    |
            +=============+================================+
            | $where      |  $expr                         |
            +-------------+--------------------------------+
            | $near       |  $geoWithin with $center       |
            +-------------+--------------------------------+
            | $nearSphere |  $geoWithin with $centerSphere |
            +-------------+--------------------------------+
            </code>
            </remarks>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The count.</returns>
        </member>
        <member name="M:MongoDB.Driver.IFindFluent`2.CountDocumentsAsync(System.Threading.CancellationToken)">
            <summary>
            Counts the number of documents.
            </summary>
            <remarks>
            Note: when migrating from CountAsync to CountDocumentsAsync the following query operations must be replaced:
            
            <code>
            +-------------+--------------------------------+
            | Operator    | Replacement                    |
            +=============+================================+
            | $where      |  $expr                         |
            +-------------+--------------------------------+
            | $near       |  $geoWithin with $center       |
            +-------------+--------------------------------+
            | $nearSphere |  $geoWithin with $centerSphere |
            +-------------+--------------------------------+
            </code>
            </remarks>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task whose result is the count.</returns>
        </member>
        <member name="M:MongoDB.Driver.IFindFluent`2.Limit(System.Nullable{System.Int32})">
            <summary>
            Limits the number of documents.
            </summary>
            <param name="limit">The limit.</param>
            <returns>The fluent find interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IFindFluent`2.Project``1(MongoDB.Driver.ProjectionDefinition{`0,``0})">
            <summary>
            Projects the the result.
            </summary>
            <typeparam name="TNewProjection">The type of the projection.</typeparam>
            <param name="projection">The projection.</param>
            <returns>The fluent find interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IFindFluent`2.Skip(System.Nullable{System.Int32})">
            <summary>
            Skips the the specified number of documents.
            </summary>
            <param name="skip">The skip.</param>
            <returns>The fluent find interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IFindFluent`2.Sort(MongoDB.Driver.SortDefinition{`0})">
            <summary>
            Sorts the the documents.
            </summary>
            <param name="sort">The sort.</param>
            <returns>The fluent find interface.</returns>
        </member>
        <member name="T:MongoDB.Driver.IOrderedFindFluent`2">
            <summary>
            Fluent interface for find.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
        </member>
        <member name="T:MongoDB.Driver.IFindFluentExtensions">
            <summary>
            Extension methods for <see cref="T:MongoDB.Driver.IFindFluent`2"/>
            </summary>
        </member>
        <member name="M:MongoDB.Driver.IFindFluentExtensions.Project``2(MongoDB.Driver.IFindFluent{``0,``1},MongoDB.Driver.ProjectionDefinition{``0,MongoDB.Bson.BsonDocument})">
            <summary>
            Projects the result.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
            <param name="find">The fluent find.</param>
            <param name="projection">The projection.</param>
            <returns>The fluent find interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IFindFluentExtensions.Project``3(MongoDB.Driver.IFindFluent{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,``2}})">
            <summary>
            Projects the result.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
            <typeparam name="TNewProjection">The type of the new projection.</typeparam>
            <param name="find">The fluent find.</param>
            <param name="projection">The projection.</param>
            <returns>The fluent find interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IFindFluentExtensions.SortBy``2(MongoDB.Driver.IFindFluent{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Sorts the results by an ascending field.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
            <param name="find">The fluent find.</param>
            <param name="field">The field.</param>
            <returns>The fluent find interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IFindFluentExtensions.SortByDescending``2(MongoDB.Driver.IFindFluent{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Sorts the results by a descending field.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
            <param name="find">The fluent find.</param>
            <param name="field">The field.</param>
            <returns>The fluent find interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IFindFluentExtensions.ThenBy``2(MongoDB.Driver.IOrderedFindFluent{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Adds an ascending field to the existing sort.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
            <param name="find">The fluent find.</param>
            <param name="field">The field.</param>
            <returns>The fluent find interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IFindFluentExtensions.ThenByDescending``2(MongoDB.Driver.IOrderedFindFluent{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Adds a descending field to the existing sort.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
            <param name="find">The fluent find.</param>
            <param name="field">The field.</param>
            <returns>The fluent find interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.IFindFluentExtensions.First``2(MongoDB.Driver.IFindFluent{``0,``1},System.Threading.CancellationToken)">
            <summary>
            Get the first result.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
            <param name="find">The fluent find.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task whose result is the first result.</returns>
        </member>
        <member name="M:MongoDB.Driver.IFindFluentExtensions.FirstAsync``2(MongoDB.Driver.IFindFluent{``0,``1},System.Threading.CancellationToken)">
            <summary>
            Get the first result.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
            <param name="find">The fluent find.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task whose result is the first result.</returns>
        </member>
        <member name="M:MongoDB.Driver.IFindFluentExtensions.FirstOrDefault``2(MongoDB.Driver.IFindFluent{``0,``1},System.Threading.CancellationToken)">
            <summary>
            Get the first result or null.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
            <param name="find">The fluent find.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task whose result is the first result or null.</returns>
        </member>
        <member name="M:MongoDB.Driver.IFindFluentExtensions.FirstOrDefaultAsync``2(MongoDB.Driver.IFindFluent{``0,``1},System.Threading.CancellationToken)">
            <summary>
            Get the first result or null.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
            <param name="find">The fluent find.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task whose result is the first result or null.</returns>
        </member>
        <member name="M:MongoDB.Driver.IFindFluentExtensions.Single``2(MongoDB.Driver.IFindFluent{``0,``1},System.Threading.CancellationToken)">
            <summary>
            Gets a single result.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
            <param name="find">The fluent find.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task whose result is the single result.</returns>
        </member>
        <member name="M:MongoDB.Driver.IFindFluentExtensions.SingleAsync``2(MongoDB.Driver.IFindFluent{``0,``1},System.Threading.CancellationToken)">
            <summary>
            Gets a single result.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
            <param name="find">The fluent find.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task whose result is the single result.</returns>
        </member>
        <member name="M:MongoDB.Driver.IFindFluentExtensions.SingleOrDefault``2(MongoDB.Driver.IFindFluent{``0,``1},System.Threading.CancellationToken)">
            <summary>
            Gets a single result or null.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
            <param name="find">The fluent find.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task whose result is the single result or null.</returns>
        </member>
        <member name="M:MongoDB.Driver.IFindFluentExtensions.SingleOrDefaultAsync``2(MongoDB.Driver.IFindFluent{``0,``1},System.Threading.CancellationToken)">
            <summary>
            Gets a single result or null.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
            <param name="find">The fluent find.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task whose result is the single result or null.</returns>
        </member>
        <member name="T:MongoDB.Driver.IMongoClient">
            <summary>
            The client interface to MongoDB.
            </summary>
            <remarks>
            This interface is not guaranteed to remain stable. Implementors should use
            <see cref="T:MongoDB.Driver.MongoClientBase"/>.
            </remarks>
        </member>
        <member name="P:MongoDB.Driver.IMongoClient.Cluster">
            <summary>
            Gets the cluster.
            </summary>
            <value>
            The cluster.
            </value>
        </member>
        <member name="P:MongoDB.Driver.IMongoClient.Settings">
            <summary>
            Gets the settings.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.IMongoClient.DropDatabase(System.String,System.Threading.CancellationToken)">
            <summary>
            Drops the database with the specified name.
            </summary>
            <param name="name">The name of the database to drop.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:MongoDB.Driver.IMongoClient.DropDatabase(MongoDB.Driver.IClientSessionHandle,System.String,System.Threading.CancellationToken)">
            <summary>
            Drops the database with the specified name.
            </summary>
            <param name="session">The session.</param>
            <param name="name">The name of the database to drop.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:MongoDB.Driver.IMongoClient.DropDatabaseAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Drops the database with the specified name.
            </summary>
            <param name="name">The name of the database to drop.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A task.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoClient.DropDatabaseAsync(MongoDB.Driver.IClientSessionHandle,System.String,System.Threading.CancellationToken)">
            <summary>
            Drops the database with the specified name.
            </summary>
            <param name="session">The session.</param>
            <param name="name">The name of the database to drop.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A task.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoClient.GetDatabase(System.String,MongoDB.Driver.MongoDatabaseSettings)">
            <summary>
            Gets a database.
            </summary>
            <param name="name">The name of the database.</param>
            <param name="settings">The database settings.</param>
            <returns>An implementation of a database.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoClient.ListDatabaseNames(System.Threading.CancellationToken)">
            <summary>
            Returns the names of the databases on the server.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The database names.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoClient.ListDatabaseNames(MongoDB.Driver.IClientSessionHandle,System.Threading.CancellationToken)">
            <summary>
            Returns the names of the databases on the server.
            </summary>
            <param name="session">The session.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The database names.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoClient.ListDatabaseNamesAsync(System.Threading.CancellationToken)">
            <summary>
            Returns the names of the databases on the server.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The database names.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoClient.ListDatabaseNamesAsync(MongoDB.Driver.IClientSessionHandle,System.Threading.CancellationToken)">
            <summary>
            Returns the names of the databases on the server.
            </summary>
            <param name="session">The session.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The database names.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoClient.ListDatabases(System.Threading.CancellationToken)">
            <summary>
            Lists the databases on the server.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A cursor.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoClient.ListDatabases(MongoDB.Driver.ListDatabasesOptions,System.Threading.CancellationToken)">
            <summary>
            Lists the databases on the server.
            </summary>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A cursor.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoClient.ListDatabases(MongoDB.Driver.IClientSessionHandle,System.Threading.CancellationToken)">
            <summary>
            Lists the databases on the server.
            </summary>
            <param name="session">The session.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A cursor.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoClient.ListDatabases(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.ListDatabasesOptions,System.Threading.CancellationToken)">
            <summary>
            Lists the databases on the server.
            </summary>
            <param name="session">The session.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A cursor.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoClient.ListDatabasesAsync(System.Threading.CancellationToken)">
            <summary>
            Lists the databases on the server.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task whose result is a cursor.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoClient.ListDatabasesAsync(MongoDB.Driver.ListDatabasesOptions,System.Threading.CancellationToken)">
            <summary>
            Lists the databases on the server.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <param name="options">The options.</param>
            <returns>A Task whose result is a cursor.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoClient.ListDatabasesAsync(MongoDB.Driver.IClientSessionHandle,System.Threading.CancellationToken)">
            <summary>
            Lists the databases on the server.
            </summary>
            <param name="session">The session.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A Task whose result is a cursor.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoClient.ListDatabasesAsync(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.ListDatabasesOptions,System.Threading.CancellationToken)">
            <summary>
            Lists the databases on the server.
            </summary>
            <param name="session">The session.</param>
            <param name="options">The options.</param>        
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A Task whose result is a cursor.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoClient.StartSession(MongoDB.Driver.ClientSessionOptions,System.Threading.CancellationToken)">
            <summary>
            Starts a client session.
            </summary>
            <param name="options">The session options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A client session.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoClient.StartSessionAsync(MongoDB.Driver.ClientSessionOptions,System.Threading.CancellationToken)">
            <summary>
            Starts a client session.
            </summary>
            <param name="options">The session options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A Task whose result is a client session.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoClient.Watch``1(MongoDB.Driver.PipelineDefinition{MongoDB.Driver.ChangeStreamDocument{MongoDB.Bson.BsonDocument},``0},MongoDB.Driver.ChangeStreamOptions,System.Threading.CancellationToken)">
            <summary>
            Watches changes on all collections in all databases.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A change stream.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoClient.Watch``1(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.PipelineDefinition{MongoDB.Driver.ChangeStreamDocument{MongoDB.Bson.BsonDocument},``0},MongoDB.Driver.ChangeStreamOptions,System.Threading.CancellationToken)">
            <summary>
            Watches changes on all collections in all databases.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="session">The session.</param>
            <param name="pipeline">The pipeline.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A change stream.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoClient.WatchAsync``1(MongoDB.Driver.PipelineDefinition{MongoDB.Driver.ChangeStreamDocument{MongoDB.Bson.BsonDocument},``0},MongoDB.Driver.ChangeStreamOptions,System.Threading.CancellationToken)">
            <summary>
            Watches changes on all collections in all databases.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A change stream.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoClient.WatchAsync``1(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.PipelineDefinition{MongoDB.Driver.ChangeStreamDocument{MongoDB.Bson.BsonDocument},``0},MongoDB.Driver.ChangeStreamOptions,System.Threading.CancellationToken)">
            <summary>
            Watches changes on all collections in all databases.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="session">The session.</param>
            <param name="pipeline">The pipeline.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A change stream.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoClient.WithReadConcern(MongoDB.Driver.ReadConcern)">
            <summary>
            Returns a new IMongoClient instance with a different read concern setting.
            </summary>
            <param name="readConcern">The read concern.</param>
            <returns>A new IMongoClient instance with a different read concern setting.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoClient.WithReadPreference(MongoDB.Driver.ReadPreference)">
            <summary>
            Returns a new IMongoClient instance with a different read preference setting.
            </summary>
            <param name="readPreference">The read preference.</param>
            <returns>A new IMongoClient instance with a different read preference setting.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoClient.WithWriteConcern(MongoDB.Driver.WriteConcern)">
            <summary>
            Returns a new IMongoClient instance with a different write concern setting.
            </summary>
            <param name="writeConcern">The write concern.</param>
            <returns>A new IMongoClient instance with a different write concern setting.</returns>
        </member>
        <member name="T:MongoDB.Driver.IMongoClientExtensions">
            <summary>
            Extension methods on IMongoClient.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.IMongoClientExtensions.Watch(MongoDB.Driver.IMongoClient,MongoDB.Driver.ChangeStreamOptions,System.Threading.CancellationToken)">
            <summary>
            Watches changes on all collections in all databases.
            </summary>
            <param name="client">The client.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A change stream.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoClientExtensions.Watch(MongoDB.Driver.IMongoClient,MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.ChangeStreamOptions,System.Threading.CancellationToken)">
            <summary>
            Watches changes on all collections in all databases.
            </summary>
            <param name="client">The client.</param>
            <param name="session">The session.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A change stream.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoClientExtensions.WatchAsync(MongoDB.Driver.IMongoClient,MongoDB.Driver.ChangeStreamOptions,System.Threading.CancellationToken)">
            <summary>
            Watches changes on all collections in all databases.
            </summary>
            <param name="client">The client.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A change stream.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoClientExtensions.WatchAsync(MongoDB.Driver.IMongoClient,MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.ChangeStreamOptions,System.Threading.CancellationToken)">
            <summary>
            Watches changes on all collections in all databases.
            </summary>
            <param name="client">The client.</param>
            <param name="session">The session.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A change stream.
            </returns>
        </member>
        <member name="T:MongoDB.Driver.IMongoCollection`1">
            <summary>
            Represents a typed collection in MongoDB.
            </summary>
            <remarks>
            This interface is not guaranteed to remain stable. Implementors should use
            <see cref="T:MongoDB.Driver.MongoCollectionBase`1"/>.
            </remarks>
            <typeparam name="TDocument">The type of the documents stored in the collection.</typeparam>
        </member>
        <member name="P:MongoDB.Driver.IMongoCollection`1.CollectionNamespace">
            <summary>
            Gets the namespace of the collection.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.IMongoCollection`1.Database">
            <summary>
            Gets the database.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.IMongoCollection`1.DocumentSerializer">
            <summary>
            Gets the document serializer.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.IMongoCollection`1.Indexes">
            <summary>
            Gets the index manager.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.IMongoCollection`1.Settings">
            <summary>
            Gets the settings.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.Aggregate``1(MongoDB.Driver.PipelineDefinition{`0,``0},MongoDB.Driver.AggregateOptions,System.Threading.CancellationToken)">
            <summary>
            Runs an aggregation pipeline.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A cursor.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.Aggregate``1(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.PipelineDefinition{`0,``0},MongoDB.Driver.AggregateOptions,System.Threading.CancellationToken)">
            <summary>
            Runs an aggregation pipeline.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="session">The session.</param>
            <param name="pipeline">The pipeline.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A cursor.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.AggregateAsync``1(MongoDB.Driver.PipelineDefinition{`0,``0},MongoDB.Driver.AggregateOptions,System.Threading.CancellationToken)">
            <summary>
            Runs an aggregation pipeline.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task whose result is a cursor.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.AggregateAsync``1(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.PipelineDefinition{`0,``0},MongoDB.Driver.AggregateOptions,System.Threading.CancellationToken)">
            <summary>
            Runs an aggregation pipeline.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="session">The session.</param>
            <param name="pipeline">The pipeline.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A Task whose result is a cursor.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.BulkWrite(System.Collections.Generic.IEnumerable{MongoDB.Driver.WriteModel{`0}},MongoDB.Driver.BulkWriteOptions,System.Threading.CancellationToken)">
            <summary>
            Performs multiple write operations.
            </summary>
            <param name="requests">The requests.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The result of writing.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.BulkWrite(MongoDB.Driver.IClientSessionHandle,System.Collections.Generic.IEnumerable{MongoDB.Driver.WriteModel{`0}},MongoDB.Driver.BulkWriteOptions,System.Threading.CancellationToken)">
            <summary>
            Performs multiple write operations.
            </summary>
            <param name="session">The session.</param>
            <param name="requests">The requests.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of writing.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.BulkWriteAsync(System.Collections.Generic.IEnumerable{MongoDB.Driver.WriteModel{`0}},MongoDB.Driver.BulkWriteOptions,System.Threading.CancellationToken)">
            <summary>
            Performs multiple write operations.
            </summary>
            <param name="requests">The requests.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The result of writing.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.BulkWriteAsync(MongoDB.Driver.IClientSessionHandle,System.Collections.Generic.IEnumerable{MongoDB.Driver.WriteModel{`0}},MongoDB.Driver.BulkWriteOptions,System.Threading.CancellationToken)">
            <summary>
            Performs multiple write operations.
            </summary>
            <param name="session">The session.</param>
            <param name="requests">The requests.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of writing.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.Count(MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.CountOptions,System.Threading.CancellationToken)">
            <summary>
            Counts the number of documents in the collection.
            </summary>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The number of documents in the collection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.Count(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.CountOptions,System.Threading.CancellationToken)">
            <summary>
            Counts the number of documents in the collection.
            </summary>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The number of documents in the collection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.CountAsync(MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.CountOptions,System.Threading.CancellationToken)">
            <summary>
            Counts the number of documents in the collection.
            </summary>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The number of documents in the collection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.CountAsync(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.CountOptions,System.Threading.CancellationToken)">
            <summary>
            Counts the number of documents in the collection.
            </summary>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The number of documents in the collection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.CountDocuments(MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.CountOptions,System.Threading.CancellationToken)">
            <summary>
            Counts the number of documents in the collection.
            For a fast estimate of the total documents in a collection see <see cref="M:MongoDB.Driver.IMongoCollection`1.EstimatedDocumentCount(MongoDB.Driver.EstimatedDocumentCountOptions,System.Threading.CancellationToken)"/>.
            </summary>
            <remarks>
            Note: when migrating from Count to CountDocuments the following query operations must be replaced:
            
            <code>
            +-------------+--------------------------------+
            | Operator    | Replacement                    |
            +=============+================================+
            | $where      |  $expr                         |
            +-------------+--------------------------------+
            | $near       |  $geoWithin with $center       |
            +-------------+--------------------------------+
            | $nearSphere |  $geoWithin with $centerSphere |
            +-------------+--------------------------------+
            </code>
            </remarks>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The number of documents in the collection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.CountDocuments(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.CountOptions,System.Threading.CancellationToken)">
            <summary>
            Counts the number of documents in the collection.
            For a fast estimate of the total documents in a collection see <see cref="M:MongoDB.Driver.IMongoCollection`1.EstimatedDocumentCount(MongoDB.Driver.EstimatedDocumentCountOptions,System.Threading.CancellationToken)"/>.
            </summary>
            <remarks>
            Note: when migrating from Count to CountDocuments the following query operations must be replaced:
            
            <code>
            +-------------+--------------------------------+
            | Operator    | Replacement                    |
            +=============+================================+
            | $where      |  $expr                         |
            +-------------+--------------------------------+
            | $near       |  $geoWithin with $center       |
            +-------------+--------------------------------+
            | $nearSphere |  $geoWithin with $centerSphere |
            +-------------+--------------------------------+
            </code>
            </remarks>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The number of documents in the collection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.CountDocumentsAsync(MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.CountOptions,System.Threading.CancellationToken)">
            <summary>
            Counts the number of documents in the collection.
            For a fast estimate of the total documents in a collection see <seea cref="M:MongoDB.Driver.IMongoCollection`1.EstimatedDocumentCountAsync(MongoDB.Driver.EstimatedDocumentCountOptions,System.Threading.CancellationToken)"/>.
            </summary>
            <remarks>
            Note: when migrating from CountAsync to CountDocumentsAsync the following query operations must be replaced:
            
            <code>
            +-------------+--------------------------------+
            | Operator    | Replacement                    |
            +=============+================================+
            | $where      |  $expr                         |
            +-------------+--------------------------------+
            | $near       |  $geoWithin with $center       |
            +-------------+--------------------------------+
            | $nearSphere |  $geoWithin with $centerSphere |
            +-------------+--------------------------------+
            </code>
            </remarks>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The number of documents in the collection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.CountDocumentsAsync(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.CountOptions,System.Threading.CancellationToken)">
            <summary>
            Counts the number of documents in the collection.
            For a fast estimate of the total documents in a collection see <see cref="M:MongoDB.Driver.IMongoCollection`1.EstimatedDocumentCountAsync(MongoDB.Driver.EstimatedDocumentCountOptions,System.Threading.CancellationToken)"/>.
            </summary>
            <remarks>
            Note: when migrating from CountAsync to CountDocumentsAsync the following query operations must be replaced:
            
            <code>
            +-------------+--------------------------------+
            | Operator    | Replacement                    |
            +=============+================================+
            | $where      |  $expr                         |
            +-------------+--------------------------------+
            | $near       |  $geoWithin with $center       |
            +-------------+--------------------------------+
            | $nearSphere |  $geoWithin with $centerSphere |
            +-------------+--------------------------------+
            </code>
            </remarks>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The number of documents in the collection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.DeleteMany(MongoDB.Driver.FilterDefinition{`0},System.Threading.CancellationToken)">
            <summary>
            Deletes multiple documents.
            </summary>
            <param name="filter">The filter.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the delete operation.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.DeleteMany(MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.DeleteOptions,System.Threading.CancellationToken)">
            <summary>
            Deletes multiple documents.
            </summary>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the delete operation.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.DeleteMany(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.DeleteOptions,System.Threading.CancellationToken)">
            <summary>
            Deletes multiple documents.
            </summary>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the delete operation.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.DeleteManyAsync(MongoDB.Driver.FilterDefinition{`0},System.Threading.CancellationToken)">
            <summary>
            Deletes multiple documents.
            </summary>
            <param name="filter">The filter.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the delete operation.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.DeleteManyAsync(MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.DeleteOptions,System.Threading.CancellationToken)">
            <summary>
            Deletes multiple documents.
            </summary>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the delete operation.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.DeleteManyAsync(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.DeleteOptions,System.Threading.CancellationToken)">
            <summary>
            Deletes multiple documents.
            </summary>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the delete operation.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.DeleteOne(MongoDB.Driver.FilterDefinition{`0},System.Threading.CancellationToken)">
            <summary>
            Deletes a single document.
            </summary>
            <param name="filter">The filter.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the delete operation.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.DeleteOne(MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.DeleteOptions,System.Threading.CancellationToken)">
            <summary>
            Deletes a single document.
            </summary>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the delete operation.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.DeleteOne(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.DeleteOptions,System.Threading.CancellationToken)">
            <summary>
            Deletes a single document.
            </summary>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the delete operation.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.DeleteOneAsync(MongoDB.Driver.FilterDefinition{`0},System.Threading.CancellationToken)">
            <summary>
            Deletes a single document.
            </summary>
            <param name="filter">The filter.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the delete operation.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.DeleteOneAsync(MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.DeleteOptions,System.Threading.CancellationToken)">
            <summary>
            Deletes a single document.
            </summary>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the delete operation.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.DeleteOneAsync(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.DeleteOptions,System.Threading.CancellationToken)">
            <summary>
            Deletes a single document.
            </summary>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the delete operation.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.Distinct``1(MongoDB.Driver.FieldDefinition{`0,``0},MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.DistinctOptions,System.Threading.CancellationToken)">
            <summary>
            Gets the distinct values for a specified field.
            </summary>
            <typeparam name="TField">The type of the result.</typeparam>
            <param name="field">The field.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A cursor.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.Distinct``1(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FieldDefinition{`0,``0},MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.DistinctOptions,System.Threading.CancellationToken)">
            <summary>
            Gets the distinct values for a specified field.
            </summary>
            <typeparam name="TField">The type of the result.</typeparam>
            <param name="session">The session.</param>
            <param name="field">The field.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A cursor.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.DistinctAsync``1(MongoDB.Driver.FieldDefinition{`0,``0},MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.DistinctOptions,System.Threading.CancellationToken)">
            <summary>
            Gets the distinct values for a specified field.
            </summary>
            <typeparam name="TField">The type of the result.</typeparam>
            <param name="field">The field.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task whose result is a cursor.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.DistinctAsync``1(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FieldDefinition{`0,``0},MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.DistinctOptions,System.Threading.CancellationToken)">
            <summary>
            Gets the distinct values for a specified field.
            </summary>
            <typeparam name="TField">The type of the result.</typeparam>
            <param name="session">The session.</param>
            <param name="field">The field.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A Task whose result is a cursor.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.EstimatedDocumentCount(MongoDB.Driver.EstimatedDocumentCountOptions,System.Threading.CancellationToken)">
            <summary>
            Returns an estimate of the number of documents in the collection.
            </summary>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An estimate of the number of documents in the collection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.EstimatedDocumentCountAsync(MongoDB.Driver.EstimatedDocumentCountOptions,System.Threading.CancellationToken)">
            <summary>
            Returns an estimate of the number of documents in the collection.
            </summary>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An estimate of the number of documents in the collection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.FindSync``1(MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.FindOptions{`0,``0},System.Threading.CancellationToken)">
            <summary>
            Finds the documents matching the filter.
            </summary>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A cursor.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.FindSync``1(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.FindOptions{`0,``0},System.Threading.CancellationToken)">
            <summary>
            Finds the documents matching the filter.
            </summary>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A cursor.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.FindAsync``1(MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.FindOptions{`0,``0},System.Threading.CancellationToken)">
            <summary>
            Finds the documents matching the filter.
            </summary>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task whose result is a cursor.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.FindAsync``1(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.FindOptions{`0,``0},System.Threading.CancellationToken)">
            <summary>
            Finds the documents matching the filter.
            </summary>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A Task whose result is a cursor.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.FindOneAndDelete``1(MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.FindOneAndDeleteOptions{`0,``0},System.Threading.CancellationToken)">
            <summary>
            Finds a single document and deletes it atomically.
            </summary>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The returned document.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.FindOneAndDelete``1(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.FindOneAndDeleteOptions{`0,``0},System.Threading.CancellationToken)">
            <summary>
            Finds a single document and deletes it atomically.
            </summary>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The returned document.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.FindOneAndDeleteAsync``1(MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.FindOneAndDeleteOptions{`0,``0},System.Threading.CancellationToken)">
            <summary>
            Finds a single document and deletes it atomically.
            </summary>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The returned document.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.FindOneAndDeleteAsync``1(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.FindOneAndDeleteOptions{`0,``0},System.Threading.CancellationToken)">
            <summary>
            Finds a single document and deletes it atomically.
            </summary>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The returned document.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.FindOneAndReplace``1(MongoDB.Driver.FilterDefinition{`0},`0,MongoDB.Driver.FindOneAndReplaceOptions{`0,``0},System.Threading.CancellationToken)">
            <summary>
            Finds a single document and replaces it atomically.
            </summary>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
            <param name="filter">The filter.</param>
            <param name="replacement">The replacement.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The returned document.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.FindOneAndReplace``1(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FilterDefinition{`0},`0,MongoDB.Driver.FindOneAndReplaceOptions{`0,``0},System.Threading.CancellationToken)">
            <summary>
            Finds a single document and replaces it atomically.
            </summary>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="replacement">The replacement.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The returned document.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.FindOneAndReplaceAsync``1(MongoDB.Driver.FilterDefinition{`0},`0,MongoDB.Driver.FindOneAndReplaceOptions{`0,``0},System.Threading.CancellationToken)">
            <summary>
            Finds a single document and replaces it atomically.
            </summary>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
            <param name="filter">The filter.</param>
            <param name="replacement">The replacement.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The returned document.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.FindOneAndReplaceAsync``1(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FilterDefinition{`0},`0,MongoDB.Driver.FindOneAndReplaceOptions{`0,``0},System.Threading.CancellationToken)">
            <summary>
            Finds a single document and replaces it atomically.
            </summary>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="replacement">The replacement.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The returned document.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.FindOneAndUpdate``1(MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.UpdateDefinition{`0},MongoDB.Driver.FindOneAndUpdateOptions{`0,``0},System.Threading.CancellationToken)">
            <summary>
            Finds a single document and updates it atomically.
            </summary>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
            <param name="filter">The filter.</param>
            <param name="update">The update.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The returned document.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.FindOneAndUpdate``1(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.UpdateDefinition{`0},MongoDB.Driver.FindOneAndUpdateOptions{`0,``0},System.Threading.CancellationToken)">
            <summary>
            Finds a single document and updates it atomically.
            </summary>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="update">The update.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The returned document.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.FindOneAndUpdateAsync``1(MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.UpdateDefinition{`0},MongoDB.Driver.FindOneAndUpdateOptions{`0,``0},System.Threading.CancellationToken)">
            <summary>
            Finds a single document and updates it atomically.
            </summary>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
            <param name="filter">The filter.</param>
            <param name="update">The update.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The returned document.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.FindOneAndUpdateAsync``1(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.UpdateDefinition{`0},MongoDB.Driver.FindOneAndUpdateOptions{`0,``0},System.Threading.CancellationToken)">
            <summary>
            Finds a single document and updates it atomically.
            </summary>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="update">The update.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The returned document.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.InsertOne(`0,MongoDB.Driver.InsertOneOptions,System.Threading.CancellationToken)">
            <summary>
            Inserts a single document.
            </summary>
            <param name="document">The document.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.InsertOne(MongoDB.Driver.IClientSessionHandle,`0,MongoDB.Driver.InsertOneOptions,System.Threading.CancellationToken)">
            <summary>
            Inserts a single document.
            </summary>
            <param name="session">The session.</param>
            <param name="document">The document.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.InsertOneAsync(`0,System.Threading.CancellationToken)">
            <summary>
            Inserts a single document.
            </summary>
            <param name="document">The document.</param>
            <param name="_cancellationToken">The cancellation token.</param>
            <returns>
            The result of the insert operation.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.InsertOneAsync(`0,MongoDB.Driver.InsertOneOptions,System.Threading.CancellationToken)">
            <summary>
            Inserts a single document.
            </summary>
            <param name="document">The document.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the insert operation.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.InsertOneAsync(MongoDB.Driver.IClientSessionHandle,`0,MongoDB.Driver.InsertOneOptions,System.Threading.CancellationToken)">
            <summary>
            Inserts a single document.
            </summary>
            <param name="session">The session.</param>
            <param name="document">The document.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the insert operation.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.InsertMany(System.Collections.Generic.IEnumerable{`0},MongoDB.Driver.InsertManyOptions,System.Threading.CancellationToken)">
            <summary>
            Inserts many documents.
            </summary>
            <param name="documents">The documents.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.InsertMany(MongoDB.Driver.IClientSessionHandle,System.Collections.Generic.IEnumerable{`0},MongoDB.Driver.InsertManyOptions,System.Threading.CancellationToken)">
            <summary>
            Inserts many documents.
            </summary>
            <param name="session">The session.</param>
            <param name="documents">The documents.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.InsertManyAsync(System.Collections.Generic.IEnumerable{`0},MongoDB.Driver.InsertManyOptions,System.Threading.CancellationToken)">
            <summary>
            Inserts many documents.
            </summary>
            <param name="documents">The documents.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the insert operation.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.InsertManyAsync(MongoDB.Driver.IClientSessionHandle,System.Collections.Generic.IEnumerable{`0},MongoDB.Driver.InsertManyOptions,System.Threading.CancellationToken)">
            <summary>
            Inserts many documents.
            </summary>
            <param name="session">The session.</param>
            <param name="documents">The documents.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the insert operation.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.MapReduce``1(MongoDB.Bson.BsonJavaScript,MongoDB.Bson.BsonJavaScript,MongoDB.Driver.MapReduceOptions{`0,``0},System.Threading.CancellationToken)">
            <summary>
            Executes a map-reduce command.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="map">The map function.</param>
            <param name="reduce">The reduce function.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A cursor.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.MapReduce``1(MongoDB.Driver.IClientSessionHandle,MongoDB.Bson.BsonJavaScript,MongoDB.Bson.BsonJavaScript,MongoDB.Driver.MapReduceOptions{`0,``0},System.Threading.CancellationToken)">
            <summary>
            Executes a map-reduce command.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="session">The session.</param>
            <param name="map">The map function.</param>
            <param name="reduce">The reduce function.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A cursor.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.MapReduceAsync``1(MongoDB.Bson.BsonJavaScript,MongoDB.Bson.BsonJavaScript,MongoDB.Driver.MapReduceOptions{`0,``0},System.Threading.CancellationToken)">
            <summary>
            Executes a map-reduce command.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="map">The map function.</param>
            <param name="reduce">The reduce function.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task whose result is a cursor.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.MapReduceAsync``1(MongoDB.Driver.IClientSessionHandle,MongoDB.Bson.BsonJavaScript,MongoDB.Bson.BsonJavaScript,MongoDB.Driver.MapReduceOptions{`0,``0},System.Threading.CancellationToken)">
            <summary>
            Executes a map-reduce command.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="session">The session.</param>
            <param name="map">The map function.</param>
            <param name="reduce">The reduce function.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A Task whose result is a cursor.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.OfType``1">
            <summary>
            Returns a filtered collection that appears to contain only documents of the derived type.
            All operations using this filtered collection will automatically use discriminators as necessary.
            </summary>
            <typeparam name="TDerivedDocument">The type of the derived document.</typeparam>
            <returns>A filtered collection.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.ReplaceOne(MongoDB.Driver.FilterDefinition{`0},`0,MongoDB.Driver.ReplaceOptions,System.Threading.CancellationToken)">
            <summary>
            Replaces a single document.
            </summary>
            <param name="filter">The filter.</param>
            <param name="replacement">The replacement.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the replacement.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.ReplaceOne(MongoDB.Driver.FilterDefinition{`0},`0,MongoDB.Driver.UpdateOptions,System.Threading.CancellationToken)">
            <summary>
            Replaces a single document.
            </summary>
            <param name="filter">The filter.</param>
            <param name="replacement">The replacement.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the replacement.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.ReplaceOne(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FilterDefinition{`0},`0,MongoDB.Driver.ReplaceOptions,System.Threading.CancellationToken)">
            <summary>
            Replaces a single document.
            </summary>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="replacement">The replacement.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the replacement.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.ReplaceOne(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FilterDefinition{`0},`0,MongoDB.Driver.UpdateOptions,System.Threading.CancellationToken)">
            <summary>
            Replaces a single document.
            </summary>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="replacement">The replacement.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the replacement.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.ReplaceOneAsync(MongoDB.Driver.FilterDefinition{`0},`0,MongoDB.Driver.ReplaceOptions,System.Threading.CancellationToken)">
            <summary>
            Replaces a single document.
            </summary>
            <param name="filter">The filter.</param>
            <param name="replacement">The replacement.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the replacement.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.ReplaceOneAsync(MongoDB.Driver.FilterDefinition{`0},`0,MongoDB.Driver.UpdateOptions,System.Threading.CancellationToken)">
            <summary>
            Replaces a single document.
            </summary>
            <param name="filter">The filter.</param>
            <param name="replacement">The replacement.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the replacement.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.ReplaceOneAsync(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FilterDefinition{`0},`0,MongoDB.Driver.ReplaceOptions,System.Threading.CancellationToken)">
            <summary>
            Replaces a single document.
            </summary>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="replacement">The replacement.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the replacement.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.ReplaceOneAsync(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FilterDefinition{`0},`0,MongoDB.Driver.UpdateOptions,System.Threading.CancellationToken)">
            <summary>
            Replaces a single document.
            </summary>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="replacement">The replacement.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the replacement.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.UpdateMany(MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.UpdateDefinition{`0},MongoDB.Driver.UpdateOptions,System.Threading.CancellationToken)">
            <summary>
            Updates many documents.
            </summary>
            <param name="filter">The filter.</param>
            <param name="update">The update.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the update operation.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.UpdateMany(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.UpdateDefinition{`0},MongoDB.Driver.UpdateOptions,System.Threading.CancellationToken)">
            <summary>
            Updates many documents.
            </summary>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="update">The update.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the update operation.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.UpdateManyAsync(MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.UpdateDefinition{`0},MongoDB.Driver.UpdateOptions,System.Threading.CancellationToken)">
            <summary>
            Updates many documents.
            </summary>
            <param name="filter">The filter.</param>
            <param name="update">The update.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the update operation.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.UpdateManyAsync(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.UpdateDefinition{`0},MongoDB.Driver.UpdateOptions,System.Threading.CancellationToken)">
            <summary>
            Updates many documents.
            </summary>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="update">The update.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the update operation.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.UpdateOne(MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.UpdateDefinition{`0},MongoDB.Driver.UpdateOptions,System.Threading.CancellationToken)">
            <summary>
            Updates a single document.
            </summary>
            <param name="filter">The filter.</param>
            <param name="update">The update.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the update operation.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.UpdateOne(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.UpdateDefinition{`0},MongoDB.Driver.UpdateOptions,System.Threading.CancellationToken)">
            <summary>
            Updates a single document.
            </summary>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="update">The update.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the update operation.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.UpdateOneAsync(MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.UpdateDefinition{`0},MongoDB.Driver.UpdateOptions,System.Threading.CancellationToken)">
            <summary>
            Updates a single document.
            </summary>
            <param name="filter">The filter.</param>
            <param name="update">The update.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the update operation.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.UpdateOneAsync(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.UpdateDefinition{`0},MongoDB.Driver.UpdateOptions,System.Threading.CancellationToken)">
            <summary>
            Updates a single document.
            </summary>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="update">The update.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the update operation.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.Watch``1(MongoDB.Driver.PipelineDefinition{MongoDB.Driver.ChangeStreamDocument{`0},``0},MongoDB.Driver.ChangeStreamOptions,System.Threading.CancellationToken)">
            <summary>
            Watches changes on the collection.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A change stream.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.Watch``1(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.PipelineDefinition{MongoDB.Driver.ChangeStreamDocument{`0},``0},MongoDB.Driver.ChangeStreamOptions,System.Threading.CancellationToken)">
            <summary>
            Watches changes on the collection.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="session">The session.</param>
            <param name="pipeline">The pipeline.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A change stream.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.WatchAsync``1(MongoDB.Driver.PipelineDefinition{MongoDB.Driver.ChangeStreamDocument{`0},``0},MongoDB.Driver.ChangeStreamOptions,System.Threading.CancellationToken)">
            <summary>
            Watches changes on the collection.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A change stream.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.WatchAsync``1(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.PipelineDefinition{MongoDB.Driver.ChangeStreamDocument{`0},``0},MongoDB.Driver.ChangeStreamOptions,System.Threading.CancellationToken)">
            <summary>
            Watches changes on the collection.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="session">The session.</param>
            <param name="pipeline">The pipeline.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A change stream.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.WithReadConcern(MongoDB.Driver.ReadConcern)">
            <summary>
            Returns a new IMongoCollection instance with a different read concern setting.
            </summary>
            <param name="readConcern">The read concern.</param>
            <returns>A new IMongoCollection instance with a different read concern setting.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.WithReadPreference(MongoDB.Driver.ReadPreference)">
            <summary>
            Returns a new IMongoCollection instance with a different read preference setting.
            </summary>
            <param name="readPreference">The read preference.</param>
            <returns>A new IMongoCollection instance with a different read preference setting.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollection`1.WithWriteConcern(MongoDB.Driver.WriteConcern)">
            <summary>
            Returns a new IMongoCollection instance with a different write concern setting.
            </summary>
            <param name="writeConcern">The write concern.</param>
            <returns>A new IMongoCollection instance with a different write concern setting.</returns>
        </member>
        <member name="T:MongoDB.Driver.IMongoCollectionExtensions">
            <summary>
            Extension methods for <see cref="T:MongoDB.Driver.IMongoCollection`1"/>.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.Aggregate``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.AggregateOptions)">
            <summary>
            Begins a fluent aggregation interface.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="options">The options.</param>
            <returns>
            A fluent aggregate interface.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.Aggregate``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.AggregateOptions)">
            <summary>
            Begins a fluent aggregation interface.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="session">The session.</param>
            <param name="options">The options.</param>
            <returns>
            A fluent aggregate interface.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.AsQueryable``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.AggregateOptions)">
            <summary>
            Creates a queryable source of documents.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="aggregateOptions">The aggregate options</param>
            <returns>A queryable source of documents.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.Count``1(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.CountOptions,System.Threading.CancellationToken)">
            <summary>
            Counts the number of documents in the collection.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The number of documents in the collection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.Count``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.CountOptions,System.Threading.CancellationToken)">
            <summary>
            Counts the number of documents in the collection.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="session">The session.</param>
            <param name="collection">The collection.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The number of documents in the collection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.CountAsync``1(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.CountOptions,System.Threading.CancellationToken)">
            <summary>
            Counts the number of documents in the collection.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The number of documents in the collection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.CountAsync``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.CountOptions,System.Threading.CancellationToken)">
            <summary>
            Counts the number of documents in the collection.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The number of documents in the collection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.CountDocuments``1(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.CountOptions,System.Threading.CancellationToken)">
            <summary>
            Counts the number of documents in the collection.
            For a fast estimate of the total documents in a collection see <see cref="M:MongoDB.Driver.IMongoCollection`1.EstimatedDocumentCount(MongoDB.Driver.EstimatedDocumentCountOptions,System.Threading.CancellationToken)"/>.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The number of documents in the collection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.CountDocuments``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.CountOptions,System.Threading.CancellationToken)">
            <summary>
            Counts the number of documents in the collection.
            For a fast estimate of the total documents in a collection see <see cref="M:MongoDB.Driver.IMongoCollection`1.EstimatedDocumentCount(MongoDB.Driver.EstimatedDocumentCountOptions,System.Threading.CancellationToken)"/>.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="session">The session.</param>
            <param name="collection">The collection.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The number of documents in the collection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.CountDocumentsAsync``1(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.CountOptions,System.Threading.CancellationToken)">
            <summary>
            Counts the number of documents in the collection.
            For a fast estimate of the total documents in a collection see <see cref="M:MongoDB.Driver.IMongoCollection`1.EstimatedDocumentCountAsync(MongoDB.Driver.EstimatedDocumentCountOptions,System.Threading.CancellationToken)"/>.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The number of documents in the collection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.CountDocumentsAsync``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.CountOptions,System.Threading.CancellationToken)">
            <summary>
            Counts the number of documents in the collection.
            For a fast estimate of the total documents in a collection see <see cref="M:MongoDB.Driver.IMongoCollection`1.EstimatedDocumentCountAsync(MongoDB.Driver.EstimatedDocumentCountOptions,System.Threading.CancellationToken)"/>.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The number of documents in the collection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.DeleteMany``1(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)">
            <summary>
            Deletes multiple documents.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="filter">The filter.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the delete operation.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.DeleteMany``1(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.DeleteOptions,System.Threading.CancellationToken)">
            <summary>
            Deletes multiple documents.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the delete operation.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.DeleteMany``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.DeleteOptions,System.Threading.CancellationToken)">
            <summary>
            Deletes multiple documents.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the delete operation.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.DeleteManyAsync``1(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)">
            <summary>
            Deletes multiple documents.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="filter">The filter.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the delete operation.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.DeleteManyAsync``1(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.DeleteOptions,System.Threading.CancellationToken)">
            <summary>
            Deletes multiple documents.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the delete operation.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.DeleteManyAsync``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.DeleteOptions,System.Threading.CancellationToken)">
            <summary>
            Deletes multiple documents.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the delete operation.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.DeleteOne``1(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)">
            <summary>
            Deletes a single document.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="filter">The filter.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the delete operation.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.DeleteOne``1(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.DeleteOptions,System.Threading.CancellationToken)">
            <summary>
            Deletes a single document.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the delete operation.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.DeleteOne``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.DeleteOptions,System.Threading.CancellationToken)">
            <summary>
            Deletes a single document.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the delete operation.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.DeleteOneAsync``1(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)">
            <summary>
            Deletes a single document.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="filter">The filter.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the delete operation.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.DeleteOneAsync``1(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.DeleteOptions,System.Threading.CancellationToken)">
            <summary>
            Deletes a single document.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the delete operation.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.DeleteOneAsync``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.DeleteOptions,System.Threading.CancellationToken)">
            <summary>
            Deletes a single document.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the delete operation.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.Distinct``2(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},MongoDB.Driver.FilterDefinition{``0},MongoDB.Driver.DistinctOptions,System.Threading.CancellationToken)">
            <summary>
            Gets the distinct values for a specified field.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TField">The type of the result.</typeparam>
            <param name="collection">The collection.</param>
            <param name="field">The field.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The distinct values for the specified field.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.Distinct``2(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.FieldDefinition{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.DistinctOptions,System.Threading.CancellationToken)">
            <summary>
            Gets the distinct values for a specified field.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TField">The type of the result.</typeparam>
            <param name="collection">The collection.</param>
            <param name="field">The field.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The distinct values for the specified field.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.Distinct``2(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.DistinctOptions,System.Threading.CancellationToken)">
            <summary>
            Gets the distinct values for a specified field.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TField">The type of the result.</typeparam>
            <param name="collection">The collection.</param>
            <param name="field">The field.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The distinct values for the specified field.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.Distinct``2(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,System.Linq.Expressions.Expression{System.Func{``0,``1}},MongoDB.Driver.FilterDefinition{``0},MongoDB.Driver.DistinctOptions,System.Threading.CancellationToken)">
            <summary>
            Gets the distinct values for a specified field.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TField">The type of the result.</typeparam>
            <param name="collection">The collection.</param>
            <param name="session">The session.</param>
            <param name="field">The field.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The distinct values for the specified field.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.Distinct``2(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FieldDefinition{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.DistinctOptions,System.Threading.CancellationToken)">
            <summary>
            Gets the distinct values for a specified field.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TField">The type of the result.</typeparam>
            <param name="collection">The collection.</param>
            <param name="session">The session.</param>
            <param name="field">The field.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The distinct values for the specified field.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.Distinct``2(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.DistinctOptions,System.Threading.CancellationToken)">
            <summary>
            Gets the distinct values for a specified field.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TField">The type of the result.</typeparam>
            <param name="collection">The collection.</param>
            <param name="session">The session.</param>
            <param name="field">The field.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The distinct values for the specified field.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.DistinctAsync``2(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},MongoDB.Driver.FilterDefinition{``0},MongoDB.Driver.DistinctOptions,System.Threading.CancellationToken)">
            <summary>
            Gets the distinct values for a specified field.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TField">The type of the result.</typeparam>
            <param name="collection">The collection.</param>
            <param name="field">The field.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The distinct values for the specified field.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.DistinctAsync``2(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.FieldDefinition{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.DistinctOptions,System.Threading.CancellationToken)">
            <summary>
            Gets the distinct values for a specified field.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TField">The type of the result.</typeparam>
            <param name="collection">The collection.</param>
            <param name="field">The field.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The distinct values for the specified field.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.DistinctAsync``2(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.DistinctOptions,System.Threading.CancellationToken)">
            <summary>
            Gets the distinct values for a specified field.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TField">The type of the result.</typeparam>
            <param name="collection">The collection.</param>
            <param name="field">The field.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The distinct values for the specified field.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.DistinctAsync``2(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,System.Linq.Expressions.Expression{System.Func{``0,``1}},MongoDB.Driver.FilterDefinition{``0},MongoDB.Driver.DistinctOptions,System.Threading.CancellationToken)">
            <summary>
            Gets the distinct values for a specified field.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TField">The type of the result.</typeparam>
            <param name="collection">The collection.</param>
            <param name="session">The session.</param>
            <param name="field">The field.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The distinct values for the specified field.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.DistinctAsync``2(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FieldDefinition{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.DistinctOptions,System.Threading.CancellationToken)">
            <summary>
            Gets the distinct values for a specified field.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TField">The type of the result.</typeparam>
            <param name="collection">The collection.</param>
            <param name="session">The session.</param>
            <param name="field">The field.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The distinct values for the specified field.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.DistinctAsync``2(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.DistinctOptions,System.Threading.CancellationToken)">
            <summary>
            Gets the distinct values for a specified field.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TField">The type of the result.</typeparam>
            <param name="collection">The collection.</param>
            <param name="session">The session.</param>
            <param name="field">The field.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The distinct values for the specified field.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.Find``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.FilterDefinition{``0},MongoDB.Driver.FindOptions)">
            <summary>
            Begins a fluent find interface.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <returns>
            A fluent find interface.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.Find``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FilterDefinition{``0},MongoDB.Driver.FindOptions)">
            <summary>
            Begins a fluent find interface.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <returns>
            A fluent find interface.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.Find``1(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.FindOptions)">
            <summary>
            Begins a fluent find interface.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <returns>
            A fluent interface.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.Find``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.FindOptions)">
            <summary>
            Begins a fluent find interface.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <returns>
            A fluent interface.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.FindSync``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.FilterDefinition{``0},MongoDB.Driver.FindOptions{``0,``0},System.Threading.CancellationToken)">
            <summary>
            Finds the documents matching the filter.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task whose result is a cursor.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.FindSync``1(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.FindOptions{``0,``0},System.Threading.CancellationToken)">
            <summary>
            Finds the documents matching the filter.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task whose result is a cursor.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.FindSync``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FilterDefinition{``0},MongoDB.Driver.FindOptions{``0,``0},System.Threading.CancellationToken)">
            <summary>
            Finds the documents matching the filter.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A Task whose result is a cursor.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.FindSync``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.FindOptions{``0,``0},System.Threading.CancellationToken)">
            <summary>
            Finds the documents matching the filter.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A Task whose result is a cursor.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.FindAsync``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.FilterDefinition{``0},MongoDB.Driver.FindOptions{``0,``0},System.Threading.CancellationToken)">
            <summary>
            Finds the documents matching the filter.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task whose result is a cursor.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.FindAsync``1(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.FindOptions{``0,``0},System.Threading.CancellationToken)">
            <summary>
            Finds the documents matching the filter.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task whose result is a cursor.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.FindAsync``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FilterDefinition{``0},MongoDB.Driver.FindOptions{``0,``0},System.Threading.CancellationToken)">
            <summary>
            Finds the documents matching the filter.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A Task whose result is a cursor.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.FindAsync``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.FindOptions{``0,``0},System.Threading.CancellationToken)">
            <summary>
            Finds the documents matching the filter.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A Task whose result is a cursor.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.FindOneAndDelete``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.FilterDefinition{``0},MongoDB.Driver.FindOneAndDeleteOptions{``0,``0},System.Threading.CancellationToken)">
            <summary>
            Finds a single document and deletes it atomically.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The deleted document if one was deleted.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.FindOneAndDelete``1(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.FindOneAndDeleteOptions{``0,``0},System.Threading.CancellationToken)">
            <summary>
            Finds a single document and deletes it atomically.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The deleted document if one was deleted.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.FindOneAndDelete``2(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.FindOneAndDeleteOptions{``0,``1},System.Threading.CancellationToken)">
            <summary>
            Finds a single document and deletes it atomically.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
            <param name="collection">The collection.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The returned document.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.FindOneAndDelete``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FilterDefinition{``0},MongoDB.Driver.FindOneAndDeleteOptions{``0,``0},System.Threading.CancellationToken)">
            <summary>
            Finds a single document and deletes it atomically.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The deleted document if one was deleted.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.FindOneAndDelete``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.FindOneAndDeleteOptions{``0,``0},System.Threading.CancellationToken)">
            <summary>
            Finds a single document and deletes it atomically.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The deleted document if one was deleted.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.FindOneAndDelete``2(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.FindOneAndDeleteOptions{``0,``1},System.Threading.CancellationToken)">
            <summary>
            Finds a single document and deletes it atomically.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
            <param name="collection">The collection.</param>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The returned document.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.FindOneAndDeleteAsync``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.FilterDefinition{``0},MongoDB.Driver.FindOneAndDeleteOptions{``0,``0},System.Threading.CancellationToken)">
            <summary>
            Finds a single document and deletes it atomically.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The deleted document if one was deleted.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.FindOneAndDeleteAsync``1(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.FindOneAndDeleteOptions{``0,``0},System.Threading.CancellationToken)">
            <summary>
            Finds a single document and deletes it atomically.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The deleted document if one was deleted.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.FindOneAndDeleteAsync``2(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.FindOneAndDeleteOptions{``0,``1},System.Threading.CancellationToken)">
            <summary>
            Finds a single document and deletes it atomically.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
            <param name="collection">The collection.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The returned document.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.FindOneAndDeleteAsync``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FilterDefinition{``0},MongoDB.Driver.FindOneAndDeleteOptions{``0,``0},System.Threading.CancellationToken)">
            <summary>
            Finds a single document and deletes it atomically.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The deleted document if one was deleted.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.FindOneAndDeleteAsync``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.FindOneAndDeleteOptions{``0,``0},System.Threading.CancellationToken)">
            <summary>
            Finds a single document and deletes it atomically.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The deleted document if one was deleted.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.FindOneAndDeleteAsync``2(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.FindOneAndDeleteOptions{``0,``1},System.Threading.CancellationToken)">
            <summary>
            Finds a single document and deletes it atomically.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
            <param name="collection">The collection.</param>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The returned document.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.FindOneAndReplace``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.FilterDefinition{``0},``0,MongoDB.Driver.FindOneAndReplaceOptions{``0,``0},System.Threading.CancellationToken)">
            <summary>
            Finds a single document and replaces it atomically.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="filter">The filter.</param>
            <param name="replacement">The replacement.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The returned document.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.FindOneAndReplace``1(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},``0,MongoDB.Driver.FindOneAndReplaceOptions{``0,``0},System.Threading.CancellationToken)">
            <summary>
            Finds a single document and replaces it atomically.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="filter">The filter.</param>
            <param name="replacement">The replacement.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The returned document.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.FindOneAndReplace``2(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},``0,MongoDB.Driver.FindOneAndReplaceOptions{``0,``1},System.Threading.CancellationToken)">
            <summary>
            Finds a single document and replaces it atomically.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
            <param name="collection">The collection.</param>
            <param name="filter">The filter.</param>
            <param name="replacement">The replacement.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The returned document.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.FindOneAndReplace``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FilterDefinition{``0},``0,MongoDB.Driver.FindOneAndReplaceOptions{``0,``0},System.Threading.CancellationToken)">
            <summary>
            Finds a single document and replaces it atomically.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="replacement">The replacement.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The returned document.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.FindOneAndReplace``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},``0,MongoDB.Driver.FindOneAndReplaceOptions{``0,``0},System.Threading.CancellationToken)">
            <summary>
            Finds a single document and replaces it atomically.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="replacement">The replacement.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The returned document.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.FindOneAndReplace``2(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},``0,MongoDB.Driver.FindOneAndReplaceOptions{``0,``1},System.Threading.CancellationToken)">
            <summary>
            Finds a single document and replaces it atomically.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
            <param name="collection">The collection.</param>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="replacement">The replacement.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The returned document.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.FindOneAndReplaceAsync``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.FilterDefinition{``0},``0,MongoDB.Driver.FindOneAndReplaceOptions{``0,``0},System.Threading.CancellationToken)">
            <summary>
            Finds a single document and replaces it atomically.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="filter">The filter.</param>
            <param name="replacement">The replacement.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The returned document.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.FindOneAndReplaceAsync``1(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},``0,MongoDB.Driver.FindOneAndReplaceOptions{``0,``0},System.Threading.CancellationToken)">
            <summary>
            Finds a single document and replaces it atomically.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="filter">The filter.</param>
            <param name="replacement">The replacement.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The returned document.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.FindOneAndReplaceAsync``2(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},``0,MongoDB.Driver.FindOneAndReplaceOptions{``0,``1},System.Threading.CancellationToken)">
            <summary>
            Finds a single document and replaces it atomically.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
            <param name="collection">The collection.</param>
            <param name="filter">The filter.</param>
            <param name="replacement">The replacement.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The returned document.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.FindOneAndReplaceAsync``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FilterDefinition{``0},``0,MongoDB.Driver.FindOneAndReplaceOptions{``0,``0},System.Threading.CancellationToken)">
            <summary>
            Finds a single document and replaces it atomically.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="replacement">The replacement.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The returned document.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.FindOneAndReplaceAsync``1(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.IClientSessionHandle,``0,MongoDB.Driver.FindOneAndReplaceOptions{``0,``0},System.Threading.CancellationToken)">
            <summary>
            Finds a single document and replaces it atomically.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="filter">The filter.</param>
            <param name="session">The session.</param>
            <param name="replacement">The replacement.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The returned document.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.FindOneAndReplaceAsync``2(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},``0,MongoDB.Driver.FindOneAndReplaceOptions{``0,``1},System.Threading.CancellationToken)">
            <summary>
            Finds a single document and replaces it atomically.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
            <param name="collection">The collection.</param>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="replacement">The replacement.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The returned document.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.FindOneAndUpdate``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.FilterDefinition{``0},MongoDB.Driver.UpdateDefinition{``0},MongoDB.Driver.FindOneAndUpdateOptions{``0,``0},System.Threading.CancellationToken)">
            <summary>
            Finds a single document and updates it atomically.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="filter">The filter.</param>
            <param name="update">The update.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The returned document.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.FindOneAndUpdate``1(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.UpdateDefinition{``0},MongoDB.Driver.FindOneAndUpdateOptions{``0,``0},System.Threading.CancellationToken)">
            <summary>
            Finds a single document and updates it atomically.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="filter">The filter.</param>
            <param name="update">The update.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The returned document.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.FindOneAndUpdate``2(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.UpdateDefinition{``0},MongoDB.Driver.FindOneAndUpdateOptions{``0,``1},System.Threading.CancellationToken)">
            <summary>
            Finds a single document and updates it atomically.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
            <param name="collection">The collection.</param>
            <param name="filter">The filter.</param>
            <param name="update">The update.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The returned document.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.FindOneAndUpdate``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FilterDefinition{``0},MongoDB.Driver.UpdateDefinition{``0},MongoDB.Driver.FindOneAndUpdateOptions{``0,``0},System.Threading.CancellationToken)">
            <summary>
            Finds a single document and updates it atomically.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="update">The update.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The returned document.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.FindOneAndUpdate``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.UpdateDefinition{``0},MongoDB.Driver.FindOneAndUpdateOptions{``0,``0},System.Threading.CancellationToken)">
            <summary>
            Finds a single document and updates it atomically.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="update">The update.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The returned document.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.FindOneAndUpdate``2(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.UpdateDefinition{``0},MongoDB.Driver.FindOneAndUpdateOptions{``0,``1},System.Threading.CancellationToken)">
            <summary>
            Finds a single document and updates it atomically.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
            <param name="collection">The collection.</param>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="update">The update.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The returned document.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.FindOneAndUpdateAsync``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.FilterDefinition{``0},MongoDB.Driver.UpdateDefinition{``0},MongoDB.Driver.FindOneAndUpdateOptions{``0,``0},System.Threading.CancellationToken)">
            <summary>
            Finds a single document and updates it atomically.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="filter">The filter.</param>
            <param name="update">The update.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The returned document.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.FindOneAndUpdateAsync``1(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.UpdateDefinition{``0},MongoDB.Driver.FindOneAndUpdateOptions{``0,``0},System.Threading.CancellationToken)">
            <summary>
            Finds a single document and updates it atomically.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="filter">The filter.</param>
            <param name="update">The update.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The returned document.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.FindOneAndUpdateAsync``2(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.UpdateDefinition{``0},MongoDB.Driver.FindOneAndUpdateOptions{``0,``1},System.Threading.CancellationToken)">
            <summary>
            Finds a single document and updates it atomically.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
            <param name="collection">The collection.</param>
            <param name="filter">The filter.</param>
            <param name="update">The update.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The returned document.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.FindOneAndUpdateAsync``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FilterDefinition{``0},MongoDB.Driver.UpdateDefinition{``0},MongoDB.Driver.FindOneAndUpdateOptions{``0,``0},System.Threading.CancellationToken)">
            <summary>
            Finds a single document and updates it atomically.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="update">The update.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The returned document.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.FindOneAndUpdateAsync``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.UpdateDefinition{``0},MongoDB.Driver.FindOneAndUpdateOptions{``0,``0},System.Threading.CancellationToken)">
            <summary>
            Finds a single document and updates it atomically.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="update">The update.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The returned document.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.FindOneAndUpdateAsync``2(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.UpdateDefinition{``0},MongoDB.Driver.FindOneAndUpdateOptions{``0,``1},System.Threading.CancellationToken)">
            <summary>
            Finds a single document and updates it atomically.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TProjection">The type of the projection (same as TDocument if there is no projection).</typeparam>
            <param name="collection">The collection.</param>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="update">The update.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The returned document.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.ReplaceOne``1(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},``0,MongoDB.Driver.ReplaceOptions,System.Threading.CancellationToken)">
            <summary>
            Replaces a single document.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="filter">The filter.</param>
            <param name="replacement">The replacement.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the replacement.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.ReplaceOne``1(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},``0,MongoDB.Driver.UpdateOptions,System.Threading.CancellationToken)">
            <summary>
            Replaces a single document.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="filter">The filter.</param>
            <param name="replacement">The replacement.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the replacement.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.ReplaceOne``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},``0,MongoDB.Driver.ReplaceOptions,System.Threading.CancellationToken)">
            <summary>
            Replaces a single document.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="replacement">The replacement.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the replacement.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.ReplaceOne``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},``0,MongoDB.Driver.UpdateOptions,System.Threading.CancellationToken)">
            <summary>
            Replaces a single document.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="replacement">The replacement.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the replacement.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.ReplaceOneAsync``1(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},``0,MongoDB.Driver.ReplaceOptions,System.Threading.CancellationToken)">
            <summary>
            Replaces a single document.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="filter">The filter.</param>
            <param name="replacement">The replacement.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the replacement.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.ReplaceOneAsync``1(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},``0,MongoDB.Driver.UpdateOptions,System.Threading.CancellationToken)">
            <summary>
            Replaces a single document.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="filter">The filter.</param>
            <param name="replacement">The replacement.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the replacement.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.ReplaceOneAsync``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},``0,MongoDB.Driver.ReplaceOptions,System.Threading.CancellationToken)">
            <summary>
            Replaces a single document.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="replacement">The replacement.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the replacement.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.ReplaceOneAsync``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},``0,MongoDB.Driver.UpdateOptions,System.Threading.CancellationToken)">
            <summary>
            Replaces a single document.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="replacement">The replacement.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the replacement.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.UpdateMany``1(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.UpdateDefinition{``0},MongoDB.Driver.UpdateOptions,System.Threading.CancellationToken)">
            <summary>
            Updates many documents.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="filter">The filter.</param>
            <param name="update">The update.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the update operation.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.UpdateMany``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.UpdateDefinition{``0},MongoDB.Driver.UpdateOptions,System.Threading.CancellationToken)">
            <summary>
            Updates many documents.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="update">The update.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the update operation.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.UpdateManyAsync``1(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.UpdateDefinition{``0},MongoDB.Driver.UpdateOptions,System.Threading.CancellationToken)">
            <summary>
            Updates many documents.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="filter">The filter.</param>
            <param name="update">The update.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the update operation.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.UpdateManyAsync``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.UpdateDefinition{``0},MongoDB.Driver.UpdateOptions,System.Threading.CancellationToken)">
            <summary>
            Updates many documents.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="update">The update.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the update operation.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.UpdateOne``1(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.UpdateDefinition{``0},MongoDB.Driver.UpdateOptions,System.Threading.CancellationToken)">
            <summary>
            Updates a single document.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="filter">The filter.</param>
            <param name="update">The update.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the update operation.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.UpdateOne``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.UpdateDefinition{``0},MongoDB.Driver.UpdateOptions,System.Threading.CancellationToken)">
            <summary>
            Updates a single document.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="update">The update.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the update operation.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.UpdateOneAsync``1(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.UpdateDefinition{``0},MongoDB.Driver.UpdateOptions,System.Threading.CancellationToken)">
            <summary>
            Updates a single document.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="filter">The filter.</param>
            <param name="update">The update.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the update operation.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.UpdateOneAsync``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},MongoDB.Driver.UpdateDefinition{``0},MongoDB.Driver.UpdateOptions,System.Threading.CancellationToken)">
            <summary>
            Updates a single document.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="session">The session.</param>
            <param name="filter">The filter.</param>
            <param name="update">The update.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the update operation.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.Watch``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.ChangeStreamOptions,System.Threading.CancellationToken)">
            <summary>
            Watches changes on the collection.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A change stream.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.Watch``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.ChangeStreamOptions,System.Threading.CancellationToken)">
            <summary>
            Watches changes on the collection.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="session">The session.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A change stream.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.WatchAsync``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.ChangeStreamOptions,System.Threading.CancellationToken)">
            <summary>
            Watches changes on the collection.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A change stream.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoCollectionExtensions.WatchAsync``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.ChangeStreamOptions,System.Threading.CancellationToken)">
            <summary>
            Watches changes on the collection.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="collection">The collection.</param>
            <param name="session">The session.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A change stream.
            </returns>
        </member>
        <member name="T:MongoDB.Driver.IMongoDatabase">
            <summary>
            Represents a database in MongoDB.
            </summary>
            <remarks>
            This interface is not guaranteed to remain stable. Implementors should use
            <see cref="T:MongoDB.Driver.MongoDatabaseBase" />.
            </remarks>
        </member>
        <member name="P:MongoDB.Driver.IMongoDatabase.Client">
            <summary>
            Gets the client.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.IMongoDatabase.DatabaseNamespace">
            <summary>
            Gets the namespace of the database.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.IMongoDatabase.Settings">
            <summary>
            Gets the settings.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabase.Aggregate``1(MongoDB.Driver.PipelineDefinition{MongoDB.Driver.NoPipelineInput,``0},MongoDB.Driver.AggregateOptions,System.Threading.CancellationToken)">
            <summary>
            Runs an aggregation pipeline.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A cursor.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabase.Aggregate``1(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.PipelineDefinition{MongoDB.Driver.NoPipelineInput,``0},MongoDB.Driver.AggregateOptions,System.Threading.CancellationToken)">
            <summary>
            Runs an aggregation pipeline.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="session">The session.</param>
            <param name="pipeline">The pipeline.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A cursor.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabase.AggregateAsync``1(MongoDB.Driver.PipelineDefinition{MongoDB.Driver.NoPipelineInput,``0},MongoDB.Driver.AggregateOptions,System.Threading.CancellationToken)">
            <summary>
            Runs an aggregation pipeline.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task whose result is a cursor.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabase.AggregateAsync``1(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.PipelineDefinition{MongoDB.Driver.NoPipelineInput,``0},MongoDB.Driver.AggregateOptions,System.Threading.CancellationToken)">
            <summary>
            Runs an aggregation pipeline.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="session">The session.</param>
            <param name="pipeline">The pipeline.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A Task whose result is a cursor.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabase.CreateCollection(System.String,MongoDB.Driver.CreateCollectionOptions,System.Threading.CancellationToken)">
            <summary>
            Creates the collection with the specified name.
            </summary>
            <param name="name">The name.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabase.CreateCollection(MongoDB.Driver.IClientSessionHandle,System.String,MongoDB.Driver.CreateCollectionOptions,System.Threading.CancellationToken)">
            <summary>
            Creates the collection with the specified name.
            </summary>
            <param name="session">The session.</param>
            <param name="name">The name.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabase.CreateCollectionAsync(System.String,MongoDB.Driver.CreateCollectionOptions,System.Threading.CancellationToken)">
            <summary>
            Creates the collection with the specified name.
            </summary>
            <param name="name">The name.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A task.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabase.CreateCollectionAsync(MongoDB.Driver.IClientSessionHandle,System.String,MongoDB.Driver.CreateCollectionOptions,System.Threading.CancellationToken)">
            <summary>
            Creates the collection with the specified name.
            </summary>
            <param name="session">The session.</param>
            <param name="name">The name.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A task.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabase.CreateView``2(System.String,System.String,MongoDB.Driver.PipelineDefinition{``0,``1},MongoDB.Driver.CreateViewOptions{``0},System.Threading.CancellationToken)">
            <summary>
            Creates a view.
            </summary>
            <typeparam name="TDocument">The type of the input documents.</typeparam>
            <typeparam name="TResult">The type of the pipeline result documents.</typeparam>
            <param name="viewName">The name of the view.</param>
            <param name="viewOn">The name of the collection that the view is on.</param>
            <param name="pipeline">The pipeline.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabase.CreateView``2(MongoDB.Driver.IClientSessionHandle,System.String,System.String,MongoDB.Driver.PipelineDefinition{``0,``1},MongoDB.Driver.CreateViewOptions{``0},System.Threading.CancellationToken)">
            <summary>
            Creates a view.
            </summary>
            <typeparam name="TDocument">The type of the input documents.</typeparam>
            <typeparam name="TResult">The type of the pipeline result documents.</typeparam>
            <param name="session">The session.</param>
            <param name="viewName">The name of the view.</param>
            <param name="viewOn">The name of the collection that the view is on.</param>
            <param name="pipeline">The pipeline.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabase.CreateViewAsync``2(System.String,System.String,MongoDB.Driver.PipelineDefinition{``0,``1},MongoDB.Driver.CreateViewOptions{``0},System.Threading.CancellationToken)">
            <summary>
            Creates a view.
            </summary>
            <typeparam name="TDocument">The type of the input documents.</typeparam>
            <typeparam name="TResult">The type of the pipeline result documents.</typeparam>
            <param name="viewName">The name of the view.</param>
            <param name="viewOn">The name of the collection that the view is on.</param>
            <param name="pipeline">The pipeline.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A task.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabase.CreateViewAsync``2(MongoDB.Driver.IClientSessionHandle,System.String,System.String,MongoDB.Driver.PipelineDefinition{``0,``1},MongoDB.Driver.CreateViewOptions{``0},System.Threading.CancellationToken)">
            <summary>
            Creates a view.
            </summary>
            <typeparam name="TDocument">The type of the input documents.</typeparam>
            <typeparam name="TResult">The type of the pipeline result documents.</typeparam>
            <param name="session">The session.</param>
            <param name="viewName">The name of the view.</param>
            <param name="viewOn">The name of the collection that the view is on.</param>
            <param name="pipeline">The pipeline.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A task.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabase.DropCollection(System.String,System.Threading.CancellationToken)">
            <summary>
            Drops the collection with the specified name.
            </summary>
            <param name="name">The name of the collection to drop.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabase.DropCollection(MongoDB.Driver.IClientSessionHandle,System.String,System.Threading.CancellationToken)">
            <summary>
            Drops the collection with the specified name.
            </summary>
            <param name="session">The session.</param>
            <param name="name">The name of the collection to drop.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabase.DropCollectionAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Drops the collection with the specified name.
            </summary>
            <param name="name">The name of the collection to drop.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A task.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabase.DropCollectionAsync(MongoDB.Driver.IClientSessionHandle,System.String,System.Threading.CancellationToken)">
            <summary>
            Drops the collection with the specified name.
            </summary>
            <param name="session">The session.</param>
            <param name="name">The name of the collection to drop.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A task.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabase.GetCollection``1(System.String,MongoDB.Driver.MongoCollectionSettings)">
            <summary>
            Gets a collection.
            </summary>
            <typeparam name="TDocument">The document type.</typeparam>
            <param name="name">The name of the collection.</param>
            <param name="settings">The settings.</param>
            <returns>An implementation of a collection.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabase.ListCollectionNames(MongoDB.Driver.ListCollectionNamesOptions,System.Threading.CancellationToken)">
            <summary>
            Lists the names of all the collections in the database.
            </summary>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A cursor.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabase.ListCollectionNames(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.ListCollectionNamesOptions,System.Threading.CancellationToken)">
            <summary>
            Lists the names of all the collections in the database.
            </summary>
            <param name="session">The session.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A cursor.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabase.ListCollectionNamesAsync(MongoDB.Driver.ListCollectionNamesOptions,System.Threading.CancellationToken)">
            <summary>
            Lists the names of all the collections in the database.
            </summary>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task whose result is a cursor.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabase.ListCollectionNamesAsync(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.ListCollectionNamesOptions,System.Threading.CancellationToken)">
            <summary>
            Lists the names of all the collections in the database.
            </summary>
            <param name="session">The session.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task whose result is a cursor.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabase.ListCollections(MongoDB.Driver.ListCollectionsOptions,System.Threading.CancellationToken)">
            <summary>
            Lists all the collections in the database.
            </summary>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A cursor.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabase.ListCollections(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.ListCollectionsOptions,System.Threading.CancellationToken)">
            <summary>
            Lists all the collections in the database.
            </summary>
            <param name="session">The session.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A cursor.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabase.ListCollectionsAsync(MongoDB.Driver.ListCollectionsOptions,System.Threading.CancellationToken)">
            <summary>
            Lists all the collections in the database.
            </summary>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task whose result is a cursor.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabase.ListCollectionsAsync(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.ListCollectionsOptions,System.Threading.CancellationToken)">
            <summary>
            Lists all the collections in the database.
            </summary>
            <param name="session">The session.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A Task whose result is a cursor.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabase.RenameCollection(System.String,System.String,MongoDB.Driver.RenameCollectionOptions,System.Threading.CancellationToken)">
            <summary>
            Renames the collection.
            </summary>
            <param name="oldName">The old name.</param>
            <param name="newName">The new name.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabase.RenameCollection(MongoDB.Driver.IClientSessionHandle,System.String,System.String,MongoDB.Driver.RenameCollectionOptions,System.Threading.CancellationToken)">
            <summary>
            Renames the collection.
            </summary>
            <param name="session">The session.</param>
            <param name="oldName">The old name.</param>
            <param name="newName">The new name.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabase.RenameCollectionAsync(System.String,System.String,MongoDB.Driver.RenameCollectionOptions,System.Threading.CancellationToken)">
            <summary>
            Renames the collection.
            </summary>
            <param name="oldName">The old name.</param>
            <param name="newName">The new name.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A task.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabase.RenameCollectionAsync(MongoDB.Driver.IClientSessionHandle,System.String,System.String,MongoDB.Driver.RenameCollectionOptions,System.Threading.CancellationToken)">
            <summary>
            Renames the collection.
            </summary>
            <param name="session">The session.</param>
            <param name="oldName">The old name.</param>
            <param name="newName">The new name.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A task.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabase.RunCommand``1(MongoDB.Driver.Command{``0},MongoDB.Driver.ReadPreference,System.Threading.CancellationToken)">
            <summary>
            Runs a command.
            </summary>
            <typeparam name="TResult">The result type of the command.</typeparam>
            <param name="command">The command.</param>
            <param name="readPreference">The read preference.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the command.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabase.RunCommand``1(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.Command{``0},MongoDB.Driver.ReadPreference,System.Threading.CancellationToken)">
            <summary>
            Runs a command.
            </summary>
            <typeparam name="TResult">The result type of the command.</typeparam>
            <param name="session">The session.</param>
            <param name="command">The command.</param>
            <param name="readPreference">The read preference.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the command.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabase.RunCommandAsync``1(MongoDB.Driver.Command{``0},MongoDB.Driver.ReadPreference,System.Threading.CancellationToken)">
            <summary>
            Runs a command.
            </summary>
            <typeparam name="TResult">The result type of the command.</typeparam>
            <param name="command">The command.</param>
            <param name="readPreference">The read preference.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the command.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabase.RunCommandAsync``1(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.Command{``0},MongoDB.Driver.ReadPreference,System.Threading.CancellationToken)">
            <summary>
            Runs a command.
            </summary>
            <typeparam name="TResult">The result type of the command.</typeparam>
            <param name="session">The session.</param>
            <param name="command">The command.</param>
            <param name="readPreference">The read preference.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the command.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabase.Watch``1(MongoDB.Driver.PipelineDefinition{MongoDB.Driver.ChangeStreamDocument{MongoDB.Bson.BsonDocument},``0},MongoDB.Driver.ChangeStreamOptions,System.Threading.CancellationToken)">
            <summary>
            Watches changes on all collections in a database.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A change stream.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabase.Watch``1(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.PipelineDefinition{MongoDB.Driver.ChangeStreamDocument{MongoDB.Bson.BsonDocument},``0},MongoDB.Driver.ChangeStreamOptions,System.Threading.CancellationToken)">
            <summary>
            Watches changes on all collections in a database.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="session">The session.</param>
            <param name="pipeline">The pipeline.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A change stream.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabase.WatchAsync``1(MongoDB.Driver.PipelineDefinition{MongoDB.Driver.ChangeStreamDocument{MongoDB.Bson.BsonDocument},``0},MongoDB.Driver.ChangeStreamOptions,System.Threading.CancellationToken)">
            <summary>
            Watches changes on all collections in a database.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A change stream.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabase.WatchAsync``1(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.PipelineDefinition{MongoDB.Driver.ChangeStreamDocument{MongoDB.Bson.BsonDocument},``0},MongoDB.Driver.ChangeStreamOptions,System.Threading.CancellationToken)">
            <summary>
            Watches changes on all collections in a database.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="session">The session.</param>
            <param name="pipeline">The pipeline.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A change stream.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabase.WithReadConcern(MongoDB.Driver.ReadConcern)">
            <summary>
            Returns a new IMongoDatabase instance with a different read concern setting.
            </summary>
            <param name="readConcern">The read concern.</param>
            <returns>A new IMongoDatabase instance with a different read concern setting.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabase.WithReadPreference(MongoDB.Driver.ReadPreference)">
            <summary>
            Returns a new IMongoDatabase instance with a different read preference setting.
            </summary>
            <param name="readPreference">The read preference.</param>
            <returns>A new IMongoDatabase instance with a different read preference setting.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabase.WithWriteConcern(MongoDB.Driver.WriteConcern)">
            <summary>
            Returns a new IMongoDatabase instance with a different write concern setting.
            </summary>
            <param name="writeConcern">The write concern.</param>
            <returns>A new IMongoDatabase instance with a different write concern setting.</returns>
        </member>
        <member name="T:MongoDB.Driver.IMongoDatabaseExtensions">
            <summary>
            Extension methods on IMongoDatabase.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabaseExtensions.Aggregate(MongoDB.Driver.IMongoDatabase,MongoDB.Driver.AggregateOptions)">
            <summary>
            Begins a fluent aggregation interface.
            </summary>
            <param name="database">The database.</param>
            <param name="options">The options.</param>
            <returns>
            A fluent aggregate interface.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabaseExtensions.Aggregate(MongoDB.Driver.IMongoDatabase,MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.AggregateOptions)">
            <summary>
            Begins a fluent aggregation interface.
            </summary>
            <param name="database">The database.</param>
            <param name="session">The session.</param>
            <param name="options">The options.</param>
            <returns>
            A fluent aggregate interface.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabaseExtensions.Watch(MongoDB.Driver.IMongoDatabase,MongoDB.Driver.ChangeStreamOptions,System.Threading.CancellationToken)">
            <summary>
            Watches changes on all collection in a database.
            </summary>
            <param name="database">The database.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A change stream.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabaseExtensions.Watch(MongoDB.Driver.IMongoDatabase,MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.ChangeStreamOptions,System.Threading.CancellationToken)">
            <summary>
            Watches changes on all collection in a database.
            </summary>
            <param name="database">The database.</param>
            <param name="session">The session.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A change stream.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabaseExtensions.WatchAsync(MongoDB.Driver.IMongoDatabase,MongoDB.Driver.ChangeStreamOptions,System.Threading.CancellationToken)">
            <summary>
            Watches changes on all collection in a database.
            </summary>
            <param name="database">The database.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A change stream.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoDatabaseExtensions.WatchAsync(MongoDB.Driver.IMongoDatabase,MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.ChangeStreamOptions,System.Threading.CancellationToken)">
            <summary>
            Watches changes on all collection in a database.
            </summary>
            <param name="database">The database.</param>
            <param name="session">The session.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A change stream.
            </returns>
        </member>
        <member name="T:MongoDB.Driver.IMongoIndexManager`1">
            <summary>
            An interface representing methods used to create, delete and modify indexes.
            </summary>
            <remarks>
            This interface is not guaranteed to remain stable. Implementors should use
            <see cref="T:MongoDB.Driver.MongoIndexManagerBase`1"/>.
            </remarks>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="P:MongoDB.Driver.IMongoIndexManager`1.CollectionNamespace">
            <summary>
            Gets the namespace of the collection.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.IMongoIndexManager`1.DocumentSerializer">
            <summary>
            Gets the document serializer.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.IMongoIndexManager`1.Settings">
            <summary>
            Gets the collection settings.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.IMongoIndexManager`1.CreateMany(System.Collections.Generic.IEnumerable{MongoDB.Driver.CreateIndexModel{`0}},System.Threading.CancellationToken)">
            <summary>
            Creates multiple indexes.
            </summary>
            <param name="models">The models defining each of the indexes.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of the names of the indexes that were created.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoIndexManager`1.CreateMany(System.Collections.Generic.IEnumerable{MongoDB.Driver.CreateIndexModel{`0}},MongoDB.Driver.CreateManyIndexesOptions,System.Threading.CancellationToken)">
            <summary>
            Creates multiple indexes.
            </summary>
            <param name="models">The models defining each of the indexes.</param>
            <param name="options">The options for create multiple indexes.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of the names of the indexes that were created.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoIndexManager`1.CreateMany(MongoDB.Driver.IClientSessionHandle,System.Collections.Generic.IEnumerable{MongoDB.Driver.CreateIndexModel{`0}},System.Threading.CancellationToken)">
            <summary>
            Creates multiple indexes.
            </summary>
            <param name="session">The session.</param>
            <param name="models">The models defining each of the indexes.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of the names of the indexes that were created.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoIndexManager`1.CreateMany(MongoDB.Driver.IClientSessionHandle,System.Collections.Generic.IEnumerable{MongoDB.Driver.CreateIndexModel{`0}},MongoDB.Driver.CreateManyIndexesOptions,System.Threading.CancellationToken)">
            <summary>
            Creates multiple indexes.
            </summary>
            <param name="session">The session.</param>
            <param name="models">The models defining each of the indexes.</param>
            <param name="options">The options for create multiple indexes.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of the names of the indexes that were created.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoIndexManager`1.CreateManyAsync(System.Collections.Generic.IEnumerable{MongoDB.Driver.CreateIndexModel{`0}},System.Threading.CancellationToken)">
            <summary>
            Creates multiple indexes.
            </summary>
            <param name="models">The models defining each of the indexes.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A task whose result is an <see cref="T:System.Collections.Generic.IEnumerable`1" /> of the names of the indexes that were created.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoIndexManager`1.CreateManyAsync(System.Collections.Generic.IEnumerable{MongoDB.Driver.CreateIndexModel{`0}},MongoDB.Driver.CreateManyIndexesOptions,System.Threading.CancellationToken)">
            <summary>
            Creates multiple indexes.
            </summary>
            <param name="models">The models defining each of the indexes.</param>
            <param name="options">The options for create multiple indexes.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A task whose result is an <see cref="T:System.Collections.Generic.IEnumerable`1" /> of the names of the indexes that were created.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoIndexManager`1.CreateManyAsync(MongoDB.Driver.IClientSessionHandle,System.Collections.Generic.IEnumerable{MongoDB.Driver.CreateIndexModel{`0}},System.Threading.CancellationToken)">
            <summary>
            Creates multiple indexes.
            </summary>
            <param name="session">The session.</param>
            <param name="models">The models defining each of the indexes.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A task whose result is an <see cref="T:System.Collections.Generic.IEnumerable`1" /> of the names of the indexes that were created.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoIndexManager`1.CreateManyAsync(MongoDB.Driver.IClientSessionHandle,System.Collections.Generic.IEnumerable{MongoDB.Driver.CreateIndexModel{`0}},MongoDB.Driver.CreateManyIndexesOptions,System.Threading.CancellationToken)">
            <summary>
            Creates multiple indexes.
            </summary>
            <param name="session">The session.</param>
            <param name="models">The models defining each of the indexes.</param>
            <param name="options">The options for create multiple indexes.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A task whose result is an <see cref="T:System.Collections.Generic.IEnumerable`1" /> of the names of the indexes that were created.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoIndexManager`1.CreateOne(MongoDB.Driver.CreateIndexModel{`0},MongoDB.Driver.CreateOneIndexOptions,System.Threading.CancellationToken)">
            <summary>
            Creates an index.
            </summary>
            <param name="model">The model defining the index.</param>
            <param name="options">The create index operation options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The name of the index that was created.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoIndexManager`1.CreateOne(MongoDB.Driver.IndexKeysDefinition{`0},MongoDB.Driver.CreateIndexOptions,System.Threading.CancellationToken)">
            <summary>
            Creates an index.
            </summary>
            <param name="keys">The keys.</param>       
            <param name="options">The create index request options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The name of the index that was created.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoIndexManager`1.CreateOne(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.IndexKeysDefinition{`0},MongoDB.Driver.CreateIndexOptions,System.Threading.CancellationToken)">
            <summary>
            Creates an index.
            </summary>
            <param name="session">The session.</param>
            <param name="keys">The keys.</param>
            <param name="options">The create index request options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The name of the index that was created.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoIndexManager`1.CreateOne(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.CreateIndexModel{`0},MongoDB.Driver.CreateOneIndexOptions,System.Threading.CancellationToken)">
            <summary>
            Creates an index.
            </summary>
            <param name="session">The session.</param>
            <param name="model">The model defining the index.</param>
            <param name="options">The create index operation options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The name of the index that was created.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoIndexManager`1.CreateOneAsync(MongoDB.Driver.CreateIndexModel{`0},MongoDB.Driver.CreateOneIndexOptions,System.Threading.CancellationToken)">
            <summary>
            Creates an index.
            </summary>
            <param name="model">The model defining the index.</param>
            <param name="options">The create index operation options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A task whose result is the name of the index that was created.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoIndexManager`1.CreateOneAsync(MongoDB.Driver.IndexKeysDefinition{`0},MongoDB.Driver.CreateIndexOptions,System.Threading.CancellationToken)">
            <summary>
            Creates an index.
            </summary>
            <param name="keys">The keys.</param>
            <param name="options">The create index request options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A task whose result is the name of the index that was created.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoIndexManager`1.CreateOneAsync(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.IndexKeysDefinition{`0},MongoDB.Driver.CreateIndexOptions,System.Threading.CancellationToken)">
            <summary>
            Creates an index.
            </summary>
            <param name="session">The session.</param>
            <param name="keys">The keys.</param>
            <param name="options">The create index request options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A task whose result is the name of the index that was created.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoIndexManager`1.CreateOneAsync(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.CreateIndexModel{`0},MongoDB.Driver.CreateOneIndexOptions,System.Threading.CancellationToken)">
            <summary>
            Creates an index.
            </summary>
            <param name="session">The session.</param>
            <param name="model">The model defining the index.</param>
            <param name="options">The create index operation options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A task whose result is the name of the index that was created.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoIndexManager`1.DropAll(MongoDB.Driver.DropIndexOptions,System.Threading.CancellationToken)">
            <summary>
            Drops all the indexes.
            </summary>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:MongoDB.Driver.IMongoIndexManager`1.DropAll(System.Threading.CancellationToken)">
            <summary>
            Drops all the indexes.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:MongoDB.Driver.IMongoIndexManager`1.DropAll(MongoDB.Driver.IClientSessionHandle,System.Threading.CancellationToken)">
            <summary>
            Drops all the indexes.
            </summary>
            <param name="session">The session.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:MongoDB.Driver.IMongoIndexManager`1.DropAll(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.DropIndexOptions,System.Threading.CancellationToken)">
            <summary>
            Drops all the indexes.
            </summary>
            <param name="session">The session.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:MongoDB.Driver.IMongoIndexManager`1.DropAllAsync(MongoDB.Driver.DropIndexOptions,System.Threading.CancellationToken)">
            <summary>
            Drops all the indexes.
            </summary>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A task.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoIndexManager`1.DropAllAsync(System.Threading.CancellationToken)">
            <summary>
            Drops all the indexes.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A task.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoIndexManager`1.DropAllAsync(MongoDB.Driver.IClientSessionHandle,System.Threading.CancellationToken)">
            <summary>
            Drops all the indexes.
            </summary>
            <param name="session">The session.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A task.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoIndexManager`1.DropAllAsync(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.DropIndexOptions,System.Threading.CancellationToken)">
            <summary>
            Drops all the indexes.
            </summary>
            <param name="session">The session.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A task.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoIndexManager`1.DropOne(System.String,System.Threading.CancellationToken)">
            <summary>
            Drops an index by its name.
            </summary>
            <param name="name">The name.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:MongoDB.Driver.IMongoIndexManager`1.DropOne(System.String,MongoDB.Driver.DropIndexOptions,System.Threading.CancellationToken)">
            <summary>
            Drops an index by its name.
            </summary>
            <param name="name">The name.</param>
            <param name="options">The options. </param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:MongoDB.Driver.IMongoIndexManager`1.DropOne(MongoDB.Driver.IClientSessionHandle,System.String,System.Threading.CancellationToken)">
            <summary>
            Drops an index by its name.
            </summary>
            <param name="session">The session.</param>
            <param name="name">The name.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:MongoDB.Driver.IMongoIndexManager`1.DropOne(MongoDB.Driver.IClientSessionHandle,System.String,MongoDB.Driver.DropIndexOptions,System.Threading.CancellationToken)">
            <summary>
            Drops an index by its name.
            </summary>
            <param name="session">The session.</param>
            <param name="name">The name.</param>
            <param name="options">The options. </param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:MongoDB.Driver.IMongoIndexManager`1.DropOneAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Drops an index by its name.
            </summary>
            <param name="name">The name.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A task.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoIndexManager`1.DropOneAsync(System.String,MongoDB.Driver.DropIndexOptions,System.Threading.CancellationToken)">
            <summary>
            Drops an index by its name.
            </summary>
            <param name="name">The name.</param>
            <param name="options">The options. </param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A task.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoIndexManager`1.DropOneAsync(MongoDB.Driver.IClientSessionHandle,System.String,System.Threading.CancellationToken)">
            <summary>
            Drops an index by its name.
            </summary>
            <param name="session">The session.</param>
            <param name="name">The name.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A task.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoIndexManager`1.DropOneAsync(MongoDB.Driver.IClientSessionHandle,System.String,MongoDB.Driver.DropIndexOptions,System.Threading.CancellationToken)">
            <summary>
            Drops an index by its name.
            </summary>
            <param name="session">The session.</param>
            <param name="name">The name.</param>
            <param name= "options">The options. </param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A task.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoIndexManager`1.List(System.Threading.CancellationToken)">
            <summary>
            Lists the indexes.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A cursor.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoIndexManager`1.List(MongoDB.Driver.IClientSessionHandle,System.Threading.CancellationToken)">
            <summary>
            Lists the indexes.
            </summary>
            <param name="session">The session.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A cursor.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoIndexManager`1.ListAsync(System.Threading.CancellationToken)">
            <summary>
            Lists the indexes.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task whose result is a cursor.</returns>
        </member>
        <member name="M:MongoDB.Driver.IMongoIndexManager`1.ListAsync(MongoDB.Driver.IClientSessionHandle,System.Threading.CancellationToken)">
            <summary>
            Lists the indexes.
            </summary>
            <param name="session">The session.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A Task whose result is a cursor.
            </returns>
        </member>
        <member name="T:MongoDB.Driver.IndexKeysDefinition`1">
            <summary>
            Base class for an index keys definition.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.IndexKeysDefinition`1.Render(MongoDB.Bson.Serialization.IBsonSerializer{`0},MongoDB.Bson.Serialization.IBsonSerializerRegistry)">
            <summary>
            Renders the index keys definition to a <see cref="T:MongoDB.Bson.BsonDocument"/>.
            </summary>
            <param name="documentSerializer">The document serializer.</param>
            <param name="serializerRegistry">The serializer registry.</param>
            <returns>A <see cref="T:MongoDB.Bson.BsonDocument"/>.</returns>
        </member>
        <member name="M:MongoDB.Driver.IndexKeysDefinition`1.op_Implicit(MongoDB.Bson.BsonDocument)~MongoDB.Driver.IndexKeysDefinition{`0}">
            <summary>
            Performs an implicit conversion from <see cref="T:MongoDB.Bson.BsonDocument"/> to <see cref="T:MongoDB.Driver.IndexKeysDefinition`1"/>.
            </summary>
            <param name="document">The document.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IndexKeysDefinition`1.op_Implicit(System.String)~MongoDB.Driver.IndexKeysDefinition{`0}">
            <summary>
            Performs an implicit conversion from <see cref="T:System.String" /> to <see cref="T:MongoDB.Driver.IndexKeysDefinition`1" />.
            </summary>
            <param name="json">The JSON string.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="T:MongoDB.Driver.BsonDocumentIndexKeysDefinition`1">
            <summary>
            A <see cref="T:MongoDB.Bson.BsonDocument"/> based index keys definition.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.BsonDocumentIndexKeysDefinition`1.#ctor(MongoDB.Bson.BsonDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.BsonDocumentIndexKeysDefinition`1"/> class.
            </summary>
            <param name="document">The document.</param>
        </member>
        <member name="P:MongoDB.Driver.BsonDocumentIndexKeysDefinition`1.Document">
            <summary>
            Gets the document.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.BsonDocumentIndexKeysDefinition`1.Render(MongoDB.Bson.Serialization.IBsonSerializer{`0},MongoDB.Bson.Serialization.IBsonSerializerRegistry)">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.JsonIndexKeysDefinition`1">
            <summary>
            A JSON <see cref="T:System.String" /> based index keys definition.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.JsonIndexKeysDefinition`1.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.JsonIndexKeysDefinition`1"/> class.
            </summary>
            <param name="json">The json.</param>
        </member>
        <member name="P:MongoDB.Driver.JsonIndexKeysDefinition`1.Json">
            <summary>
            Gets the json.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.JsonIndexKeysDefinition`1.Render(MongoDB.Bson.Serialization.IBsonSerializer{`0},MongoDB.Bson.Serialization.IBsonSerializerRegistry)">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.IndexKeysDefinitionExtensions">
            <summary>
            Extension methods for an index keys definition.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.IndexKeysDefinitionExtensions.Ascending``1(MongoDB.Driver.IndexKeysDefinition{``0},MongoDB.Driver.FieldDefinition{``0})">
            <summary>
            Combines an existing index keys definition with an ascending index key definition.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="keys">The keys.</param>
            <param name="field">The field.</param>
            <returns>
            A combined index keys definition.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IndexKeysDefinitionExtensions.Ascending``1(MongoDB.Driver.IndexKeysDefinition{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Combines an existing index keys definition with an ascending index key definition.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="keys">The keys.</param>
            <param name="field">The field.</param>
            <returns>
            A combined index keys definition.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IndexKeysDefinitionExtensions.Descending``1(MongoDB.Driver.IndexKeysDefinition{``0},MongoDB.Driver.FieldDefinition{``0})">
            <summary>
            Combines an existing index keys definition with a descending index key definition.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="keys">The keys.</param>
            <param name="field">The field.</param>
            <returns>
            A combined index keys definition.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IndexKeysDefinitionExtensions.Descending``1(MongoDB.Driver.IndexKeysDefinition{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Combines an existing index keys definition with a descending index key definition.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="keys">The keys.</param>
            <param name="field">The field.</param>
            <returns>
            A combined index keys definition.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IndexKeysDefinitionExtensions.Geo2D``1(MongoDB.Driver.IndexKeysDefinition{``0},MongoDB.Driver.FieldDefinition{``0})">
            <summary>
            Combines an existing index keys definition with a 2d index key definition.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="keys">The keys.</param>
            <param name="field">The field.</param>
            <returns>
            A combined index keys definition.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IndexKeysDefinitionExtensions.Geo2D``1(MongoDB.Driver.IndexKeysDefinition{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Combines an existing index keys definition with a 2d index key definition.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="keys">The keys.</param>
            <param name="field">The field.</param>
            <returns>
            A combined index keys definition.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IndexKeysDefinitionExtensions.GeoHaystack``1(MongoDB.Driver.IndexKeysDefinition{``0},MongoDB.Driver.FieldDefinition{``0},MongoDB.Driver.FieldDefinition{``0})">
            <summary>
            Combines an existing index keys definition with a geo haystack index key definition.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="keys">The keys.</param>
            <param name="field">The field.</param>
            <param name="additionalFieldName">Name of the additional field.</param>
            <returns>
            A combined index keys definition.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IndexKeysDefinitionExtensions.GeoHaystack``1(MongoDB.Driver.IndexKeysDefinition{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Combines an existing index keys definition with a geo haystack index key definition.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="keys">The keys.</param>
            <param name="field">The field.</param>
            <param name="additionalFieldName">Name of the additional field.</param>
            <returns>
            A combined index keys definition.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IndexKeysDefinitionExtensions.Geo2DSphere``1(MongoDB.Driver.IndexKeysDefinition{``0},MongoDB.Driver.FieldDefinition{``0})">
            <summary>
            Combines an existing index keys definition with a 2dsphere index key definition.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="keys">The keys.</param>
            <param name="field">The field.</param>
            <returns>
            A combined index keys definition.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IndexKeysDefinitionExtensions.Geo2DSphere``1(MongoDB.Driver.IndexKeysDefinition{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Combines an existing index keys definition with a 2dsphere index key definition.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="keys">The keys.</param>
            <param name="field">The field.</param>
            <returns>
            A combined index keys definition.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IndexKeysDefinitionExtensions.Hashed``1(MongoDB.Driver.IndexKeysDefinition{``0},MongoDB.Driver.FieldDefinition{``0})">
            <summary>
            Combines an existing index keys definition with a hashed index key definition.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="keys">The keys.</param>
            <param name="field">The field.</param>
            <returns>
            A combined index keys definition.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IndexKeysDefinitionExtensions.Hashed``1(MongoDB.Driver.IndexKeysDefinition{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Combines an existing index keys definition with a hashed index key definition.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="keys">The keys.</param>
            <param name="field">The field.</param>
            <returns>
            A combined index keys definition.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IndexKeysDefinitionExtensions.Text``1(MongoDB.Driver.IndexKeysDefinition{``0},MongoDB.Driver.FieldDefinition{``0})">
            <summary>
            Combines an existing index keys definition with a text index key definition.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="keys">The keys.</param>
            <param name="field">The field.</param>
            <returns>
            A combined index keys definition.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IndexKeysDefinitionExtensions.Text``1(MongoDB.Driver.IndexKeysDefinition{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Combines an existing index keys definition with a text index key definition.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="keys">The keys.</param>
            <param name="field">The field.</param>
            <returns>
            A combined index keys definition.
            </returns>
        </member>
        <member name="T:MongoDB.Driver.IndexKeysDefinitionBuilder`1">
            <summary>
            A builder for an <see cref="T:MongoDB.Driver.IndexKeysDefinition`1"/>.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.IndexKeysDefinitionBuilder`1.Ascending(MongoDB.Driver.FieldDefinition{`0})">
            <summary>
            Creates an ascending index key definition.
            </summary>
            <param name="field">The field.</param>
            <returns>An ascending index key definition.</returns>
        </member>
        <member name="M:MongoDB.Driver.IndexKeysDefinitionBuilder`1.Ascending(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            Creates an ascending index key definition.
            </summary>
            <param name="field">The field.</param>
            <returns>An ascending index key definition.</returns>
        </member>
        <member name="M:MongoDB.Driver.IndexKeysDefinitionBuilder`1.Combine(MongoDB.Driver.IndexKeysDefinition{`0}[])">
            <summary>
            Creates a combined index keys definition.
            </summary>
            <param name="keys">The keys.</param>
            <returns>A combined index keys definition.</returns>
        </member>
        <member name="M:MongoDB.Driver.IndexKeysDefinitionBuilder`1.Combine(System.Collections.Generic.IEnumerable{MongoDB.Driver.IndexKeysDefinition{`0}})">
            <summary>
            Creates a combined index keys definition.
            </summary>
            <param name="keys">The keys.</param>
            <returns>A combined index keys definition.</returns>
        </member>
        <member name="M:MongoDB.Driver.IndexKeysDefinitionBuilder`1.Descending(MongoDB.Driver.FieldDefinition{`0})">
            <summary>
            Creates a descending index key definition.
            </summary>
            <param name="field">The field.</param>
            <returns>A descending index key definition.</returns>
        </member>
        <member name="M:MongoDB.Driver.IndexKeysDefinitionBuilder`1.Descending(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            Creates a descending index key definition.
            </summary>
            <param name="field">The field.</param>
            <returns>A descending index key definition.</returns>
        </member>
        <member name="M:MongoDB.Driver.IndexKeysDefinitionBuilder`1.Geo2D(MongoDB.Driver.FieldDefinition{`0})">
            <summary>
            Creates a 2d index key definition.
            </summary>
            <param name="field">The field.</param>
            <returns>A 2d index key definition.</returns>
        </member>
        <member name="M:MongoDB.Driver.IndexKeysDefinitionBuilder`1.Geo2D(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            Creates a 2d index key definition.
            </summary>
            <param name="field">The field.</param>
            <returns>A 2d index key definition.</returns>
        </member>
        <member name="M:MongoDB.Driver.IndexKeysDefinitionBuilder`1.GeoHaystack(MongoDB.Driver.FieldDefinition{`0},MongoDB.Driver.FieldDefinition{`0})">
            <summary>
            Creates a geo haystack index key definition.
            </summary>
            <param name="field">The field.</param>
            <param name="additionalFieldName">Name of the additional field.</param>
            <returns>
            A geo haystack index key definition.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IndexKeysDefinitionBuilder`1.GeoHaystack(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            Creates a geo haystack index key definition.
            </summary>
            <param name="field">The field.</param>
            <param name="additionalFieldName">Name of the additional field.</param>
            <returns>
            A geo haystack index key definition.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.IndexKeysDefinitionBuilder`1.Geo2DSphere(MongoDB.Driver.FieldDefinition{`0})">
            <summary>
            Creates a 2dsphere index key definition.
            </summary>
            <param name="field">The field.</param>
            <returns>A 2dsphere index key definition.</returns>
        </member>
        <member name="M:MongoDB.Driver.IndexKeysDefinitionBuilder`1.Geo2DSphere(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            Creates a 2dsphere index key definition.
            </summary>
            <param name="field">The field.</param>
            <returns>A 2dsphere index key definition.</returns>
        </member>
        <member name="M:MongoDB.Driver.IndexKeysDefinitionBuilder`1.Hashed(MongoDB.Driver.FieldDefinition{`0})">
            <summary>
            Creates a hashed index key definition.
            </summary>
            <param name="field">The field.</param>
            <returns>A hashed index key definition.</returns>
        </member>
        <member name="M:MongoDB.Driver.IndexKeysDefinitionBuilder`1.Hashed(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            Creates a hashed index key definition.
            </summary>
            <param name="field">The field.</param>
            <returns>A hashed index key definition.</returns>
        </member>
        <member name="M:MongoDB.Driver.IndexKeysDefinitionBuilder`1.Text(MongoDB.Driver.FieldDefinition{`0})">
            <summary>
            Creates a text index key definition.
            </summary>
            <param name="field">The field.</param>
            <returns>A text index key definition.</returns>
        </member>
        <member name="M:MongoDB.Driver.IndexKeysDefinitionBuilder`1.Text(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            Creates a text index key definition.
            </summary>
            <param name="field">The field.</param>
            <returns>A text index key definition.</returns>
        </member>
        <member name="M:MongoDB.Driver.IndexKeysDefinitionBuilder`1.Wildcard(MongoDB.Driver.FieldDefinition{`0})">
            <summary>
            Creates a wildcard index key definition. The method doesn't expect to specify a wildcard key explicitly.
            </summary>
            <param name="field">The wildcard key name. If the wildcard name is empty, the generated key will be `All field paths`, otherwise `A single field path`.</param>
            <returns>A wildcard index key definition.</returns>
        </member>
        <member name="M:MongoDB.Driver.IndexKeysDefinitionBuilder`1.Wildcard(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            Creates a wildcard index key definition.
            </summary>
            <param name="field">The field expression representing the wildcard key name.</param>
            <returns>A wildcard index key definition.</returns>
        </member>
        <member name="T:MongoDB.Driver.IndexOptionDefaults">
            <summary>
            Represents index option defaults.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.IndexOptionDefaults.StorageEngine">
            <summary>
            Gets or sets the storage engine options.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.IndexOptionDefaults.ToBsonDocument">
            <summary>
            Returns this instance represented as a BsonDocument.
            </summary>
            <returns>A BsonDocument.</returns>
        </member>
        <member name="T:MongoDB.Driver.InsertManyOptions">
            <summary>
            Options for inserting many documents.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.InsertManyOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.InsertManyOptions"/> class.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.InsertManyOptions.BypassDocumentValidation">
            <summary>
            Gets or sets a value indicating whether to bypass document validation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.InsertManyOptions.IsOrdered">
            <summary>
            Gets or sets a value indicating whether the requests are fulfilled in order.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.InsertOneModel`1">
            <summary>
            Model for inserting a single document.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.InsertOneModel`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.InsertOneModel`1"/> class.
            </summary>
            <param name="document">The document.</param>
        </member>
        <member name="P:MongoDB.Driver.InsertOneModel`1.Document">
            <summary>
            Gets the document.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.InsertOneModel`1.ModelType">
            <summary>
            Gets the type of the model.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.InsertOneOptions">
            <summary>
            Options for inserting one document.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.InsertOneOptions.BypassDocumentValidation">
            <summary>
            Gets or sets a value indicating whether to bypass document validation.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.IServerSession">
            <summary>
            The interface for a server session.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.IServerSession.Id">
            <summary>
            Gets the session Id.
            </summary>
            <value>
            The session Id.
            </value>
        </member>
        <member name="P:MongoDB.Driver.IServerSession.LastUsedAt">
            <summary>
            Gets the time this server session was last used (in UTC).
            </summary>
            <value>
            The time this server session was last used (in UTC).
            </value>
        </member>
        <member name="M:MongoDB.Driver.IServerSession.AdvanceTransactionNumber">
            <summary>
            Gets the next transaction number.
            </summary>
            <returns>The transaction number.</returns>
        </member>
        <member name="M:MongoDB.Driver.IServerSession.WasUsed">
            <summary>
            Called by the driver when the session is used (i.e. sent to the server).
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Linq.AggregateQueryableExecutionModel`1">
            <summary>
            A model for a queryable to be executed using the aggregation framework.
            </summary>
            <typeparam name="TOutput">The type of the output.</typeparam>
        </member>
        <member name="P:MongoDB.Driver.Linq.AggregateQueryableExecutionModel`1.Stages">
            <summary>
            Gets the stages.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Linq.AggregateQueryableExecutionModel`1.OutputSerializer">
            <summary>
            Gets the output serializer.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Linq.AggregateQueryableExecutionModel`1.OutputType">
            <summary>
            Gets the type of the output.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Linq.AggregateQueryableExecutionModel`1.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:MongoDB.Driver.Linq.Expressions.ExpressionComparer">
            <summary>
            Compare two expressions to determine if they are equivalent.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Linq.IMongoQueryable">
            <summary>
            Provides functionality to evaluate queries against MongoDB.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Linq.IMongoQueryable.GetExecutionModel">
            <summary>
            Gets the execution model.
            </summary>
            <returns>
            The execution model.
            </returns>
        </member>
        <member name="T:MongoDB.Driver.Linq.IMongoQueryable`1">
            <summary>
            Provides functionality to evaluate queries against MongoDB
            wherein the type of the data is known.
            </summary>
            <typeparam name="T">
            The type of the data in the data source.
            This type parameter is covariant.
            That is, you can use either the type you specified or any type that is more
            derived. For more information about covariance and contravariance, see Covariance
            and Contravariance in Generics.
            </typeparam>
        </member>
        <member name="T:MongoDB.Driver.Linq.IOrderedMongoQueryable`1">
            <summary>
            Represents the result of a sorting operation.
            </summary>
            <typeparam name="T">
            The type of the data in the data source.
            This type parameter is covariant.
            That is, you can use either the type you specified or any type that is more
            derived. For more information about covariance and contravariance, see Covariance
            and Contravariance in Generics.
            </typeparam>
        </member>
        <member name="T:MongoDB.Driver.Linq.IMongoQueryProvider">
            <summary>
            An implementation of <see cref="T:System.Linq.IQueryProvider" /> for MongoDB.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Linq.IMongoQueryProvider.CollectionNamespace">
            <summary>
            Gets the collection namespace.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Linq.IMongoQueryProvider.CollectionDocumentSerializer">
            <summary>
            Gets the collection document serializer.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Linq.IMongoQueryProvider.GetExecutionModel(System.Linq.Expressions.Expression)">
            <summary>
            Gets the execution model.
            </summary>
            <param name="expression">The expression.</param>
            <returns>The execution model.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.IMongoQueryProvider.ExecuteAsync``1(System.Linq.Expressions.Expression,System.Threading.CancellationToken)">
            <summary>
            Executes the strongly-typed query represented by a specified expression tree.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="expression">An expression tree that represents a LINQ query.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The value that results from executing the specified query.</returns>
        </member>
        <member name="T:MongoDB.Driver.Linq.LinqExtensions">
            <summary>
            This static class holds methods that can be used to express MongoDB specific operations in LINQ queries.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Linq.LinqExtensions.Inject``1(MongoDB.Driver.FilterDefinition{``0})">
            <summary>
            Injects a low level FilterDefinition{TDocument} into a LINQ where clause. Can only be used in LINQ queries.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="filter">The filter.</param>
            <returns>
            Throws an InvalidOperationException if called.
            </returns>
        </member>
        <member name="T:MongoDB.Driver.Linq.MongoEnumerable">
            <summary>
            Enumerable Extensions for MongoDB.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoEnumerable.StandardDeviationPopulation(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Computes the population standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoEnumerable.StandardDeviationPopulation(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})">
            <summary>
            Computes the population standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoEnumerable.StandardDeviationPopulation(System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>
            Computes the population standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoEnumerable.StandardDeviationPopulation(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})">
            <summary>
            Computes the population standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoEnumerable.StandardDeviationPopulation(System.Collections.Generic.IEnumerable{System.Single})">
            <summary>
            Computes the population standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoEnumerable.StandardDeviationPopulation(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})">
            <summary>
            Computes the population standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoEnumerable.StandardDeviationPopulation(System.Collections.Generic.IEnumerable{System.Double})">
            <summary>
            Computes the population standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoEnumerable.StandardDeviationPopulation(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})">
            <summary>
            Computes the population standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoEnumerable.StandardDeviationPopulation(System.Collections.Generic.IEnumerable{System.Decimal})">
            <summary>
            Computes the population standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoEnumerable.StandardDeviationPopulation(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})">
            <summary>
            Computes the population standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoEnumerable.StandardDeviationPopulation``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})">
            <summary>
            Computes the population standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoEnumerable.StandardDeviationPopulation``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})">
            <summary>
            Computes the population standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoEnumerable.StandardDeviationPopulation``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})">
            <summary>
            Computes the population standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoEnumerable.StandardDeviationPopulation``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})">
            <summary>
            Computes the population standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoEnumerable.StandardDeviationPopulation``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})">
            <summary>
            Computes the population standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoEnumerable.StandardDeviationPopulation``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})">
            <summary>
            Computes the population standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoEnumerable.StandardDeviationPopulation``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})">
            <summary>
            Computes the population standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoEnumerable.StandardDeviationPopulation``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})">
            <summary>
            Computes the population standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoEnumerable.StandardDeviationPopulation``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})">
            <summary>
            Computes the population standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoEnumerable.StandardDeviationPopulation``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})">
            <summary>
            Computes the population standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoEnumerable.StandardDeviationSample(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Computes the sample standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoEnumerable.StandardDeviationSample(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})">
            <summary>
            Computes the sample standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoEnumerable.StandardDeviationSample(System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>
            Computes the sample standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoEnumerable.StandardDeviationSample(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})">
            <summary>
            Computes the sample standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoEnumerable.StandardDeviationSample(System.Collections.Generic.IEnumerable{System.Single})">
            <summary>
            Computes the sample standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoEnumerable.StandardDeviationSample(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})">
            <summary>
            Computes the sample standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoEnumerable.StandardDeviationSample(System.Collections.Generic.IEnumerable{System.Double})">
            <summary>
            Computes the sample standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoEnumerable.StandardDeviationSample(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})">
            <summary>
            Computes the sample standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoEnumerable.StandardDeviationSample(System.Collections.Generic.IEnumerable{System.Decimal})">
            <summary>
            Computes the sample standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoEnumerable.StandardDeviationSample(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})">
            <summary>
            Computes the sample standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoEnumerable.StandardDeviationSample``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})">
            <summary>
            Computes the sample standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoEnumerable.StandardDeviationSample``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})">
            <summary>
            Computes the sample standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoEnumerable.StandardDeviationSample``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})">
            <summary>
            Computes the sample standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoEnumerable.StandardDeviationSample``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})">
            <summary>
            Computes the sample standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoEnumerable.StandardDeviationSample``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})">
            <summary>
            Computes the sample standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoEnumerable.StandardDeviationSample``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})">
            <summary>
            Computes the sample standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoEnumerable.StandardDeviationSample``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})">
            <summary>
            Computes the sample standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoEnumerable.StandardDeviationSample``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})">
            <summary>
            Computes the sample standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoEnumerable.StandardDeviationSample``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})">
            <summary>
            Computes the sample standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoEnumerable.StandardDeviationSample``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})">
            <summary>
            Computes the sample standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="T:MongoDB.Driver.Linq.MongoQueryable">
            <summary>
            Extension for <see cref="T:MongoDB.Driver.Linq.IMongoQueryable" />.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.AnyAsync``1(MongoDB.Driver.Linq.IMongoQueryable{``0},System.Threading.CancellationToken)">
            <summary>
            Determines whether a sequence contains any elements.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence to check for being empty.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            true if the source sequence contains any elements; otherwise, false.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.AnyAsync``1(MongoDB.Driver.Linq.IMongoQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)">
            <summary>
            Determines whether any element of a sequence satisfies a condition.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence whose elements to test for a condition.</param>
            <param name="predicate">A function to test each element for a condition.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            true if any elements in the source sequence pass the test in the specified predicate; otherwise, false.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.AverageAsync(MongoDB.Driver.Linq.IMongoQueryable{System.Decimal},System.Threading.CancellationToken)">
            <summary>
            Computes the average of a sequence of <see cref="T:System.Decimal"/> values.
            </summary>
            <param name="source">A sequence of values to calculate the average of.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The average of the values in the sequence.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.AverageAsync(MongoDB.Driver.Linq.IMongoQueryable{System.Nullable{System.Decimal}},System.Threading.CancellationToken)">
            <summary>
            Computes the average of a sequence of <see cref="T:System.Nullable`1"/> values.
            </summary>
            <param name="source">A sequence of values to calculate the average of.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The average of the values in the sequence.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.AverageAsync(MongoDB.Driver.Linq.IMongoQueryable{System.Double},System.Threading.CancellationToken)">
            <summary>
            Computes the average of a sequence of <see cref="T:System.Double"/> values.
            </summary>
            <param name="source">A sequence of values to calculate the average of.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The average of the values in the sequence.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.AverageAsync(MongoDB.Driver.Linq.IMongoQueryable{System.Nullable{System.Double}},System.Threading.CancellationToken)">
            <summary>
            Computes the average of a sequence of <see cref="T:System.Nullable`1"/> values.
            </summary>
            <param name="source">A sequence of values to calculate the average of.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The average of the values in the sequence.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.AverageAsync(MongoDB.Driver.Linq.IMongoQueryable{System.Single},System.Threading.CancellationToken)">
            <summary>
            Computes the average of a sequence of <see cref="T:System.Single"/> values.
            </summary>
            <param name="source">A sequence of values to calculate the average of.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The average of the values in the sequence.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.AverageAsync(MongoDB.Driver.Linq.IMongoQueryable{System.Nullable{System.Single}},System.Threading.CancellationToken)">
            <summary>
            Computes the average of a sequence of <see cref="T:System.Nullable`1"/> values.
            </summary>
            <param name="source">A sequence of values to calculate the average of.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The average of the values in the sequence.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.AverageAsync(MongoDB.Driver.Linq.IMongoQueryable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Computes the average of a sequence of <see cref="T:System.Int32"/> values.
            </summary>
            <param name="source">A sequence of values to calculate the average of.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The average of the values in the sequence.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.AverageAsync(MongoDB.Driver.Linq.IMongoQueryable{System.Nullable{System.Int32}},System.Threading.CancellationToken)">
            <summary>
            Computes the average of a sequence of <see cref="T:System.Nullable`1"/> values.
            </summary>
            <param name="source">A sequence of values to calculate the average of.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The average of the values in the sequence.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.AverageAsync(MongoDB.Driver.Linq.IMongoQueryable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Computes the average of a sequence of <see cref="T:System.Int64"/> values.
            </summary>
            <param name="source">A sequence of values to calculate the average of.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The average of the values in the sequence.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.AverageAsync(MongoDB.Driver.Linq.IMongoQueryable{System.Nullable{System.Int64}},System.Threading.CancellationToken)">
            <summary>
            Computes the average of a sequence of <see cref="T:System.Nullable`1"/> values.
            </summary>
            <param name="source">A sequence of values to calculate the average of.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The average of the values in the sequence.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.AverageAsync``1(MongoDB.Driver.Linq.IMongoQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}},System.Threading.CancellationToken)">
            <summary>
            Computes the average of the sequence of <see cref="T:System.Decimal" /> values that is obtained
            by invoking a projection function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values.</param>
            <param name="selector">A projection function to apply to each element.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The average of the projected values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.AverageAsync``1(MongoDB.Driver.Linq.IMongoQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}},System.Threading.CancellationToken)">
            <summary>
            Computes the average of the sequence of <see cref="T:System.Nullable`1" /> values that is obtained
            by invoking a projection function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values.</param>
            <param name="selector">A projection function to apply to each element.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The average of the projected values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.AverageAsync``1(MongoDB.Driver.Linq.IMongoQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}},System.Threading.CancellationToken)">
            <summary>
            Computes the average of the sequence of <see cref="T:System.Double" /> values that is obtained
            by invoking a projection function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values.</param>
            <param name="selector">A projection function to apply to each element.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The average of the projected values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.AverageAsync``1(MongoDB.Driver.Linq.IMongoQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}},System.Threading.CancellationToken)">
            <summary>
            Computes the average of the sequence of <see cref="T:System.Nullable`1" /> values that is obtained
            by invoking a projection function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values.</param>
            <param name="selector">A projection function to apply to each element.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The average of the projected values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.AverageAsync``1(MongoDB.Driver.Linq.IMongoQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}},System.Threading.CancellationToken)">
            <summary>
            Computes the average of the sequence of <see cref="T:System.Single" /> values that is obtained
            by invoking a projection function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values.</param>
            <param name="selector">A projection function to apply to each element.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The average of the projected values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.AverageAsync``1(MongoDB.Driver.Linq.IMongoQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}},System.Threading.CancellationToken)">
            <summary>
            Computes the average of the sequence of <see cref="T:System.Nullable`1" /> values that is obtained
            by invoking a projection function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values.</param>
            <param name="selector">A projection function to apply to each element.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The average of the projected values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.AverageAsync``1(MongoDB.Driver.Linq.IMongoQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}},System.Threading.CancellationToken)">
            <summary>
            Computes the average of the sequence of <see cref="T:System.Int32" /> values that is obtained
            by invoking a projection function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values.</param>
            <param name="selector">A projection function to apply to each element.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The average of the projected values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.AverageAsync``1(MongoDB.Driver.Linq.IMongoQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}},System.Threading.CancellationToken)">
            <summary>
            Computes the average of the sequence of <see cref="T:System.Nullable`1" /> values that is obtained
            by invoking a projection function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values.</param>
            <param name="selector">A projection function to apply to each element.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The average of the projected values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.AverageAsync``1(MongoDB.Driver.Linq.IMongoQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}},System.Threading.CancellationToken)">
            <summary>
            Computes the average of the sequence of <see cref="T:System.Int64" /> values that is obtained
            by invoking a projection function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values.</param>
            <param name="selector">A projection function to apply to each element.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The average of the projected values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.AverageAsync``1(MongoDB.Driver.Linq.IMongoQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}},System.Threading.CancellationToken)">
            <summary>
            Computes the average of the sequence of <see cref="T:System.Nullable`1" /> values that is obtained
            by invoking a projection function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values.</param>
            <param name="selector">A projection function to apply to each element.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The average of the projected values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.CountAsync``1(MongoDB.Driver.Linq.IMongoQueryable{``0},System.Threading.CancellationToken)">
            <summary>
            Returns the number of elements in a sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">The <see cref="T:MongoDB.Driver.Linq.IMongoQueryable`1" /> that contains the elements to be counted.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The number of elements in the input sequence.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.CountAsync``1(MongoDB.Driver.Linq.IMongoQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)">
            <summary>
            Returns the number of elements in the specified sequence that satisfies a condition.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">An <see cref="T:MongoDB.Driver.Linq.IMongoQueryable`1" /> that contains the elements to be counted.</param>
            <param name="predicate">A function to test each element for a condition.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The number of elements in the sequence that satisfies the condition in the predicate function.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.Distinct``1(MongoDB.Driver.Linq.IMongoQueryable{``0})">
            <summary>
            Returns distinct elements from a sequence by using the default equality comparer to compare values.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">The <see cref="T:MongoDB.Driver.Linq.IMongoQueryable`1" /> to remove duplicates from.</param>
            <returns>
            An <see cref="T:MongoDB.Driver.Linq.IMongoQueryable`1" /> that contains distinct elements from <paramref name="source" />.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.FirstAsync``1(MongoDB.Driver.Linq.IMongoQueryable{``0},System.Threading.CancellationToken)">
            <summary>
            Returns the first element of a sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">The <see cref="T:MongoDB.Driver.Linq.IMongoQueryable`1" /> to return the first element of.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The first element in <paramref name="source" />.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.FirstAsync``1(MongoDB.Driver.Linq.IMongoQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)">
            <summary>
            Returns the first element of a sequence that satisfies a specified condition.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">An <see cref="T:MongoDB.Driver.Linq.IMongoQueryable`1" /> to return an element from.</param>
            <param name="predicate">A function to test each element for a condition.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The first element in <paramref name="source" /> that passes the test in <paramref name="predicate" />.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.FirstOrDefaultAsync``1(MongoDB.Driver.Linq.IMongoQueryable{``0},System.Threading.CancellationToken)">
            <summary>
            Returns the first element of a sequence, or a default value if the sequence contains no elements.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">The <see cref="T:MongoDB.Driver.Linq.IMongoQueryable`1" /> to return the first element of.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            default(<typeparamref name="TSource" />) if <paramref name="source" /> is empty; otherwise, the first element in <paramref name="source" />.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.FirstOrDefaultAsync``1(MongoDB.Driver.Linq.IMongoQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)">
            <summary>
            Returns the first element of a sequence that satisfies a specified condition or a default value if no such element is found.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">An <see cref="T:MongoDB.Driver.Linq.IMongoQueryable`1" /> to return an element from.</param>
            <param name="predicate">A function to test each element for a condition.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            default(<typeparamref name="TSource" />) if <paramref name="source" /> is empty or if no element passes the test specified by <paramref name="predicate" />; otherwise, the first element in <paramref name="source" /> that passes the test specified by <paramref name="predicate" />.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.GroupBy``2(MongoDB.Driver.Linq.IMongoQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            Groups the elements of a sequence according to a specified key selector function.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <typeparam name="TKey">The type of the key returned by the function represented in keySelector.</typeparam>
            <param name="source">An <see cref="T:MongoDB.Driver.Linq.IMongoQueryable`1" /> whose elements to group.</param>
            <param name="keySelector">A function to extract the key for each element.</param>
            <returns>
            An <see cref="T:MongoDB.Driver.Linq.IMongoQueryable`1" /> that has a type argument of <see cref="T:System.Linq.IGrouping`2"/> 
            and where each <see cref="T:System.Linq.IGrouping`2"/> object contains a sequence of objects 
            and a key.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.GroupBy``3(MongoDB.Driver.Linq.IMongoQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}})">
            <summary>
            Groups the elements of a sequence according to a specified key selector function
            and creates a result value from each group and its key.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <typeparam name="TKey">The type of the key returned by the function represented in keySelector.</typeparam>
            <typeparam name="TResult">The type of the result value returned by resultSelector.</typeparam>
            <param name="source">An <see cref="T:MongoDB.Driver.Linq.IMongoQueryable`1" /> whose elements to group.</param>
            <param name="keySelector">A function to extract the key for each element.</param>
            <param name="resultSelector">A function to create a result value from each group.</param>
            <returns>
            An <see cref="T:MongoDB.Driver.Linq.IMongoQueryable`1" /> that has a type argument of TResult and where
            each element represents a projection over a group and its key.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.GroupJoin``4(MongoDB.Driver.Linq.IMongoQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}})">
            <summary>
            Correlates the elements of two sequences based on key equality and groups the results.
            </summary>
            <typeparam name="TOuter">The type of the elements of the first sequence.</typeparam>
            <typeparam name="TInner">The type of the elements of the second sequence.</typeparam>
            <typeparam name="TKey">The type of the keys returned by the key selector functions.</typeparam>
            <typeparam name="TResult">The type of the result elements.</typeparam>
            <param name="outer">The first sequence to join.</param>
            <param name="inner">The sequence to join to the first sequence.</param>
            <param name="outerKeySelector">A function to extract the join key from each element of the first sequence.</param>
            <param name="innerKeySelector">A function to extract the join key from each element of the second sequence.</param>
            <param name="resultSelector">A function to create a result element from an element from the first sequence and a collection of matching elements from the second sequence.</param>
            <returns>
            An <see cref="T:MongoDB.Driver.Linq.IMongoQueryable`1" /> that contains elements of type <typeparamref name="TResult" /> obtained by performing a grouped join on two sequences.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.GroupJoin``4(MongoDB.Driver.Linq.IMongoQueryable{``0},MongoDB.Driver.IMongoCollection{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}})">
            <summary>
            Correlates the elements of two sequences based on key equality and groups the results.
            </summary>
            <typeparam name="TOuter">The type of the elements of the first sequence.</typeparam>
            <typeparam name="TInner">The type of the elements of the second sequence.</typeparam>
            <typeparam name="TKey">The type of the keys returned by the key selector functions.</typeparam>
            <typeparam name="TResult">The type of the result elements.</typeparam>
            <param name="outer">The first sequence to join.</param>
            <param name="inner">The collection to join to the first sequence.</param>
            <param name="outerKeySelector">A function to extract the join key from each element of the first sequence.</param>
            <param name="innerKeySelector">A function to extract the join key from each element of the second sequence.</param>
            <param name="resultSelector">A function to create a result element from an element from the first sequence and a collection of matching elements from the second sequence.</param>
            <returns>
            An <see cref="T:MongoDB.Driver.Linq.IMongoQueryable`1" /> that contains elements of type <typeparamref name="TResult" /> obtained by performing a grouped join on two sequences.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.Join``4(MongoDB.Driver.Linq.IMongoQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}})">
            <summary>
            Correlates the elements of two sequences based on matching keys.
            </summary>
            <typeparam name="TOuter">The type of the elements of the first sequence.</typeparam>
            <typeparam name="TInner">The type of the elements of the second sequence.</typeparam>
            <typeparam name="TKey">The type of the keys returned by the key selector functions.</typeparam>
            <typeparam name="TResult">The type of the result elements.</typeparam>
            <param name="outer">The first sequence to join.</param>
            <param name="inner">The sequence to join to the first sequence.</param>
            <param name="outerKeySelector">A function to extract the join key from each element of the first sequence.</param>
            <param name="innerKeySelector">A function to extract the join key from each element of the second sequence.</param>
            <param name="resultSelector">A function to create a result element from two matching elements.</param>
            <returns>
            An <see cref="T:System.Linq.IQueryable`1" /> that has elements of type <typeparamref name="TResult" /> obtained by performing an inner join on two sequences.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.Join``4(MongoDB.Driver.Linq.IMongoQueryable{``0},MongoDB.Driver.IMongoCollection{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}})">
            <summary>
            Correlates the elements of two sequences based on matching keys.
            </summary>
            <typeparam name="TOuter">The type of the elements of the first sequence.</typeparam>
            <typeparam name="TInner">The type of the elements of the second sequence.</typeparam>
            <typeparam name="TKey">The type of the keys returned by the key selector functions.</typeparam>
            <typeparam name="TResult">The type of the result elements.</typeparam>
            <param name="outer">The first sequence to join.</param>
            <param name="inner">The sequence to join to the first sequence.</param>
            <param name="outerKeySelector">A function to extract the join key from each element of the first sequence.</param>
            <param name="innerKeySelector">A function to extract the join key from each element of the second sequence.</param>
            <param name="resultSelector">A function to create a result element from two matching elements.</param>
            <returns>
            An <see cref="T:System.Linq.IQueryable`1" /> that has elements of type <typeparamref name="TResult" /> obtained by performing an inner join on two sequences.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.LongCountAsync``1(MongoDB.Driver.Linq.IMongoQueryable{``0},System.Threading.CancellationToken)">
            <summary>
            Returns the number of elements in a sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">The <see cref="T:MongoDB.Driver.Linq.IMongoQueryable`1" /> that contains the elements to be counted.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The number of elements in the input sequence.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.LongCountAsync``1(MongoDB.Driver.Linq.IMongoQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)">
            <summary>
            Returns the number of elements in the specified sequence that satisfies a condition.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">An <see cref="T:MongoDB.Driver.Linq.IMongoQueryable`1" /> that contains the elements to be counted.</param>
            <param name="predicate">A function to test each element for a condition.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The number of elements in the sequence that satisfies the condition in the predicate function.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.MaxAsync``1(MongoDB.Driver.Linq.IMongoQueryable{``0},System.Threading.CancellationToken)">
            <summary>
            Returns the maximum value in a generic <see cref="T:MongoDB.Driver.Linq.IMongoQueryable`1" />.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to determine the maximum of.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The maximum value in the sequence.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.MaxAsync``2(MongoDB.Driver.Linq.IMongoQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Threading.CancellationToken)">
            <summary>
            Invokes a projection function on each element of a generic <see cref="T:MongoDB.Driver.Linq.IMongoQueryable`1" /> and returns the maximum resulting value.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <typeparam name="TResult">The type of the value returned by the function represented by <paramref name="selector" />.</typeparam>
            <param name="source">A sequence of values to determine the maximum of.</param>
            <param name="selector">A projection function to apply to each element.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The maximum value in the sequence.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.MinAsync``1(MongoDB.Driver.Linq.IMongoQueryable{``0},System.Threading.CancellationToken)">
            <summary>
            Returns the minimum value in a generic <see cref="T:MongoDB.Driver.Linq.IMongoQueryable`1" />.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to determine the minimum of.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The minimum value in the sequence.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.MinAsync``2(MongoDB.Driver.Linq.IMongoQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Threading.CancellationToken)">
            <summary>
            Invokes a projection function on each element of a generic <see cref="T:MongoDB.Driver.Linq.IMongoQueryable`1" /> and returns the minimum resulting value.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <typeparam name="TResult">The type of the value returned by the function represented by <paramref name="selector" />.</typeparam>
            <param name="source">A sequence of values to determine the minimum of.</param>
            <param name="selector">A projection function to apply to each element.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The minimum value in the sequence.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.OfType``1(MongoDB.Driver.Linq.IMongoQueryable)">
            <summary>
            Filters the elements of an <see cref="T:MongoDB.Driver.Linq.IMongoQueryable" /> based on a specified type.
            </summary>
            <typeparam name="TResult">The type to filter the elements of the sequence on.</typeparam>
            <param name="source">An <see cref="T:MongoDB.Driver.Linq.IMongoQueryable" /> whose elements to filter.</param>
            <returns>
            A collection that contains the elements from <paramref name="source" /> that have type <typeparamref name="TResult" />.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.OrderBy``2(MongoDB.Driver.Linq.IMongoQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            Sorts the elements of a sequence in ascending order according to a key.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <typeparam name="TKey">The type of the key returned by the function that is represented by keySelector.</typeparam>
            <param name="source">A sequence of values to order.</param>
            <param name="keySelector">A function to extract a key from an element.</param>
            <returns>
            An <see cref="T:MongoDB.Driver.Linq.IOrderedMongoQueryable`1"/> whose elements are sorted according to a key.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.OrderByDescending``2(MongoDB.Driver.Linq.IMongoQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            Sorts the elements of a sequence in descending order according to a key.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <typeparam name="TKey">The type of the key returned by the function that is represented by keySelector.</typeparam>
            <param name="source">A sequence of values to order.</param>
            <param name="keySelector">A function to extract a key from an element.</param>
            <returns>
            An <see cref="T:MongoDB.Driver.Linq.IOrderedMongoQueryable`1"/> whose elements are sorted in descending order according to a key.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.Sample``1(MongoDB.Driver.Linq.IMongoQueryable{``0},System.Int64)">
            <summary>
            Returns a sample of the elements in the <paramref name="source"/>.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">An <see cref="T:MongoDB.Driver.Linq.IMongoQueryable`1" /> to return a sample of.</param>
            <param name="count">The number of elements in the sample.</param>
            <returns>
            A sample of the elements in the <paramref name="source"/>.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.Select``2(MongoDB.Driver.Linq.IMongoQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            Projects each element of a sequence into a new form by incorporating the
            element's index.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <typeparam name="TResult"> The type of the value returned by the function represented by selector.</typeparam>
            <param name="source">A sequence of values to project.</param>
            <param name="selector">A projection function to apply to each element.</param>
            <returns>
            An <see cref="T:MongoDB.Driver.Linq.IMongoQueryable`1"/> whose elements are the result of invoking a
            projection function on each element of source.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.SelectMany``2(MongoDB.Driver.Linq.IMongoQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}})">
            <summary>
            Projects each element of a sequence to an <see cref="T:System.Collections.Generic.IEnumerable`1" /> and combines the resulting sequences into one sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <typeparam name="TResult">The type of the elements of the sequence returned by the function represented by <paramref name="selector" />.</typeparam>
            <param name="source">A sequence of values to project.</param>
            <param name="selector">A projection function to apply to each element.</param>
            <returns>
            An <see cref="T:MongoDB.Driver.Linq.IMongoQueryable`1" /> whose elements are the result of invoking a one-to-many projection function on each element of the input sequence.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.SelectMany``3(MongoDB.Driver.Linq.IMongoQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})">
            <summary>
            Projects each element of a sequence to an <see cref="T:System.Collections.Generic.IEnumerable`1" /> and 
            invokes a result selector function on each element therein. The resulting values from 
            each intermediate sequence are combined into a single, one-dimensional sequence and returned.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <typeparam name="TCollection">The type of the intermediate elements collected by the function represented by <paramref name="collectionSelector" />.</typeparam>
            <typeparam name="TResult">The type of the elements of the resulting sequence.</typeparam>
            <param name="source">A sequence of values to project.</param>
            <param name="collectionSelector">A projection function to apply to each element of the input sequence.</param>
            <param name="resultSelector">A projection function to apply to each element of each intermediate sequence.</param>
            <returns>
            An <see cref="T:MongoDB.Driver.Linq.IMongoQueryable`1" /> whose elements are the result of invoking the one-to-many projection function <paramref name="collectionSelector" /> on each element of <paramref name="source" /> and then mapping each of those sequence elements and their corresponding <paramref name="source" /> element to a result element.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.SingleAsync``1(MongoDB.Driver.Linq.IMongoQueryable{``0},System.Threading.CancellationToken)">
            <summary>
            Returns the only element of a sequence, and throws an exception if there is not exactly one element in the sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">An <see cref="T:MongoDB.Driver.Linq.IMongoQueryable`1" /> to return the single element of.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The single element of the input sequence.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.SingleAsync``1(MongoDB.Driver.Linq.IMongoQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)">
            <summary>
            Returns the only element of a sequence that satisfies a specified condition, and throws an exception if more than one such element exists.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">An <see cref="T:MongoDB.Driver.Linq.IMongoQueryable`1" /> to return a single element from.</param>
            <param name="predicate">A function to test an element for a condition.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The single element of the input sequence that satisfies the condition in <paramref name="predicate" />.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.SingleOrDefaultAsync``1(MongoDB.Driver.Linq.IMongoQueryable{``0},System.Threading.CancellationToken)">
            <summary>
            Returns the only element of a sequence, or a default value if the sequence is empty; this method throws an exception if there is more than one element in the sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">An <see cref="T:MongoDB.Driver.Linq.IMongoQueryable`1" /> to return the single element of.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The single element of the input sequence, or default(<typeparamref name="TSource" />) if the sequence contains no elements.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.SingleOrDefaultAsync``1(MongoDB.Driver.Linq.IMongoQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)">
            <summary>
            Returns the only element of a sequence that satisfies a specified condition or a default value if no such element exists; this method throws an exception if more than one element satisfies the condition.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">An <see cref="T:MongoDB.Driver.Linq.IMongoQueryable`1" /> to return a single element from.</param>
            <param name="predicate">A function to test an element for a condition.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The single element of the input sequence that satisfies the condition in <paramref name="predicate" />, or default(<typeparamref name="TSource" />) if no such element is found.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.Skip``1(MongoDB.Driver.Linq.IMongoQueryable{``0},System.Int32)">
            <summary>
            Bypasses a specified number of elements in a sequence and then returns the
            remaining elements.
            </summary>
            <typeparam name="TSource">The type of the elements of source</typeparam>
            <param name="source">An <see cref="T:MongoDB.Driver.Linq.IMongoQueryable`1"/> to return elements from.</param>
            <param name="count">The number of elements to skip before returning the remaining elements.</param>
            <returns>
            An <see cref="T:MongoDB.Driver.Linq.IMongoQueryable`1"/> that contains elements that occur after the
            specified index in the input sequence.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationPopulation(MongoDB.Driver.Linq.IMongoQueryable{System.Int32})">
            <summary>
            Computes the population standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationPopulation(MongoDB.Driver.Linq.IMongoQueryable{System.Nullable{System.Int32}})">
            <summary>
            Computes the population standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationPopulation(MongoDB.Driver.Linq.IMongoQueryable{System.Int64})">
            <summary>
            Computes the population standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationPopulation(MongoDB.Driver.Linq.IMongoQueryable{System.Nullable{System.Int64}})">
            <summary>
            Computes the population standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationPopulation(MongoDB.Driver.Linq.IMongoQueryable{System.Single})">
            <summary>
            Computes the population standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationPopulation(MongoDB.Driver.Linq.IMongoQueryable{System.Nullable{System.Single}})">
            <summary>
            Computes the population standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationPopulation(MongoDB.Driver.Linq.IMongoQueryable{System.Double})">
            <summary>
            Computes the population standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationPopulation(MongoDB.Driver.Linq.IMongoQueryable{System.Nullable{System.Double}})">
            <summary>
            Computes the population standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationPopulation(MongoDB.Driver.Linq.IMongoQueryable{System.Decimal})">
            <summary>
            Computes the population standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationPopulation(MongoDB.Driver.Linq.IMongoQueryable{System.Nullable{System.Decimal}})">
            <summary>
            Computes the population standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationPopulation``1(MongoDB.Driver.Linq.IMongoQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}})">
            <summary>
            Computes the population standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationPopulation``1(MongoDB.Driver.Linq.IMongoQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}})">
            <summary>
            Computes the population standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationPopulation``1(MongoDB.Driver.Linq.IMongoQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}})">
            <summary>
            Computes the population standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationPopulation``1(MongoDB.Driver.Linq.IMongoQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}})">
            <summary>
            Computes the population standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationPopulation``1(MongoDB.Driver.Linq.IMongoQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}})">
            <summary>
            Computes the population standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationPopulation``1(MongoDB.Driver.Linq.IMongoQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}})">
            <summary>
            Computes the population standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationPopulation``1(MongoDB.Driver.Linq.IMongoQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}})">
            <summary>
            Computes the population standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationPopulation``1(MongoDB.Driver.Linq.IMongoQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}})">
            <summary>
            Computes the population standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationPopulation``1(MongoDB.Driver.Linq.IMongoQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}})">
            <summary>
            Computes the population standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationPopulation``1(MongoDB.Driver.Linq.IMongoQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}})">
            <summary>
            Computes the population standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationPopulationAsync(MongoDB.Driver.Linq.IMongoQueryable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Computes the population standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationPopulationAsync(MongoDB.Driver.Linq.IMongoQueryable{System.Nullable{System.Int32}},System.Threading.CancellationToken)">
            <summary>
            Computes the population standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationPopulationAsync(MongoDB.Driver.Linq.IMongoQueryable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Computes the population standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationPopulationAsync(MongoDB.Driver.Linq.IMongoQueryable{System.Nullable{System.Int64}},System.Threading.CancellationToken)">
            <summary>
            Computes the population standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationPopulationAsync(MongoDB.Driver.Linq.IMongoQueryable{System.Single},System.Threading.CancellationToken)">
            <summary>
            Computes the population standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationPopulationAsync(MongoDB.Driver.Linq.IMongoQueryable{System.Nullable{System.Single}},System.Threading.CancellationToken)">
            <summary>
            Computes the population standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationPopulationAsync(MongoDB.Driver.Linq.IMongoQueryable{System.Double},System.Threading.CancellationToken)">
            <summary>
            Computes the population standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationPopulationAsync(MongoDB.Driver.Linq.IMongoQueryable{System.Nullable{System.Double}},System.Threading.CancellationToken)">
            <summary>
            Computes the population standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationPopulationAsync(MongoDB.Driver.Linq.IMongoQueryable{System.Decimal},System.Threading.CancellationToken)">
            <summary>
            Computes the population standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationPopulationAsync(MongoDB.Driver.Linq.IMongoQueryable{System.Nullable{System.Decimal}},System.Threading.CancellationToken)">
            <summary>
            Computes the population standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationPopulationAsync``1(MongoDB.Driver.Linq.IMongoQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}},System.Threading.CancellationToken)">
            <summary>
            Computes the population standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationPopulationAsync``1(MongoDB.Driver.Linq.IMongoQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}},System.Threading.CancellationToken)">
            <summary>
            Computes the population standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationPopulationAsync``1(MongoDB.Driver.Linq.IMongoQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}},System.Threading.CancellationToken)">
            <summary>
            Computes the population standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationPopulationAsync``1(MongoDB.Driver.Linq.IMongoQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}},System.Threading.CancellationToken)">
            <summary>
            Computes the population standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationPopulationAsync``1(MongoDB.Driver.Linq.IMongoQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}},System.Threading.CancellationToken)">
            <summary>
            Computes the population standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationPopulationAsync``1(MongoDB.Driver.Linq.IMongoQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}},System.Threading.CancellationToken)">
            <summary>
            Computes the population standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationPopulationAsync``1(MongoDB.Driver.Linq.IMongoQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}},System.Threading.CancellationToken)">
            <summary>
            Computes the population standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationPopulationAsync``1(MongoDB.Driver.Linq.IMongoQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}},System.Threading.CancellationToken)">
            <summary>
            Computes the population standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationPopulationAsync``1(MongoDB.Driver.Linq.IMongoQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}},System.Threading.CancellationToken)">
            <summary>
            Computes the population standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationPopulationAsync``1(MongoDB.Driver.Linq.IMongoQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}},System.Threading.CancellationToken)">
            <summary>
            Computes the population standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationSample(MongoDB.Driver.Linq.IMongoQueryable{System.Int32})">
            <summary>
            Computes the sample standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationSample(MongoDB.Driver.Linq.IMongoQueryable{System.Nullable{System.Int32}})">
            <summary>
            Computes the sample standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationSample(MongoDB.Driver.Linq.IMongoQueryable{System.Int64})">
            <summary>
            Computes the sample standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationSample(MongoDB.Driver.Linq.IMongoQueryable{System.Nullable{System.Int64}})">
            <summary>
            Computes the sample standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationSample(MongoDB.Driver.Linq.IMongoQueryable{System.Single})">
            <summary>
            Computes the sample standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationSample(MongoDB.Driver.Linq.IMongoQueryable{System.Nullable{System.Single}})">
            <summary>
            Computes the sample standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationSample(MongoDB.Driver.Linq.IMongoQueryable{System.Double})">
            <summary>
            Computes the sample standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationSample(MongoDB.Driver.Linq.IMongoQueryable{System.Nullable{System.Double}})">
            <summary>
            Computes the sample standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationSample(MongoDB.Driver.Linq.IMongoQueryable{System.Decimal})">
            <summary>
            Computes the sample standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationSample(MongoDB.Driver.Linq.IMongoQueryable{System.Nullable{System.Decimal}})">
            <summary>
            Computes the sample standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationSample``1(MongoDB.Driver.Linq.IMongoQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}})">
            <summary>
            Computes the sample standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationSample``1(MongoDB.Driver.Linq.IMongoQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}})">
            <summary>
            Computes the sample standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationSample``1(MongoDB.Driver.Linq.IMongoQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}})">
            <summary>
            Computes the sample standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationSample``1(MongoDB.Driver.Linq.IMongoQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}})">
            <summary>
            Computes the sample standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationSample``1(MongoDB.Driver.Linq.IMongoQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}})">
            <summary>
            Computes the sample standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationSample``1(MongoDB.Driver.Linq.IMongoQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}})">
            <summary>
            Computes the sample standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationSample``1(MongoDB.Driver.Linq.IMongoQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}})">
            <summary>
            Computes the sample standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationSample``1(MongoDB.Driver.Linq.IMongoQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}})">
            <summary>
            Computes the sample standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationSample``1(MongoDB.Driver.Linq.IMongoQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}})">
            <summary>
            Computes the sample standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationSample``1(MongoDB.Driver.Linq.IMongoQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}})">
            <summary>
            Computes the sample standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationSampleAsync(MongoDB.Driver.Linq.IMongoQueryable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Computes the sample standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationSampleAsync(MongoDB.Driver.Linq.IMongoQueryable{System.Nullable{System.Int32}},System.Threading.CancellationToken)">
            <summary>
            Computes the sample standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationSampleAsync(MongoDB.Driver.Linq.IMongoQueryable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Computes the sample standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationSampleAsync(MongoDB.Driver.Linq.IMongoQueryable{System.Nullable{System.Int64}},System.Threading.CancellationToken)">
            <summary>
            Computes the sample standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationSampleAsync(MongoDB.Driver.Linq.IMongoQueryable{System.Single},System.Threading.CancellationToken)">
            <summary>
            Computes the sample standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationSampleAsync(MongoDB.Driver.Linq.IMongoQueryable{System.Nullable{System.Single}},System.Threading.CancellationToken)">
            <summary>
            Computes the sample standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationSampleAsync(MongoDB.Driver.Linq.IMongoQueryable{System.Double},System.Threading.CancellationToken)">
            <summary>
            Computes the sample standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationSampleAsync(MongoDB.Driver.Linq.IMongoQueryable{System.Nullable{System.Double}},System.Threading.CancellationToken)">
            <summary>
            Computes the sample standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationSampleAsync(MongoDB.Driver.Linq.IMongoQueryable{System.Decimal},System.Threading.CancellationToken)">
            <summary>
            Computes the sample standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationSampleAsync(MongoDB.Driver.Linq.IMongoQueryable{System.Nullable{System.Decimal}},System.Threading.CancellationToken)">
            <summary>
            Computes the sample standard deviation of a sequence of values.
            </summary>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationSampleAsync``1(MongoDB.Driver.Linq.IMongoQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}},System.Threading.CancellationToken)">
            <summary>
            Computes the sample standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationSampleAsync``1(MongoDB.Driver.Linq.IMongoQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}},System.Threading.CancellationToken)">
            <summary>
            Computes the sample standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationSampleAsync``1(MongoDB.Driver.Linq.IMongoQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}},System.Threading.CancellationToken)">
            <summary>
            Computes the sample standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationSampleAsync``1(MongoDB.Driver.Linq.IMongoQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}},System.Threading.CancellationToken)">
            <summary>
            Computes the sample standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationSampleAsync``1(MongoDB.Driver.Linq.IMongoQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}},System.Threading.CancellationToken)">
            <summary>
            Computes the sample standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationSampleAsync``1(MongoDB.Driver.Linq.IMongoQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}},System.Threading.CancellationToken)">
            <summary>
            Computes the sample standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationSampleAsync``1(MongoDB.Driver.Linq.IMongoQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}},System.Threading.CancellationToken)">
            <summary>
            Computes the sample standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationSampleAsync``1(MongoDB.Driver.Linq.IMongoQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}},System.Threading.CancellationToken)">
            <summary>
            Computes the sample standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationSampleAsync``1(MongoDB.Driver.Linq.IMongoQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}},System.Threading.CancellationToken)">
            <summary>
            Computes the sample standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.StandardDeviationSampleAsync``1(MongoDB.Driver.Linq.IMongoQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}},System.Threading.CancellationToken)">
            <summary>
            Computes the sample standard deviation of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to calculate the population standard deviation of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The population standard deviation of the sequence of values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.SumAsync(MongoDB.Driver.Linq.IMongoQueryable{System.Decimal},System.Threading.CancellationToken)">
            <summary>
            Computes the sum of a sequence of <see cref="T:System.Decimal"/> values.
            </summary>
            <param name="source">A sequence of values to calculate the sum of.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The sum of the values in the sequence.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.SumAsync(MongoDB.Driver.Linq.IMongoQueryable{System.Nullable{System.Decimal}},System.Threading.CancellationToken)">
            <summary>
            Computes the sum of a sequence of <see cref="T:System.Nullable`1"/> values.
            </summary>
            <param name="source">A sequence of values to calculate the sum of.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The sum of the values in the sequence.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.SumAsync(MongoDB.Driver.Linq.IMongoQueryable{System.Double},System.Threading.CancellationToken)">
            <summary>
            Computes the sum of a sequence of <see cref="T:System.Double"/> values.
            </summary>
            <param name="source">A sequence of values to calculate the sum of.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The sum of the values in the sequence.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.SumAsync(MongoDB.Driver.Linq.IMongoQueryable{System.Nullable{System.Double}},System.Threading.CancellationToken)">
            <summary>
            Computes the sum of a sequence of <see cref="T:System.Nullable`1"/> values.
            </summary>
            <param name="source">A sequence of values to calculate the sum of.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The sum of the values in the sequence.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.SumAsync(MongoDB.Driver.Linq.IMongoQueryable{System.Single},System.Threading.CancellationToken)">
            <summary>
            Computes the sum of a sequence of <see cref="T:System.Single"/> values.
            </summary>
            <param name="source">A sequence of values to calculate the sum of.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The sum of the values in the sequence.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.SumAsync(MongoDB.Driver.Linq.IMongoQueryable{System.Nullable{System.Single}},System.Threading.CancellationToken)">
            <summary>
            Computes the sum of a sequence of <see cref="T:System.Nullable`1"/> values.
            </summary>
            <param name="source">A sequence of values to calculate the sum of.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The sum of the values in the sequence.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.SumAsync(MongoDB.Driver.Linq.IMongoQueryable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Computes the sum of a sequence of <see cref="T:System.Int32"/> values.
            </summary>
            <param name="source">A sequence of values to calculate the sum of.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The sum of the values in the sequence.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.SumAsync(MongoDB.Driver.Linq.IMongoQueryable{System.Nullable{System.Int32}},System.Threading.CancellationToken)">
            <summary>
            Computes the sum of a sequence of <see cref="T:System.Nullable`1"/> values.
            </summary>
            <param name="source">A sequence of values to calculate the sum of.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The sum of the values in the sequence.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.SumAsync(MongoDB.Driver.Linq.IMongoQueryable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Computes the sum of a sequence of <see cref="T:System.Int64"/> values.
            </summary>
            <param name="source">A sequence of values to calculate the sum of.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The sum of the values in the sequence.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.SumAsync(MongoDB.Driver.Linq.IMongoQueryable{System.Nullable{System.Int64}},System.Threading.CancellationToken)">
            <summary>
            Computes the sum of a sequence of <see cref="T:System.Nullable`1"/> values.
            </summary>
            <param name="source">A sequence of values to calculate the sum of.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The sum of the values in the sequence.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.SumAsync``1(MongoDB.Driver.Linq.IMongoQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}},System.Threading.CancellationToken)">
            <summary>
            Computes the sum of the sequence of <see cref="T:System.Decimal" /> values that is obtained
            by invoking a projection function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values.</param>
            <param name="selector">A projection function to apply to each element.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The sum of the projected values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.SumAsync``1(MongoDB.Driver.Linq.IMongoQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}},System.Threading.CancellationToken)">
            <summary>
            Computes the sum of the sequence of <see cref="T:System.Nullable`1" /> values that is obtained
            by invoking a projection function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values.</param>
            <param name="selector">A projection function to apply to each element.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The sum of the projected values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.SumAsync``1(MongoDB.Driver.Linq.IMongoQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}},System.Threading.CancellationToken)">
            <summary>
            Computes the sum of the sequence of <see cref="T:System.Double" /> values that is obtained
            by invoking a projection function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values.</param>
            <param name="selector">A projection function to apply to each element.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The sum of the projected values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.SumAsync``1(MongoDB.Driver.Linq.IMongoQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}},System.Threading.CancellationToken)">
            <summary>
            Computes the sum of the sequence of <see cref="T:System.Nullable`1" /> values that is obtained
            by invoking a projection function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values.</param>
            <param name="selector">A projection function to apply to each element.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The sum of the projected values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.SumAsync``1(MongoDB.Driver.Linq.IMongoQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}},System.Threading.CancellationToken)">
            <summary>
            Computes the sum of the sequence of <see cref="T:System.Single" /> values that is obtained
            by invoking a projection function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values.</param>
            <param name="selector">A projection function to apply to each element.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The sum of the projected values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.SumAsync``1(MongoDB.Driver.Linq.IMongoQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}},System.Threading.CancellationToken)">
            <summary>
            Computes the sum of the sequence of <see cref="T:System.Nullable`1" /> values that is obtained
            by invoking a projection function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values.</param>
            <param name="selector">A projection function to apply to each element.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The sum of the projected values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.SumAsync``1(MongoDB.Driver.Linq.IMongoQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}},System.Threading.CancellationToken)">
            <summary>
            Computes the sum of the sequence of <see cref="T:System.Int32" /> values that is obtained
            by invoking a projection function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values.</param>
            <param name="selector">A projection function to apply to each element.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The sum of the projected values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.SumAsync``1(MongoDB.Driver.Linq.IMongoQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}},System.Threading.CancellationToken)">
            <summary>
            Computes the sum of the sequence of <see cref="T:System.Nullable`1" /> values that is obtained
            by invoking a projection function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values.</param>
            <param name="selector">A projection function to apply to each element.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The sum of the projected values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.SumAsync``1(MongoDB.Driver.Linq.IMongoQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}},System.Threading.CancellationToken)">
            <summary>
            Computes the sum of the sequence of <see cref="T:System.Int64" /> values that is obtained
            by invoking a projection function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values.</param>
            <param name="selector">A projection function to apply to each element.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The sum of the projected values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.SumAsync``1(MongoDB.Driver.Linq.IMongoQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}},System.Threading.CancellationToken)">
            <summary>
            Computes the sum of the sequence of <see cref="T:System.Nullable`1" /> values that is obtained
            by invoking a projection function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values.</param>
            <param name="selector">A projection function to apply to each element.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The sum of the projected values.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.Take``1(MongoDB.Driver.Linq.IMongoQueryable{``0},System.Int32)">
            <summary>
            Returns a specified number of contiguous elements from the start of a sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">The sequence to return elements from.</param>
            <param name="count">The number of elements to return.</param>
            <returns>
            An <see cref="T:MongoDB.Driver.Linq.IMongoQueryable`1"/> that contains the specified number of elements
            from the start of source.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.ThenBy``2(MongoDB.Driver.Linq.IOrderedMongoQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            Performs a subsequent ordering of the elements in a sequence in ascending
            order according to a key.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <typeparam name="TKey">The type of the key returned by the function that is represented by keySelector.</typeparam>
            <param name="source">A sequence of values to order.</param>
            <param name="keySelector">A function to extract a key from an element.</param>
            <returns>
            An <see cref="T:MongoDB.Driver.Linq.IOrderedMongoQueryable`1"/> whose elements are sorted according to a key.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.ThenByDescending``2(MongoDB.Driver.Linq.IOrderedMongoQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            Performs a subsequent ordering of the elements in a sequence in descending
            order according to a key.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <typeparam name="TKey">The type of the key returned by the function that is represented by keySelector.</typeparam>
            <param name="source">A sequence of values to order.</param>
            <param name="keySelector">A function to extract a key from an element.</param>
            <returns>
            An <see cref="T:MongoDB.Driver.Linq.IOrderedMongoQueryable`1"/> whose elements are sorted in descending order according to a key.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable.Where``1(MongoDB.Driver.Linq.IMongoQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            Filters a sequence of values based on a predicate.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">An <see cref="T:MongoDB.Driver.Linq.IMongoQueryable`1"/> to return elements from.</param>
            <param name="predicate">A function to test each element for a condition.</param>
            <returns>
            An <see cref="T:MongoDB.Driver.Linq.IMongoQueryable`1"/> that contains elements from the input sequence
            that satisfy the condition specified by predicate.
            </returns>
        </member>
        <member name="T:MongoDB.Driver.Linq.Processors.OutOfCurrentScopePrefixCollector">
            <summary>
            The expression visitor to collect all expression fields which have been defined out of the current scope.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Linq.Processors.OutOfCurrentScopePrefixCollector.Collect(System.Linq.Expressions.Expression)">
            <summary>
            Collects the list of expression fields which have been defined out of the current scope.
            </summary>
            <param name="expression">The expression.</param>
            <returns>The result collection.</returns>
        </member>
        <member name="T:MongoDB.Driver.Linq.Processors.Transformers.ConstantOnRightTransformer">
            <remarks>
            MongoDB only supports constants on the RHS for certain expressions, so we'll move them around
            to make it easier to generate MongoDB syntax.
            </remarks>
        </member>
        <member name="T:MongoDB.Driver.Linq.Processors.Transformers.VBCoalesceTransformer">
            <remarks>
            VB creates coalescing operations when dealing with nullable value comparisons, so we try and make this look like C#
            </remarks>
        </member>
        <member name="T:MongoDB.Driver.Linq.Processors.Transformers.VBCompareStringTransformer">
            <remarks>
            VB uses a method for string comparisons, so we'll convert this into a BinaryExpression.
            </remarks>
        </member>
        <member name="T:MongoDB.Driver.Linq.Processors.Transformers.VBInformationIsNothingTransformer">
            <remarks>
            VB creates an IsNothing comparison using a method call. We'll translate this to a simple
            null comparison.
            </remarks>
        </member>
        <member name="T:MongoDB.Driver.Linq.Processors.Transformers.VBNothingConversionRemovalTransformer">
            <remarks>
            VB introduces a Convert on the LHS with a Nothing comparison, so we make it look like 
            C# which does not have one with a comparison to null.
            </remarks>
        </member>
        <member name="T:MongoDB.Driver.Linq.Processors.Transformers.VBStringIndexComparisonTransformer">
            <remarks>
            VB creates string index expressions using character comparison whereas C# uses ascii value comparison
            we make VB's string index comparison look like C#.
            </remarks>
        </member>
        <member name="T:MongoDB.Driver.Linq.QueryableExecutionModel">
            <summary>
            An execution model.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Linq.QueryableExecutionModel.OutputType">
            <summary>
            Gets the type of the output.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Linq.Translators.FindProjectionTranslator.ProjectedObjectFieldReplacer">
            <summary>
            This guy is going to replace calls like store.GetValue("d.y") with nestedStore.GetValue("y").
            </summary>
        </member>
        <member name="T:MongoDB.Driver.ListCollectionNamesOptions">
            <summary>
            Options for a list collection names operation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ListCollectionNamesOptions.Filter">
            <summary>
            Gets or sets the filter.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.ListCollectionsOptions">
            <summary>
            Options for a list collections operation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ListCollectionsOptions.Filter">
            <summary>
            Gets or sets the filter.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.ListDatabasesOptions">
            <summary>
            Options for a list databases operation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ListDatabasesOptions.Filter">
            <summary>
            Gets or sets the filter.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ListDatabasesOptions.NameOnly">
            <summary>
            Gets or sets the NameOnly flag.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.MapReduceOptions`2">
            <summary>
            Represents the options for a map-reduce operation.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TResult">The type of the result.</typeparam>
        </member>
        <member name="P:MongoDB.Driver.MapReduceOptions`2.BypassDocumentValidation">
            <summary>
            Gets or sets a value indicating whether to bypass document validation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MapReduceOptions`2.Collation">
            <summary>
            Gets or sets the collation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MapReduceOptions`2.Filter">
            <summary>
            Gets or sets the filter.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MapReduceOptions`2.Finalize">
            <summary>
            Gets or sets the finalize function.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MapReduceOptions`2.JavaScriptMode">
            <summary>
            Gets or sets the java script mode.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MapReduceOptions`2.Limit">
            <summary>
            Gets or sets the limit.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MapReduceOptions`2.MaxTime">
            <summary>
            Gets or sets the maximum time.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MapReduceOptions`2.OutputOptions">
            <summary>
            Gets or sets the output options.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MapReduceOptions`2.ResultSerializer">
            <summary>
            Gets or sets the result serializer.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MapReduceOptions`2.Scope">
            <summary>
            Gets or sets the scope.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MapReduceOptions`2.Sort">
            <summary>
            Gets or sets the sort.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MapReduceOptions`2.Verbose">
            <summary>
            Gets or sets whether to include timing information.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.MapReduceOutputOptions">
            <summary>
            Represents the output options for a map-reduce operation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MapReduceOutputOptions.Inline">
            <summary>
            An inline map-reduce output options.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MapReduceOutputOptions.Merge(System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            A merge map-reduce output options.
            </summary>
            <param name="collectionName">The name of the collection.</param>
            <param name="databaseName">The name of the database.</param>
            <param name="sharded">Whether the output collection should be sharded.</param>
            <param name="nonAtomic">Whether the server should not lock the database for the duration of the merge.</param>
            <returns>A merge map-reduce output options.</returns>
        </member>
        <member name="M:MongoDB.Driver.MapReduceOutputOptions.Reduce(System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            A reduce map-reduce output options.
            </summary>
            <param name="collectionName">The name of the collection.</param>
            <param name="databaseName">The name of the database.</param>
            <param name="sharded">Whether the output collection should be sharded.</param>
            <param name="nonAtomic">Whether the server should not lock the database for the duration of the reduce.</param>
            <returns>A reduce map-reduce output options.</returns>
        </member>
        <member name="M:MongoDB.Driver.MapReduceOutputOptions.Replace(System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            A replace map-reduce output options.
            </summary>
            <param name="collectionName">The name of the collection.</param>
            <param name="databaseName">Name of the database.</param>
            <param name="sharded">Whether the output collection should be sharded.</param>
            <returns>A replace map-reduce output options.</returns>
        </member>
        <member name="T:MongoDB.Driver.MergeStageWhenMatched">
            <summary>
            The behavior of $merge is a result document and an existing document in the collection
            have the same value for the specified on field(s).
            </summary>
        </member>
        <member name="F:MongoDB.Driver.MergeStageWhenMatched.Replace">
            <summary>
            Replace the existing document in the output collection with the matching results document.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.MergeStageWhenMatched.KeepExisting">
            <summary>
            Keep the existing document in the output collection.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.MergeStageWhenMatched.Merge">
            <summary>
            Merge the matching documents (similar to the $mergeObjects operator).
            </summary>
        </member>
        <member name="F:MongoDB.Driver.MergeStageWhenMatched.Fail">
            <summary>
            Stop and fail the aggregation. Any changes to the output collection from previous documents are not reverted.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.MergeStageWhenMatched.Pipeline">
            <summary>
            Use an aggregation pipeline to update the document in the collection.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.MergeStageWhenNotMatched">
            <summary>
            The behavior of $merge if a result document does not match an existing document in the output collection.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.MergeStageWhenNotMatched.Insert">
            <summary>
            Insert the document into the output collection.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.MergeStageWhenNotMatched.Discard">
            <summary>
            Discard the document; i.e. $merge does not insert the document into the output collection.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.MergeStageWhenNotMatched.Fail">
            <summary>
            Stop and fail the aggregation operation. Any changes to the output collection from previous documents are not reverted.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.MergeStageOptions`1">
            <summary>
            Options for the $merge aggregation pipeline stage.
            </summary>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
        </member>
        <member name="P:MongoDB.Driver.MergeStageOptions`1.LetVariables">
            <summary>
            Specifies variables accessible for use in the WhenMatchedPipeline.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MergeStageOptions`1.OnFieldNames">
            <summary>
            Field or fields that act as a unique identifier for a document. The identifier determines if a results
            document matches an already existing document in the output collection.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MergeStageOptions`1.OutputSerializer">
            <summary>
            The output serializer.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MergeStageOptions`1.WhenMatched">
            <summary>
            The behavior of $merge if a result document and an existing document in the collectoin have the
            same value for the specified on field(s).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MergeStageOptions`1.WhenMatchedPipeline">
            <summary>
            An aggregation pipeline to update the document in the collection.
            Used when WhenMatched is Pipeline.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MergeStageOptions`1.WhenNotMatched">
            <summary>
            The behavior of $merge if a result document does not match an existing document in the output collection.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.MongoBulkWriteException">
            <summary>
            Represents a bulk write exception.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoBulkWriteException.#ctor(MongoDB.Driver.Core.Connections.ConnectionId,System.Collections.Generic.IEnumerable{MongoDB.Driver.BulkWriteError},MongoDB.Driver.WriteConcernError)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoBulkWriteException" /> class.
            </summary>
            <param name="connectionId">The connection identifier.</param>
            <param name="writeErrors">The write errors.</param>
            <param name="writeConcernError">The write concern error.</param>
        </member>
        <member name="P:MongoDB.Driver.MongoBulkWriteException.WriteConcernError">
            <summary>
            Gets the write concern error.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoBulkWriteException.WriteErrors">
            <summary>
            Gets the write errors.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.MongoBulkWriteException`1">
            <summary>
            Represents a bulk write exception.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.MongoBulkWriteException`1.#ctor(MongoDB.Driver.Core.Connections.ConnectionId,MongoDB.Driver.BulkWriteResult{`0},System.Collections.Generic.IEnumerable{MongoDB.Driver.BulkWriteError},MongoDB.Driver.WriteConcernError,System.Collections.Generic.IEnumerable{MongoDB.Driver.WriteModel{`0}})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoBulkWriteException" /> class.
            </summary>
            <param name="connectionId">The connection identifier.</param>
            <param name="result">The result.</param>
            <param name="writeErrors">The write errors.</param>
            <param name="writeConcernError">The write concern error.</param>
            <param name="unprocessedRequests">The unprocessed requests.</param>
        </member>
        <member name="P:MongoDB.Driver.MongoBulkWriteException`1.Result">
            <summary>
            Gets the result of the bulk write operation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoBulkWriteException`1.UnprocessedRequests">
            <summary>
            Gets the unprocessed requests.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.MongoClient">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.MongoClient.#ctor">
            <summary>
            Initializes a new instance of the MongoClient class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoClient.#ctor(MongoDB.Driver.MongoClientSettings)">
            <summary>
            Initializes a new instance of the MongoClient class.
            In .NET Standard, authenticating via SCRAM-SHA-256 may not work with non-ASCII passwords because SaslPrep is
            not fully implemented due to the lack of a string normalization function in .NET Standard 1.5.
            Normalizing the password into Unicode Normalization Form KC beforehand MAY help.
            SCRAM-SHA-1 is the recommended alternative for now.
            </summary>
            <param name="settings">The settings.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoClient.#ctor(MongoDB.Driver.MongoUrl)">
            <summary>
            Initializes a new instance of the MongoClient class.
            In .NET Standard, authenticating via SCRAM-SHA-256 may not work with non-ASCII passwords because SaslPrep is
            not fully implemented due to the lack of a string normalization function in .NET Standard 1.5.
            Normalizing the password into Unicode Normalization Form KC beforehand MAY help.
            SCRAM-SHA-1 is the recommended alternative for now.
            </summary>
            <param name="url">The URL.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoClient.#ctor(System.String)">
            <summary>
            Initializes a new instance of the MongoClient class.
            In .NET Standard, authenticating via SCRAM-SHA-256 may not work with non-ASCII passwords because SaslPrep is
            not fully implemented due to the lack of a string normalization function in .NET Standard 1.5.
            Normalizing the password into Unicode Normalization Form KC beforehand MAY help.
            SCRAM-SHA-1 is the recommended alternative for now.
            </summary>
            <param name="connectionString">The connection string.</param>
        </member>
        <member name="P:MongoDB.Driver.MongoClient.Cluster">
            <summary>
            Gets the cluster.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClient.Settings">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.MongoClient.DropDatabase(System.String,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.MongoClient.DropDatabase(MongoDB.Driver.IClientSessionHandle,System.String,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.MongoClient.DropDatabaseAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.MongoClient.DropDatabaseAsync(MongoDB.Driver.IClientSessionHandle,System.String,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.MongoClient.GetDatabase(System.String,MongoDB.Driver.MongoDatabaseSettings)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.MongoClient.ListDatabaseNames(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoClient.ListDatabaseNames(MongoDB.Driver.IClientSessionHandle,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoClient.ListDatabaseNamesAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoClient.ListDatabaseNamesAsync(MongoDB.Driver.IClientSessionHandle,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoClient.ListDatabases(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.MongoClient.ListDatabases(MongoDB.Driver.ListDatabasesOptions,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.MongoClient.ListDatabases(MongoDB.Driver.IClientSessionHandle,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.MongoClient.ListDatabases(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.ListDatabasesOptions,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.MongoClient.ListDatabasesAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.MongoClient.ListDatabasesAsync(MongoDB.Driver.ListDatabasesOptions,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.MongoClient.ListDatabasesAsync(MongoDB.Driver.IClientSessionHandle,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.MongoClient.ListDatabasesAsync(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.ListDatabasesOptions,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.MongoClient.StartImplicitSession(System.Threading.CancellationToken)">
            <summary>
            Starts an implicit session.
            </summary>
            <returns>A session.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoClient.StartImplicitSessionAsync(System.Threading.CancellationToken)">
            <summary>
            Starts an implicit session.
            </summary>
            <returns>A Task whose result is a session.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoClient.StartSession(MongoDB.Driver.ClientSessionOptions,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.MongoClient.StartSessionAsync(MongoDB.Driver.ClientSessionOptions,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.MongoClient.Watch``1(MongoDB.Driver.PipelineDefinition{MongoDB.Driver.ChangeStreamDocument{MongoDB.Bson.BsonDocument},``0},MongoDB.Driver.ChangeStreamOptions,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.MongoClient.Watch``1(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.PipelineDefinition{MongoDB.Driver.ChangeStreamDocument{MongoDB.Bson.BsonDocument},``0},MongoDB.Driver.ChangeStreamOptions,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.MongoClient.WatchAsync``1(MongoDB.Driver.PipelineDefinition{MongoDB.Driver.ChangeStreamDocument{MongoDB.Bson.BsonDocument},``0},MongoDB.Driver.ChangeStreamOptions,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.MongoClient.WatchAsync``1(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.PipelineDefinition{MongoDB.Driver.ChangeStreamDocument{MongoDB.Bson.BsonDocument},``0},MongoDB.Driver.ChangeStreamOptions,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.MongoClient.WithReadConcern(MongoDB.Driver.ReadConcern)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.MongoClient.WithReadPreference(MongoDB.Driver.ReadPreference)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.MongoClient.WithWriteConcern(MongoDB.Driver.WriteConcern)">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.MongoClientBase">
            <summary>
            Base class for implementors of <see cref="T:MongoDB.Driver.IMongoClient"/>.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientBase.Cluster">
            <inheritdoc />
        </member>
        <member name="P:MongoDB.Driver.MongoClientBase.Settings">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoClientBase.DropDatabase(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoClientBase.DropDatabase(MongoDB.Driver.IClientSessionHandle,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoClientBase.DropDatabaseAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoClientBase.DropDatabaseAsync(MongoDB.Driver.IClientSessionHandle,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoClientBase.GetDatabase(System.String,MongoDB.Driver.MongoDatabaseSettings)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoClientBase.ListDatabaseNames(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoClientBase.ListDatabaseNames(MongoDB.Driver.IClientSessionHandle,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoClientBase.ListDatabaseNamesAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoClientBase.ListDatabaseNamesAsync(MongoDB.Driver.IClientSessionHandle,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoClientBase.ListDatabases(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoClientBase.ListDatabases(MongoDB.Driver.ListDatabasesOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoClientBase.ListDatabases(MongoDB.Driver.IClientSessionHandle,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoClientBase.ListDatabases(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.ListDatabasesOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoClientBase.ListDatabasesAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoClientBase.ListDatabasesAsync(MongoDB.Driver.ListDatabasesOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoClientBase.ListDatabasesAsync(MongoDB.Driver.IClientSessionHandle,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoClientBase.ListDatabasesAsync(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.ListDatabasesOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoClientBase.StartSession(MongoDB.Driver.ClientSessionOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoClientBase.StartSessionAsync(MongoDB.Driver.ClientSessionOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoClientBase.Watch``1(MongoDB.Driver.PipelineDefinition{MongoDB.Driver.ChangeStreamDocument{MongoDB.Bson.BsonDocument},``0},MongoDB.Driver.ChangeStreamOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoClientBase.Watch``1(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.PipelineDefinition{MongoDB.Driver.ChangeStreamDocument{MongoDB.Bson.BsonDocument},``0},MongoDB.Driver.ChangeStreamOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoClientBase.WatchAsync``1(MongoDB.Driver.PipelineDefinition{MongoDB.Driver.ChangeStreamDocument{MongoDB.Bson.BsonDocument},``0},MongoDB.Driver.ChangeStreamOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoClientBase.WatchAsync``1(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.PipelineDefinition{MongoDB.Driver.ChangeStreamDocument{MongoDB.Bson.BsonDocument},``0},MongoDB.Driver.ChangeStreamOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoClientBase.WithReadConcern(MongoDB.Driver.ReadConcern)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoClientBase.WithReadPreference(MongoDB.Driver.ReadPreference)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoClientBase.WithWriteConcern(MongoDB.Driver.WriteConcern)">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.MongoClientSettings">
            <summary>
            The settings for a MongoDB client.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoClientSettings.#ctor">
            <summary>
            Creates a new instance of MongoClientSettings. Usually you would use a connection string instead.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.AllowInsecureTls">
            <summary>
            Gets or sets whether to relax TLS constraints as much as possible.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.ApplicationName">
            <summary>
            Gets or sets the application name.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.AutoEncryptionOptions">
            <summary>
            Gets or sets the auto encryption options.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.Compressors">
            <summary>
            Gets or sets the compressors.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.ClusterConfigurator">
            <summary>
            Gets or sets the cluster configurator.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.ConnectionMode">
            <summary>
            Gets or sets the connection mode.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.ConnectTimeout">
            <summary>
            Gets or sets the connect timeout.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.Credential">
            <summary>
            Gets or sets the credential.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.Credentials">
            <summary>
            Gets or sets the credentials.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.GuidRepresentation">
            <summary>
            Gets or sets the representation to use for Guids.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.IsFrozen">
            <summary>
            Gets a value indicating whether the settings have been frozen to prevent further changes.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.HeartbeatInterval">
            <summary>
            Gets or sets the heartbeat interval.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.HeartbeatTimeout">
            <summary>
            Gets or sets the heartbeat timeout.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.IPv6">
            <summary>
            Gets or sets a value indicating whether to use IPv6.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.LocalThreshold">
            <summary>
            Gets or sets the local threshold.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.MaxConnectionIdleTime">
            <summary>
            Gets or sets the max connection idle time.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.MaxConnectionLifeTime">
            <summary>
            Gets or sets the max connection life time.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.MaxConnectionPoolSize">
            <summary>
            Gets or sets the max connection pool size.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.MinConnectionPoolSize">
            <summary>
            Gets or sets the min connection pool size.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.ReadConcern">
            <summary>
            Gets or sets the read concern.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.ReadEncoding">
            <summary>
            Gets or sets the Read Encoding.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.ReadPreference">
            <summary>
            Gets or sets the read preferences.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.ReplicaSetName">
            <summary>
            Gets or sets the name of the replica set.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.RetryReads">
            <summary>
            Gets or sets whether to retry reads.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.RetryWrites">
            <summary>
            Gets or sets whether to retry writes.
            </summary>
            <value>
            The default value is <c>true</c>.
            </value>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.Scheme">
            <summary>
            Gets or sets the connection string scheme.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.SdamLogFilename">
            <summary>
            Gets or set the name of the SDAM log file. Null turns logging off. stdout will log to console.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.Server">
            <summary>
            Gets or sets the address of the server (see also Servers if using more than one address).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.Servers">
            <summary>
            Gets or sets the list of server addresses (see also Server if using only one address).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.ServerSelectionTimeout">
            <summary>
            Gets or sets the server selection timeout.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.SocketTimeout">
            <summary>
            Gets or sets the socket timeout.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.SslSettings">
            <summary>
            Gets or sets the SSL settings.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.UseSsl">
            <summary>
            Gets or sets a value indicating whether to use SSL.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.UseTls">
            <summary>
            Gets or sets a value indicating whether to use TLS.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.VerifySslCertificate">
            <summary>
            Gets or sets a value indicating whether to verify an SSL certificate.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.WaitQueueSize">
            <summary>
            Gets or sets the wait queue size.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.WaitQueueTimeout">
            <summary>
            Gets or sets the wait queue timeout.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.WriteConcern">
            <summary>
            Gets or sets the WriteConcern to use.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.WriteEncoding">
            <summary>
            Gets or sets the Write Encoding.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoClientSettings.op_Equality(MongoDB.Driver.MongoClientSettings,MongoDB.Driver.MongoClientSettings)">
            <summary>
            Determines whether two <see cref="T:MongoDB.Driver.MongoClientSettings"/> instances are equal.
            </summary>
            <param name="lhs">The LHS.</param>
            <param name="rhs">The RHS.</param>
            <returns>
              <c>true</c> if the left hand side is equal to the right hand side; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.MongoClientSettings.op_Inequality(MongoDB.Driver.MongoClientSettings,MongoDB.Driver.MongoClientSettings)">
            <summary>
            Determines whether two <see cref="T:MongoDB.Driver.MongoClientSettings"/> instances are not equal.
            </summary>
            <param name="lhs">The LHS.</param>
            <param name="rhs">The RHS.</param>
            <returns>
              <c>true</c> if the left hand side is not equal to the right hand side; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.MongoClientSettings.FromConnectionString(System.String)">
            <summary>
            Gets a MongoClientSettings object intialized with values from a connection string.
            </summary>
            <param name="connectionString">The connection string.</param>
            <returns>A MongoClientSettings.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoClientSettings.FromUrl(MongoDB.Driver.MongoUrl)">
            <summary>
            Gets a MongoClientSettings object intialized with values from a MongoURL.
            </summary>
            <param name="url">The MongoURL.</param>
            <returns>A MongoClientSettings.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoClientSettings.Clone">
            <summary>
            Creates a clone of the settings.
            </summary>
            <returns>A clone of the settings.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoClientSettings.Equals(MongoDB.Driver.MongoClientSettings)">
            <summary>
            Determines whether the specified <see cref="T:MongoDB.Driver.MongoClientSettings" /> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:MongoDB.Driver.MongoClientSettings" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:MongoDB.Driver.MongoClientSettings" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.MongoClientSettings.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.MongoClientSettings.Freeze">
            <summary>
            Freezes the settings.
            </summary>
            <returns>The frozen settings.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoClientSettings.FrozenCopy">
            <summary>
            Returns a frozen copy of the settings.
            </summary>
            <returns>A frozen copy of the settings.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoClientSettings.GetHashCode">
            <summary>
            Gets the hash code.
            </summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoClientSettings.ToString">
            <summary>
            Returns a string representation of the settings.
            </summary>
            <returns>A string representation of the settings.</returns>
        </member>
        <member name="T:MongoDB.Driver.MongoCollectionBase`1">
            <summary>
            Base class for implementors of <see cref="T:MongoDB.Driver.IMongoCollection`1"/>.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="P:MongoDB.Driver.MongoCollectionBase`1.CollectionNamespace">
            <inheritdoc />
        </member>
        <member name="P:MongoDB.Driver.MongoCollectionBase`1.Database">
            <inheritdoc />
        </member>
        <member name="P:MongoDB.Driver.MongoCollectionBase`1.DocumentSerializer">
            <inheritdoc />
        </member>
        <member name="P:MongoDB.Driver.MongoCollectionBase`1.Indexes">
            <inheritdoc />
        </member>
        <member name="P:MongoDB.Driver.MongoCollectionBase`1.Settings">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionBase`1.Aggregate``1(MongoDB.Driver.PipelineDefinition{`0,``0},MongoDB.Driver.AggregateOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionBase`1.Aggregate``1(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.PipelineDefinition{`0,``0},MongoDB.Driver.AggregateOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionBase`1.AggregateAsync``1(MongoDB.Driver.PipelineDefinition{`0,``0},MongoDB.Driver.AggregateOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionBase`1.AggregateAsync``1(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.PipelineDefinition{`0,``0},MongoDB.Driver.AggregateOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionBase`1.BulkWrite(System.Collections.Generic.IEnumerable{MongoDB.Driver.WriteModel{`0}},MongoDB.Driver.BulkWriteOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionBase`1.BulkWrite(MongoDB.Driver.IClientSessionHandle,System.Collections.Generic.IEnumerable{MongoDB.Driver.WriteModel{`0}},MongoDB.Driver.BulkWriteOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionBase`1.BulkWriteAsync(System.Collections.Generic.IEnumerable{MongoDB.Driver.WriteModel{`0}},MongoDB.Driver.BulkWriteOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionBase`1.BulkWriteAsync(MongoDB.Driver.IClientSessionHandle,System.Collections.Generic.IEnumerable{MongoDB.Driver.WriteModel{`0}},MongoDB.Driver.BulkWriteOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionBase`1.Count(MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.CountOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionBase`1.Count(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.CountOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionBase`1.CountAsync(MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.CountOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionBase`1.CountAsync(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.CountOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionBase`1.CountDocuments(MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.CountOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionBase`1.CountDocuments(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.CountOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionBase`1.CountDocumentsAsync(MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.CountOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionBase`1.CountDocumentsAsync(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.CountOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionBase`1.DeleteMany(MongoDB.Driver.FilterDefinition{`0},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionBase`1.DeleteMany(MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.DeleteOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionBase`1.DeleteMany(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.DeleteOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionBase`1.DeleteManyAsync(MongoDB.Driver.FilterDefinition{`0},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionBase`1.DeleteManyAsync(MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.DeleteOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionBase`1.DeleteManyAsync(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.DeleteOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionBase`1.DeleteOne(MongoDB.Driver.FilterDefinition{`0},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionBase`1.DeleteOne(MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.DeleteOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionBase`1.DeleteOne(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.DeleteOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionBase`1.DeleteOneAsync(MongoDB.Driver.FilterDefinition{`0},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionBase`1.DeleteOneAsync(MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.DeleteOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionBase`1.DeleteOneAsync(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.DeleteOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionBase`1.Distinct``1(MongoDB.Driver.FieldDefinition{`0,``0},MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.DistinctOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionBase`1.Distinct``1(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FieldDefinition{`0,``0},MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.DistinctOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionBase`1.DistinctAsync``1(MongoDB.Driver.FieldDefinition{`0,``0},MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.DistinctOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionBase`1.DistinctAsync``1(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FieldDefinition{`0,``0},MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.DistinctOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionBase`1.EstimatedDocumentCount(MongoDB.Driver.EstimatedDocumentCountOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionBase`1.EstimatedDocumentCountAsync(MongoDB.Driver.EstimatedDocumentCountOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionBase`1.FindSync``1(MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.FindOptions{`0,``0},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionBase`1.FindSync``1(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.FindOptions{`0,``0},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionBase`1.FindAsync``1(MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.FindOptions{`0,``0},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionBase`1.FindAsync``1(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.FindOptions{`0,``0},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionBase`1.FindOneAndDelete``1(MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.FindOneAndDeleteOptions{`0,``0},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionBase`1.FindOneAndDelete``1(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.FindOneAndDeleteOptions{`0,``0},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionBase`1.FindOneAndDeleteAsync``1(MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.FindOneAndDeleteOptions{`0,``0},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionBase`1.FindOneAndDeleteAsync``1(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.FindOneAndDeleteOptions{`0,``0},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionBase`1.FindOneAndReplace``1(MongoDB.Driver.FilterDefinition{`0},`0,MongoDB.Driver.FindOneAndReplaceOptions{`0,``0},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionBase`1.FindOneAndReplace``1(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FilterDefinition{`0},`0,MongoDB.Driver.FindOneAndReplaceOptions{`0,``0},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionBase`1.FindOneAndReplaceAsync``1(MongoDB.Driver.FilterDefinition{`0},`0,MongoDB.Driver.FindOneAndReplaceOptions{`0,``0},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionBase`1.FindOneAndReplaceAsync``1(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FilterDefinition{`0},`0,MongoDB.Driver.FindOneAndReplaceOptions{`0,``0},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionBase`1.FindOneAndUpdate``1(MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.UpdateDefinition{`0},MongoDB.Driver.FindOneAndUpdateOptions{`0,``0},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionBase`1.FindOneAndUpdate``1(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.UpdateDefinition{`0},MongoDB.Driver.FindOneAndUpdateOptions{`0,``0},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionBase`1.FindOneAndUpdateAsync``1(MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.UpdateDefinition{`0},MongoDB.Driver.FindOneAndUpdateOptions{`0,``0},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionBase`1.FindOneAndUpdateAsync``1(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.UpdateDefinition{`0},MongoDB.Driver.FindOneAndUpdateOptions{`0,``0},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionBase`1.InsertOne(`0,MongoDB.Driver.InsertOneOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionBase`1.InsertOne(MongoDB.Driver.IClientSessionHandle,`0,MongoDB.Driver.InsertOneOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionBase`1.InsertOneAsync(`0,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionBase`1.InsertOneAsync(`0,MongoDB.Driver.InsertOneOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionBase`1.InsertOneAsync(MongoDB.Driver.IClientSessionHandle,`0,MongoDB.Driver.InsertOneOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionBase`1.InsertMany(System.Collections.Generic.IEnumerable{`0},MongoDB.Driver.InsertManyOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionBase`1.InsertMany(MongoDB.Driver.IClientSessionHandle,System.Collections.Generic.IEnumerable{`0},MongoDB.Driver.InsertManyOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionBase`1.InsertManyAsync(System.Collections.Generic.IEnumerable{`0},MongoDB.Driver.InsertManyOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionBase`1.InsertManyAsync(MongoDB.Driver.IClientSessionHandle,System.Collections.Generic.IEnumerable{`0},MongoDB.Driver.InsertManyOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionBase`1.MapReduce``1(MongoDB.Bson.BsonJavaScript,MongoDB.Bson.BsonJavaScript,MongoDB.Driver.MapReduceOptions{`0,``0},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionBase`1.MapReduce``1(MongoDB.Driver.IClientSessionHandle,MongoDB.Bson.BsonJavaScript,MongoDB.Bson.BsonJavaScript,MongoDB.Driver.MapReduceOptions{`0,``0},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionBase`1.MapReduceAsync``1(MongoDB.Bson.BsonJavaScript,MongoDB.Bson.BsonJavaScript,MongoDB.Driver.MapReduceOptions{`0,``0},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionBase`1.MapReduceAsync``1(MongoDB.Driver.IClientSessionHandle,MongoDB.Bson.BsonJavaScript,MongoDB.Bson.BsonJavaScript,MongoDB.Driver.MapReduceOptions{`0,``0},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionBase`1.OfType``1">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionBase`1.ReplaceOne(MongoDB.Driver.FilterDefinition{`0},`0,MongoDB.Driver.ReplaceOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionBase`1.ReplaceOne(MongoDB.Driver.FilterDefinition{`0},`0,MongoDB.Driver.UpdateOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionBase`1.ReplaceOne(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FilterDefinition{`0},`0,MongoDB.Driver.ReplaceOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionBase`1.ReplaceOne(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FilterDefinition{`0},`0,MongoDB.Driver.UpdateOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionBase`1.ReplaceOneAsync(MongoDB.Driver.FilterDefinition{`0},`0,MongoDB.Driver.ReplaceOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionBase`1.ReplaceOneAsync(MongoDB.Driver.FilterDefinition{`0},`0,MongoDB.Driver.UpdateOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionBase`1.ReplaceOneAsync(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FilterDefinition{`0},`0,MongoDB.Driver.ReplaceOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionBase`1.ReplaceOneAsync(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FilterDefinition{`0},`0,MongoDB.Driver.UpdateOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionBase`1.UpdateMany(MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.UpdateDefinition{`0},MongoDB.Driver.UpdateOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionBase`1.UpdateMany(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.UpdateDefinition{`0},MongoDB.Driver.UpdateOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionBase`1.UpdateManyAsync(MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.UpdateDefinition{`0},MongoDB.Driver.UpdateOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionBase`1.UpdateManyAsync(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.UpdateDefinition{`0},MongoDB.Driver.UpdateOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionBase`1.UpdateOne(MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.UpdateDefinition{`0},MongoDB.Driver.UpdateOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionBase`1.UpdateOne(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.UpdateDefinition{`0},MongoDB.Driver.UpdateOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionBase`1.UpdateOneAsync(MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.UpdateDefinition{`0},MongoDB.Driver.UpdateOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionBase`1.UpdateOneAsync(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.UpdateDefinition{`0},MongoDB.Driver.UpdateOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionBase`1.Watch``1(MongoDB.Driver.PipelineDefinition{MongoDB.Driver.ChangeStreamDocument{`0},``0},MongoDB.Driver.ChangeStreamOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionBase`1.Watch``1(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.PipelineDefinition{MongoDB.Driver.ChangeStreamDocument{`0},``0},MongoDB.Driver.ChangeStreamOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionBase`1.WatchAsync``1(MongoDB.Driver.PipelineDefinition{MongoDB.Driver.ChangeStreamDocument{`0},``0},MongoDB.Driver.ChangeStreamOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionBase`1.WatchAsync``1(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.PipelineDefinition{MongoDB.Driver.ChangeStreamDocument{`0},``0},MongoDB.Driver.ChangeStreamOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionBase`1.WithReadConcern(MongoDB.Driver.ReadConcern)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionBase`1.WithReadPreference(MongoDB.Driver.ReadPreference)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionBase`1.WithWriteConcern(MongoDB.Driver.WriteConcern)">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.MongoCollectionSettings">
            <summary>
            The settings used to access a collection.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionSettings.#ctor">
            <summary>
            Initializes a new instance of the MongoCollectionSettings class.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoCollectionSettings.AssignIdOnInsert">
            <summary>
            Gets or sets a value indicating whether the driver should assign Id values when missing.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoCollectionSettings.GuidRepresentation">
            <summary>
            Gets or sets the representation used for Guids.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoCollectionSettings.IsFrozen">
            <summary>
            Gets a value indicating whether the settings have been frozen to prevent further changes.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoCollectionSettings.ReadConcern">
            <summary>
            Gets or sets the read concern.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoCollectionSettings.ReadEncoding">
            <summary>
            Gets or sets the Read Encoding.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoCollectionSettings.ReadPreference">
            <summary>
            Gets or sets the read preference to use.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoCollectionSettings.SerializerRegistry">
            <summary>
            Gets the serializer registry.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoCollectionSettings.WriteConcern">
            <summary>
            Gets or sets the WriteConcern to use.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoCollectionSettings.WriteEncoding">
            <summary>
            Gets or sets the Write Encoding.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionSettings.Clone">
            <summary>
            Creates a clone of the settings.
            </summary>
            <returns>A clone of the settings.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionSettings.Equals(System.Object)">
            <summary>
            Compares two MongoCollectionSettings instances.
            </summary>
            <param name="obj">The other instance.</param>
            <returns>True if the two instances are equal.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionSettings.Freeze">
            <summary>
            Freezes the settings.
            </summary>
            <returns>The frozen settings.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionSettings.FrozenCopy">
            <summary>
            Returns a frozen copy of the settings.
            </summary>
            <returns>A frozen copy of the settings.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionSettings.GetHashCode">
            <summary>
            Gets the hash code.
            </summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionSettings.ToString">
            <summary>
            Returns a string representation of the settings.
            </summary>
            <returns>A string representation of the settings.</returns>
        </member>
        <member name="T:MongoDB.Driver.MongoCredential">
            <summary>
            Credential to access a MongoDB database.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoCredential.#ctor(System.String,MongoDB.Driver.MongoIdentity,MongoDB.Driver.MongoIdentityEvidence)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoCredential" /> class.
            </summary>
            <param name="mechanism">Mechanism to authenticate with.
            In .NET Standard, authenticating via SCRAM-SHA-256 may not work with non-ASCII passwords because SaslPrep is
            not fully implemented due to the lack of a string normalization function in .NET Standard 1.5.
            Normalizing the password into Unicode Normalization Form KC beforehand MAY help.
            SCRAM-SHA-1 is the recommended alternative for now.</param>
            <param name="identity">The identity.</param>
            <param name="evidence">The evidence.</param>
        </member>
        <member name="P:MongoDB.Driver.MongoCredential.Evidence">
            <summary>
            Gets the evidence.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoCredential.Identity">
            <summary>
            Gets the identity.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoCredential.Mechanism">
            <summary>
            Gets the mechanism to authenticate with.
            In .NET Standard, authenticating via SCRAM-SHA-256 may not work with non-ASCII passwords because SaslPrep is
            not fully implemented due to the lack of a string normalization function in .NET Standard 1.5.
            Normalizing the password into Unicode Normalization Form KC beforehand MAY help.
            SCRAM-SHA-1 is the recommended alternative for now.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoCredential.Password">
            <summary>
            Gets the password.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoCredential.Source">
            <summary>
            Gets the source.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoCredential.Username">
            <summary>
            Gets the username.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoCredential.op_Equality(MongoDB.Driver.MongoCredential,MongoDB.Driver.MongoCredential)">
            <summary>
            Compares two MongoCredentials.
            </summary>
            <param name="lhs">The first MongoCredential.</param>
            <param name="rhs">The other MongoCredential.</param>
            <returns>True if the two MongoCredentials are equal (or both null).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCredential.op_Inequality(MongoDB.Driver.MongoCredential,MongoDB.Driver.MongoCredential)">
            <summary>
            Compares two MongoCredentials.
            </summary>
            <param name="lhs">The first MongoCredential.</param>
            <param name="rhs">The other MongoCredential.</param>
            <returns>True if the two MongoCredentials are not equal (or one is null and the other is not).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCredential.CreateCredential(System.String,System.String,System.String)">
            <summary>
            Creates a default credential.
            In .NET Standard, authenticating via SCRAM-SHA-256 may not work with non-ASCII passwords because SaslPrep is
            not fully implemented due to the lack of a string normalization function in .NET Standard 1.5.
            Normalizing the password into Unicode Normalization Form KC beforehand MAY help.
            SCRAM-SHA-1 is the recommended alternative for now.
            </summary>
            <param name="databaseName">Name of the database.</param>
            <param name="username">The username.</param>
            <param name="password">The password.</param>
            <returns>A default credential.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCredential.CreateCredential(System.String,System.String,System.Security.SecureString)">
            <summary>
            Creates a default credential.
            Less secure when used in conjunction with SCRAM-SHA-256, due to the need to store the password in a managed
            string in order to SaslPrep it.
            In .NET Standard, authenticating via SCRAM-SHA-256 may not work with non-ASCII passwords because SaslPrep is
            not fully implemented due to the lack of a string normalization function in .NET Standard 1.5.
            Normalizing the password into Unicode Normalization Form KC beforehand MAY help.
            SCRAM-SHA-1 is the recommended alternative for now.
            </summary>
            <param name="databaseName">Name of the database.</param>
            <param name="username">The username.</param>
            <param name="password">The password.</param>
            <returns>A default credential.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCredential.CreateGssapiCredential(System.String)">
            <summary>
            Creates a GSSAPI credential.
            </summary>
            <param name="username">The username.</param>
            <returns>A credential for GSSAPI.</returns>
            <remarks>This overload is used primarily on linux.</remarks>
        </member>
        <member name="M:MongoDB.Driver.MongoCredential.CreateGssapiCredential(System.String,System.String)">
            <summary>
            Creates a GSSAPI credential.
            </summary>
            <param name="username">The username.</param>
            <param name="password">The password.</param>
            <returns>A credential for GSSAPI.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCredential.CreateGssapiCredential(System.String,System.Security.SecureString)">
            <summary>
            Creates a GSSAPI credential.
            </summary>
            <param name="username">The username.</param>
            <param name="password">The password.</param>
            <returns>A credential for GSSAPI.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCredential.CreateMongoCRCredential(System.String,System.String,System.String)">
            <summary>
            Creates a credential used with MONGODB-CR.
            </summary>
            <param name="databaseName">Name of the database.</param>
            <param name="username">The username.</param>
            <param name="password">The password.</param>
            <returns>A credential for MONGODB-CR.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCredential.CreateMongoCRCredential(System.String,System.String,System.Security.SecureString)">
            <summary>
            Creates a credential used with MONGODB-CR.
            </summary>
            <param name="databaseName">Name of the database.</param>
            <param name="username">The username.</param>
            <param name="password">The password.</param>
            <returns>A credential for MONGODB-CR.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCredential.CreateMongoX509Credential(System.String)">
            <summary>
            Creates a credential used with MONGODB-X509.
            </summary>
            <param name="username">The username.</param>
            <returns>A credential for MONGODB-X509.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCredential.CreatePlainCredential(System.String,System.String,System.String)">
            <summary>
            Creates a PLAIN credential.
            </summary>
            <param name="databaseName">Name of the database.</param>
            <param name="username">The username.</param>
            <param name="password">The password.</param>
            <returns>A credential for PLAIN.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCredential.CreatePlainCredential(System.String,System.String,System.Security.SecureString)">
            <summary>
            Creates a PLAIN credential.
            </summary>
            <param name="databaseName">Name of the database.</param>
            <param name="username">The username.</param>
            <param name="password">The password.</param>
            <returns>A credential for PLAIN.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCredential.GetMechanismProperty``1(System.String,``0)">
            <summary>
            Gets the mechanism property.
            </summary>
            <typeparam name="T">The type of the mechanism property.</typeparam>
            <param name="key">The key.</param>
            <param name="defaultValue">The default value.</param>
            <returns>The mechanism property if one was set; otherwise the default value.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCredential.Equals(MongoDB.Driver.MongoCredential)">
            <summary>
            Compares this MongoCredential to another MongoCredential.
            </summary>
            <param name="rhs">The other credential.</param>
            <returns>True if the two credentials are equal.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCredential.Equals(System.Object)">
            <summary>
            Compares this MongoCredential to another MongoCredential.
            </summary>
            <param name="obj">The other credential.</param>
            <returns>True if the two credentials are equal.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCredential.GetHashCode">
            <summary>
            Gets the hashcode for the credential.
            </summary>
            <returns>The hashcode.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCredential.ToString">
            <summary>
            Returns a string representation of the credential.
            </summary>
            <returns>A string representation of the credential.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCredential.WithMechanismProperty(System.String,System.Object)">
            <summary>
            Creates a new MongoCredential with the specified mechanism property.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <returns>A new MongoCredential with the specified mechanism property.</returns>
        </member>
        <member name="T:MongoDB.Driver.MongoCredentialStore">
            <summary>
            Represents a list of credentials and the rules about how credentials can be used together.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoCredentialStore.#ctor(System.Collections.Generic.IEnumerable{MongoDB.Driver.MongoCredential})">
            <summary>
            Creates a new instance of the MongoCredentialStore class.
            </summary>
            <param name="credentials">The credentials.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoCredentialStore.op_Equality(MongoDB.Driver.MongoCredentialStore,MongoDB.Driver.MongoCredentialStore)">
            <summary>
            Determines whether two <see cref="T:MongoDB.Driver.MongoCredentialStore"/> instances are equal.
            </summary>
            <param name="lhs">The LHS.</param>
            <param name="rhs">The RHS.</param>
            <returns>
              <c>true</c> if the left hand side is equal to the right hand side; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCredentialStore.op_Inequality(MongoDB.Driver.MongoCredentialStore,MongoDB.Driver.MongoCredentialStore)">
            <summary>
            Determines whether two <see cref="T:MongoDB.Driver.MongoCredentialStore"/> instances are not equal.
            </summary>
            <param name="lhs">The LHS.</param>
            <param name="rhs">The RHS.</param>
            <returns>
              <c>true</c> if the left hand side is not equal to the right hand side; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCredentialStore.Equals(MongoDB.Driver.MongoCredentialStore)">
            <summary>
            Determines whether the specified <see cref="T:MongoDB.Driver.MongoCredentialStore" /> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:MongoDB.Driver.MongoCredentialStore" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:MongoDB.Driver.MongoCredentialStore" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCredentialStore.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCredentialStore.GetEnumerator">
            <summary>
            Gets the enumerator.
            </summary>
            <returns></returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCredentialStore.GetHashCode">
            <summary>
            Gets the hashcode for the credential store.
            </summary>
            <returns>The hashcode.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCredentialStore.ToString">
            <summary>
            Returns a string representation of the credential store.
            </summary>
            <returns>A string representation of the credential store.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCredentialStore.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="T:MongoDB.Driver.MongoDatabaseBase">
            <summary>
            Base class for implementors of <see cref="T:MongoDB.Driver.IMongoDatabase" />.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDatabaseBase.Client">
            <inheritdoc />
        </member>
        <member name="P:MongoDB.Driver.MongoDatabaseBase.DatabaseNamespace">
            <inheritdoc />
        </member>
        <member name="P:MongoDB.Driver.MongoDatabaseBase.Settings">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoDatabaseBase.Aggregate``1(MongoDB.Driver.PipelineDefinition{MongoDB.Driver.NoPipelineInput,``0},MongoDB.Driver.AggregateOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoDatabaseBase.Aggregate``1(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.PipelineDefinition{MongoDB.Driver.NoPipelineInput,``0},MongoDB.Driver.AggregateOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoDatabaseBase.AggregateAsync``1(MongoDB.Driver.PipelineDefinition{MongoDB.Driver.NoPipelineInput,``0},MongoDB.Driver.AggregateOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoDatabaseBase.AggregateAsync``1(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.PipelineDefinition{MongoDB.Driver.NoPipelineInput,``0},MongoDB.Driver.AggregateOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoDatabaseBase.CreateCollection(System.String,MongoDB.Driver.CreateCollectionOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoDatabaseBase.CreateCollection(MongoDB.Driver.IClientSessionHandle,System.String,MongoDB.Driver.CreateCollectionOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoDatabaseBase.CreateCollectionAsync(System.String,MongoDB.Driver.CreateCollectionOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoDatabaseBase.CreateCollectionAsync(MongoDB.Driver.IClientSessionHandle,System.String,MongoDB.Driver.CreateCollectionOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoDatabaseBase.CreateView``2(System.String,System.String,MongoDB.Driver.PipelineDefinition{``0,``1},MongoDB.Driver.CreateViewOptions{``0},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoDatabaseBase.CreateView``2(MongoDB.Driver.IClientSessionHandle,System.String,System.String,MongoDB.Driver.PipelineDefinition{``0,``1},MongoDB.Driver.CreateViewOptions{``0},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoDatabaseBase.CreateViewAsync``2(System.String,System.String,MongoDB.Driver.PipelineDefinition{``0,``1},MongoDB.Driver.CreateViewOptions{``0},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoDatabaseBase.CreateViewAsync``2(MongoDB.Driver.IClientSessionHandle,System.String,System.String,MongoDB.Driver.PipelineDefinition{``0,``1},MongoDB.Driver.CreateViewOptions{``0},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoDatabaseBase.DropCollection(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoDatabaseBase.DropCollection(MongoDB.Driver.IClientSessionHandle,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoDatabaseBase.DropCollectionAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoDatabaseBase.DropCollectionAsync(MongoDB.Driver.IClientSessionHandle,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoDatabaseBase.GetCollection``1(System.String,MongoDB.Driver.MongoCollectionSettings)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoDatabaseBase.ListCollectionNames(MongoDB.Driver.ListCollectionNamesOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoDatabaseBase.ListCollectionNames(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.ListCollectionNamesOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoDatabaseBase.ListCollectionNamesAsync(MongoDB.Driver.ListCollectionNamesOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoDatabaseBase.ListCollectionNamesAsync(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.ListCollectionNamesOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoDatabaseBase.ListCollections(MongoDB.Driver.ListCollectionsOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoDatabaseBase.ListCollections(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.ListCollectionsOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoDatabaseBase.ListCollectionsAsync(MongoDB.Driver.ListCollectionsOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoDatabaseBase.ListCollectionsAsync(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.ListCollectionsOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoDatabaseBase.RenameCollection(System.String,System.String,MongoDB.Driver.RenameCollectionOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoDatabaseBase.RenameCollection(MongoDB.Driver.IClientSessionHandle,System.String,System.String,MongoDB.Driver.RenameCollectionOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoDatabaseBase.RenameCollectionAsync(System.String,System.String,MongoDB.Driver.RenameCollectionOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoDatabaseBase.RenameCollectionAsync(MongoDB.Driver.IClientSessionHandle,System.String,System.String,MongoDB.Driver.RenameCollectionOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoDatabaseBase.RunCommand``1(MongoDB.Driver.Command{``0},MongoDB.Driver.ReadPreference,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoDatabaseBase.RunCommand``1(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.Command{``0},MongoDB.Driver.ReadPreference,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoDatabaseBase.RunCommandAsync``1(MongoDB.Driver.Command{``0},MongoDB.Driver.ReadPreference,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoDatabaseBase.RunCommandAsync``1(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.Command{``0},MongoDB.Driver.ReadPreference,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoDatabaseBase.Watch``1(MongoDB.Driver.PipelineDefinition{MongoDB.Driver.ChangeStreamDocument{MongoDB.Bson.BsonDocument},``0},MongoDB.Driver.ChangeStreamOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoDatabaseBase.Watch``1(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.PipelineDefinition{MongoDB.Driver.ChangeStreamDocument{MongoDB.Bson.BsonDocument},``0},MongoDB.Driver.ChangeStreamOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoDatabaseBase.WatchAsync``1(MongoDB.Driver.PipelineDefinition{MongoDB.Driver.ChangeStreamDocument{MongoDB.Bson.BsonDocument},``0},MongoDB.Driver.ChangeStreamOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoDatabaseBase.WatchAsync``1(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.PipelineDefinition{MongoDB.Driver.ChangeStreamDocument{MongoDB.Bson.BsonDocument},``0},MongoDB.Driver.ChangeStreamOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoDatabaseBase.WithReadConcern(MongoDB.Driver.ReadConcern)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoDatabaseBase.WithReadPreference(MongoDB.Driver.ReadPreference)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoDatabaseBase.WithWriteConcern(MongoDB.Driver.WriteConcern)">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.MongoDatabaseSettings">
            <summary>
            The settings used to access a database.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoDatabaseSettings.#ctor">
            <summary>
            Creates a new instance of MongoDatabaseSettings.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDatabaseSettings.GuidRepresentation">
            <summary>
            Gets or sets the representation to use for Guids.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDatabaseSettings.IsFrozen">
            <summary>
            Gets a value indicating whether the settings have been frozen to prevent further changes.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDatabaseSettings.ReadConcern">
            <summary>
            Gets or sets the read concern.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDatabaseSettings.ReadEncoding">
            <summary>
            Gets or sets the Read Encoding.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDatabaseSettings.ReadPreference">
            <summary>
            Gets or sets the read preference.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDatabaseSettings.SerializerRegistry">
            <summary>
            Gets the serializer registry.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDatabaseSettings.WriteConcern">
            <summary>
            Gets or sets the WriteConcern to use.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDatabaseSettings.WriteEncoding">
            <summary>
            Gets or sets the Write Encoding.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoDatabaseSettings.Clone">
            <summary>
            Creates a clone of the settings.
            </summary>
            <returns>A clone of the settings.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoDatabaseSettings.Equals(System.Object)">
            <summary>
            Compares two MongoDatabaseSettings instances.
            </summary>
            <param name="obj">The other instance.</param>
            <returns>True if the two instances are equal.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoDatabaseSettings.Freeze">
            <summary>
            Freezes the settings.
            </summary>
            <returns>The frozen settings.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoDatabaseSettings.FrozenCopy">
            <summary>
            Returns a frozen copy of the settings.
            </summary>
            <returns>A frozen copy of the settings.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoDatabaseSettings.GetHashCode">
            <summary>
            Gets the hash code.
            </summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoDatabaseSettings.ToString">
            <summary>
            Returns a string representation of the settings.
            </summary>
            <returns>A string representation of the settings.</returns>
        </member>
        <member name="T:MongoDB.Driver.MongoDBRef">
            <summary>
            Represents a DBRef (a convenient way to refer to a document).
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoDBRef.#ctor(System.String,MongoDB.Bson.BsonValue)">
            <summary>
            Creates a MongoDBRef.
            </summary>
            <param name="collectionName">The name of the collection that contains the document.</param>
            <param name="id">The Id of the document.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoDBRef.#ctor(System.String,System.String,MongoDB.Bson.BsonValue)">
            <summary>
            Creates a MongoDBRef.
            </summary>
            <param name="databaseName">The name of the database that contains the document.</param>
            <param name="collectionName">The name of the collection that contains the document.</param>
            <param name="id">The Id of the document.</param>
        </member>
        <member name="P:MongoDB.Driver.MongoDBRef.DatabaseName">
            <summary>
            Gets the name of the database that contains the document.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDBRef.CollectionName">
            <summary>
            Gets the name of the collection that contains the document.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDBRef.Id">
            <summary>
            Gets the Id of the document.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoDBRef.op_Inequality(MongoDB.Driver.MongoDBRef,MongoDB.Driver.MongoDBRef)">
            <summary>
            Determines whether two specified MongoDBRef objects have different values.
            </summary>
            <param name="lhs">The first value to compare, or null.</param>
            <param name="rhs">The second value to compare, or null.</param>
            <returns>True if the value of lhs is different from the value of rhs; otherwise, false.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoDBRef.op_Equality(MongoDB.Driver.MongoDBRef,MongoDB.Driver.MongoDBRef)">
            <summary>
            Determines whether two specified MongoDBRef objects have the same value.
            </summary>
            <param name="lhs">The first value to compare, or null.</param>
            <param name="rhs">The second value to compare, or null.</param>
            <returns>True if the value of lhs is the same as the value of rhs; otherwise, false.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoDBRef.Equals(MongoDB.Driver.MongoDBRef,MongoDB.Driver.MongoDBRef)">
            <summary>
            Determines whether two specified MongoDBRef objects have the same value.
            </summary>
            <param name="lhs">The first value to compare, or null.</param>
            <param name="rhs">The second value to compare, or null.</param>
            <returns>True if the value of lhs is the same as the value of rhs; otherwise, false.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoDBRef.Equals(MongoDB.Driver.MongoDBRef)">
            <summary>
            Determines whether this instance and another specified MongoDBRef object have the same value.
            </summary>
            <param name="rhs">The MongoDBRef object to compare to this instance.</param>
            <returns>True if the value of the rhs parameter is the same as this instance; otherwise, false.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoDBRef.Equals(System.Object)">
            <summary>
            Determines whether this instance and a specified object, which must also be a MongoDBRef object, have the same value.
            </summary>
            <param name="obj">The MongoDBRef object to compare to this instance.</param>
            <returns>True if obj is a MongoDBRef object and its value is the same as this instance; otherwise, false.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoDBRef.GetHashCode">
            <summary>
            Returns the hash code for this MongoDBRef object.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoDBRef.ToString">
            <summary>
            Returns a string representation of the value.
            </summary>
            <returns>A string representation of the value.</returns>
        </member>
        <member name="T:MongoDB.Driver.MongoDBRefSerializer">
            <summary>
            Represents a serializer for MongoDBRefs.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoDBRefSerializer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoDBRefSerializer"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoDBRefSerializer.TryGetMemberSerializationInfo(System.String,MongoDB.Bson.Serialization.BsonSerializationInfo@)">
            <summary>
            Tries to get the serialization info for a member.
            </summary>
            <param name="memberName">Name of the member.</param>
            <param name="serializationInfo">The serialization information.</param>
            <returns>
              <c>true</c> if the serialization info exists; otherwise <c>false</c>.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.MongoDBRefSerializer.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <param name="args">The deserialization args.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoDBRefSerializer.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,MongoDB.Driver.MongoDBRef)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="args">The serialization args.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:MongoDB.Driver.MongoDefaults">
            <summary>
            Default values for various Mongo settings.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDefaults.AssignIdOnInsert">
            <summary>
            Gets or sets whether the driver should assign a value to empty Ids on Insert.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDefaults.AuthenticationMechanism">
            <summary>
            Gets or sets the default authentication mechanism.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDefaults.ComputedWaitQueueSize">
            <summary>
            Gets the actual wait queue size (either WaitQueueSize or WaitQueueMultiple x MaxConnectionPoolSize).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDefaults.ConnectTimeout">
            <summary>
            Gets or sets the connect timeout.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDefaults.GuidRepresentation">
            <summary>
            Gets or sets the representation to use for Guids (this is an alias for BsonDefaults.GuidRepresentation).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDefaults.LocalThreshold">
            <summary>
            Gets or sets the default local threshold.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDefaults.MaxBatchCount">
            <summary>
            Gets or sets the maximum batch count.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDefaults.MaxConnectionIdleTime">
            <summary>
            Gets or sets the max connection idle time.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDefaults.MaxConnectionLifeTime">
            <summary>
            Gets or sets the max connection life time.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDefaults.MaxConnectionPoolSize">
            <summary>
            Gets or sets the max connection pool size.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDefaults.MaxDocumentSize">
            <summary>
            Gets or sets the max document size
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDefaults.MaxMessageLength">
            <summary>
            Gets or sets the max message length.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDefaults.MinConnectionPoolSize">
            <summary>
            Gets or sets the min connection pool size.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDefaults.OperationTimeout">
            <summary>
            Gets or sets the operation timeout.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDefaults.ReadEncoding">
            <summary>
            Gets or sets the Read Encoding.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDefaults.ServerSelectionTimeout">
            <summary>
            Gets or sets the server selection timeout.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDefaults.SocketTimeout">
            <summary>
            Gets or sets the socket timeout.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDefaults.TcpReceiveBufferSize">
            <summary>
            Gets or sets the TCP receive buffer size.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDefaults.TcpSendBufferSize">
            <summary>
            Gets or sets the TCP send buffer size.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDefaults.WaitQueueMultiple">
            <summary>
            Gets or sets the wait queue multiple (the actual wait queue size will be WaitQueueMultiple x MaxConnectionPoolSize, see also WaitQueueSize).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDefaults.WaitQueueSize">
            <summary>
            Gets or sets the wait queue size (see also WaitQueueMultiple).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDefaults.WaitQueueTimeout">
            <summary>
            Gets or sets the wait queue timeout.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDefaults.WriteEncoding">
            <summary>
            Gets or sets the Write Encoding.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.MongoExternalIdentity">
            <summary>
            Represents an identity defined outside of mongodb.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoExternalIdentity.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoExternalIdentity" /> class.
            </summary>
            <param name="username">The username.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoExternalIdentity.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoExternalIdentity" /> class.
            </summary>
            <param name="source">The source.</param>
            <param name="username">The username.</param>
        </member>
        <member name="T:MongoDB.Driver.MongoIdentity">
            <summary>
            Represents an identity in MongoDB.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoIdentity.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoIdentity" /> class.
            </summary>
            <param name="source">The source.</param>
            <param name="username">The username.</param>
            <param name="allowNullUsername">Whether to allow null usernames.</param>
        </member>
        <member name="P:MongoDB.Driver.MongoIdentity.Source">
            <summary>
            Gets the source.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoIdentity.Username">
            <summary>
            Gets the username.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoIdentity.op_Equality(MongoDB.Driver.MongoIdentity,MongoDB.Driver.MongoIdentity)">
            <summary>
            Compares two MongoIdentity values.
            </summary>
            <param name="lhs">The first MongoIdentity.</param>
            <param name="rhs">The other MongoIdentity.</param>
            <returns>True if the two MongoIdentity values are equal (or both null).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoIdentity.op_Inequality(MongoDB.Driver.MongoIdentity,MongoDB.Driver.MongoIdentity)">
            <summary>
            Compares two MongoIdentity values.
            </summary>
            <param name="lhs">The first MongoIdentity.</param>
            <param name="rhs">The other MongoIdentity.</param>
            <returns>True if the two MongoIdentity values are not equal (or one is null and the other is not).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoIdentity.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.MongoIdentity.Equals(MongoDB.Driver.MongoIdentity)">
            <summary>
            Determines whether the specified instance is equal to this instance.
            </summary>
            <param name="rhs">The right-hand side.</param>
            <returns>
              <c>true</c> if the specified instance is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.MongoIdentity.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="T:MongoDB.Driver.MongoIdentityEvidence">
            <summary>
            Evidence used as proof of a MongoIdentity.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoIdentityEvidence.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoIdentityEvidence" /> class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoIdentityEvidence.op_Equality(MongoDB.Driver.MongoIdentityEvidence,MongoDB.Driver.MongoIdentityEvidence)">
            <summary>
            Compares two MongoIdentityEvidences.
            </summary>
            <param name="lhs">The first MongoIdentityEvidence.</param>
            <param name="rhs">The other MongoIdentityEvidence.</param>
            <returns>True if the two MongoIdentityEvidences are equal (or both null).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoIdentityEvidence.op_Inequality(MongoDB.Driver.MongoIdentityEvidence,MongoDB.Driver.MongoIdentityEvidence)">
            <summary>
            Compares two MongoIdentityEvidences.
            </summary>
            <param name="lhs">The first MongoIdentityEvidence.</param>
            <param name="rhs">The other MongoIdentityEvidence.</param>
            <returns>True if the two MongoIdentityEvidences are not equal (or one is null and the other is not).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoIdentityEvidence.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.MongoIdentityEvidence.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="T:MongoDB.Driver.MongoIndexManagerBase`1">
            <summary>
            Base class for implementors of <see cref="T:MongoDB.Driver.IMongoIndexManager`1"/>.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="P:MongoDB.Driver.MongoIndexManagerBase`1.CollectionNamespace">
            <inheritdoc />
        </member>
        <member name="P:MongoDB.Driver.MongoIndexManagerBase`1.DocumentSerializer">
            <inheritdoc />
        </member>
        <member name="P:MongoDB.Driver.MongoIndexManagerBase`1.Settings">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoIndexManagerBase`1.CreateOne(MongoDB.Driver.IndexKeysDefinition{`0},MongoDB.Driver.CreateIndexOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoIndexManagerBase`1.CreateOne(MongoDB.Driver.CreateIndexModel{`0},MongoDB.Driver.CreateOneIndexOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoIndexManagerBase`1.CreateOne(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.IndexKeysDefinition{`0},MongoDB.Driver.CreateIndexOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoIndexManagerBase`1.CreateOne(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.CreateIndexModel{`0},MongoDB.Driver.CreateOneIndexOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoIndexManagerBase`1.CreateOneAsync(MongoDB.Driver.IndexKeysDefinition{`0},MongoDB.Driver.CreateIndexOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoIndexManagerBase`1.CreateOneAsync(MongoDB.Driver.CreateIndexModel{`0},MongoDB.Driver.CreateOneIndexOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoIndexManagerBase`1.CreateOneAsync(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.IndexKeysDefinition{`0},MongoDB.Driver.CreateIndexOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoIndexManagerBase`1.CreateOneAsync(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.CreateIndexModel{`0},MongoDB.Driver.CreateOneIndexOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoIndexManagerBase`1.CreateMany(System.Collections.Generic.IEnumerable{MongoDB.Driver.CreateIndexModel{`0}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoIndexManagerBase`1.CreateMany(System.Collections.Generic.IEnumerable{MongoDB.Driver.CreateIndexModel{`0}},MongoDB.Driver.CreateManyIndexesOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoIndexManagerBase`1.CreateMany(MongoDB.Driver.IClientSessionHandle,System.Collections.Generic.IEnumerable{MongoDB.Driver.CreateIndexModel{`0}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoIndexManagerBase`1.CreateMany(MongoDB.Driver.IClientSessionHandle,System.Collections.Generic.IEnumerable{MongoDB.Driver.CreateIndexModel{`0}},MongoDB.Driver.CreateManyIndexesOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoIndexManagerBase`1.CreateManyAsync(System.Collections.Generic.IEnumerable{MongoDB.Driver.CreateIndexModel{`0}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoIndexManagerBase`1.CreateManyAsync(System.Collections.Generic.IEnumerable{MongoDB.Driver.CreateIndexModel{`0}},MongoDB.Driver.CreateManyIndexesOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoIndexManagerBase`1.CreateManyAsync(MongoDB.Driver.IClientSessionHandle,System.Collections.Generic.IEnumerable{MongoDB.Driver.CreateIndexModel{`0}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoIndexManagerBase`1.CreateManyAsync(MongoDB.Driver.IClientSessionHandle,System.Collections.Generic.IEnumerable{MongoDB.Driver.CreateIndexModel{`0}},MongoDB.Driver.CreateManyIndexesOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoIndexManagerBase`1.DropAll(MongoDB.Driver.DropIndexOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoIndexManagerBase`1.DropAll(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoIndexManagerBase`1.DropAll(MongoDB.Driver.IClientSessionHandle,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoIndexManagerBase`1.DropAll(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.DropIndexOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoIndexManagerBase`1.DropAllAsync(MongoDB.Driver.DropIndexOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoIndexManagerBase`1.DropAllAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoIndexManagerBase`1.DropAllAsync(MongoDB.Driver.IClientSessionHandle,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoIndexManagerBase`1.DropAllAsync(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.DropIndexOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoIndexManagerBase`1.DropOne(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoIndexManagerBase`1.DropOne(System.String,MongoDB.Driver.DropIndexOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoIndexManagerBase`1.DropOne(MongoDB.Driver.IClientSessionHandle,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoIndexManagerBase`1.DropOne(MongoDB.Driver.IClientSessionHandle,System.String,MongoDB.Driver.DropIndexOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoIndexManagerBase`1.DropOneAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoIndexManagerBase`1.DropOneAsync(System.String,MongoDB.Driver.DropIndexOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoIndexManagerBase`1.DropOneAsync(MongoDB.Driver.IClientSessionHandle,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoIndexManagerBase`1.DropOneAsync(MongoDB.Driver.IClientSessionHandle,System.String,MongoDB.Driver.DropIndexOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoIndexManagerBase`1.List(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoIndexManagerBase`1.List(MongoDB.Driver.IClientSessionHandle,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoIndexManagerBase`1.ListAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.MongoIndexManagerBase`1.ListAsync(MongoDB.Driver.IClientSessionHandle,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.MongoInternalIdentity">
            <summary>
            Represents an identity defined inside mongodb.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoInternalIdentity.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoInternalIdentity" /> class.
            </summary>
            <param name="databaseName">Name of the database.</param>
            <param name="username">The username.</param>
        </member>
        <member name="T:MongoDB.Driver.MongoServerAddress">
            <summary>
            The address of a MongoDB server.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoServerAddress.#ctor(System.String)">
            <summary>
            Initializes a new instance of MongoServerAddress.
            </summary>
            <param name="host">The server's host name.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoServerAddress.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of MongoServerAddress.
            </summary>
            <param name="host">The server's host name.</param>
            <param name="port">The server's port number.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoServerAddress.Parse(System.String)">
            <summary>
            Parses a string representation of a server address.
            </summary>
            <param name="value">The string representation of a server address.</param>
            <returns>A new instance of MongoServerAddress initialized with values parsed from the string.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoServerAddress.TryParse(System.String,MongoDB.Driver.MongoServerAddress@)">
            <summary>
            Tries to parse a string representation of a server address.
            </summary>
            <param name="value">The string representation of a server address.</param>
            <param name="address">The server address (set to null if TryParse fails).</param>
            <returns>True if the string is parsed succesfully.</returns>
        </member>
        <member name="P:MongoDB.Driver.MongoServerAddress.Host">
            <summary>
            Gets the server's host name.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoServerAddress.Port">
            <summary>
            Gets the server's port number.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoServerAddress.op_Equality(MongoDB.Driver.MongoServerAddress,MongoDB.Driver.MongoServerAddress)">
            <summary>
            Compares two server addresses.
            </summary>
            <param name="lhs">The first address.</param>
            <param name="rhs">The other address.</param>
            <returns>True if the two addresses are equal (or both are null).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoServerAddress.op_Inequality(MongoDB.Driver.MongoServerAddress,MongoDB.Driver.MongoServerAddress)">
            <summary>
            Compares two server addresses.
            </summary>
            <param name="lhs">The first address.</param>
            <param name="rhs">The other address.</param>
            <returns>True if the two addresses are not equal (or one is null and the other is not).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoServerAddress.Equals(MongoDB.Driver.MongoServerAddress)">
            <summary>
            Compares two server addresses.
            </summary>
            <param name="rhs">The other server address.</param>
            <returns>True if the two server addresses are equal.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoServerAddress.Equals(System.Object)">
            <summary>
            Compares two server addresses.
            </summary>
            <param name="obj">The other server address.</param>
            <returns>True if the two server addresses are equal.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoServerAddress.GetHashCode">
            <summary>
            Gets the hash code for this object.
            </summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoServerAddress.ToString">
            <summary>
            Returns a string representation of the server address.
            </summary>
            <returns>A string representation of the server address.</returns>
        </member>
        <member name="T:MongoDB.Driver.MongoUrl">
            <summary>
            Represents an immutable URL style connection string. See also MongoUrlBuilder.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoUrl.#ctor(System.String)">
            <summary>
            Creates a new instance of MongoUrl.
            </summary>
            <param name="url">The URL containing the settings.</param>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.AllowInsecureTls">
            <summary>
            Gets whether to relax TLS constraints as much as possible.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.ApplicationName">
            <summary>
            Gets the application name.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.AuthenticationMechanism">
            <summary>
            Gets the authentication mechanism.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.AuthenticationMechanismProperties">
            <summary>
            Gets the authentication mechanism properties.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.AuthenticationSource">
            <summary>
            Gets the authentication source.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.Compressors">
            <summary>
            Gets the compressors.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.ComputedWaitQueueSize">
            <summary>
            Gets the actual wait queue size (either WaitQueueSize or WaitQueueMultiple x MaxConnectionPoolSize).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.ConnectionMode">
            <summary>
            Gets the connection mode.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.ConnectTimeout">
            <summary>
            Gets the connect timeout.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.DatabaseName">
            <summary>
            Gets the optional database name.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.FSync">
            <summary>
            Gets the FSync component of the write concern.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.GuidRepresentation">
            <summary>
            Gets the representation to use for Guids.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.HasAuthenticationSettings">
            <summary>
            Gets a value indicating whether this instance has authentication settings.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.HeartbeatInterval">
            <summary>
            Gets the heartbeat interval.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.HeartbeatTimeout">
            <summary>
            Gets the heartbeat timeout.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.IPv6">
            <summary>
            Gets a value indicating whether to use IPv6.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.IsResolved">
            <summary>
            Gets a value indicating whether a connection string with scheme MongoDBPlusSrv has been resolved.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.Journal">
            <summary>
            Gets the Journal component of the write concern.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.LocalThreshold">
            <summary>
            Gets the local threshold.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.MaxConnectionIdleTime">
            <summary>
            Gets the max connection idle time.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.MaxConnectionLifeTime">
            <summary>
            Gets the max connection life time.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.MaxConnectionPoolSize">
            <summary>
            Gets the max connection pool size.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.MinConnectionPoolSize">
            <summary>
            Gets the min connection pool size.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.Password">
            <summary>
            Gets the password.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.ReadConcernLevel">
            <summary>
            Gets the read concern level.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.ReadPreference">
            <summary>
            Gets the read preference.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.ReplicaSetName">
            <summary>
            Gets the name of the replica set.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.RetryReads">
            <summary>
            Gets whether reads will be retried.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.RetryWrites">
            <summary>
            Gets whether writes will be retried.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.Scheme">
            <summary>
            Gets the connection string scheme.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.Server">
            <summary>
            Gets the address of the server (see also Servers if using more than one address).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.Servers">
            <summary>
            Gets the list of server addresses (see also Server if using only one address).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.ServerSelectionTimeout">
            <summary>
            Gets the server selection timeout.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.SocketTimeout">
            <summary>
            Gets the socket timeout.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.Url">
            <summary>
            Gets the URL (in canonical form).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.Username">
            <summary>
            Gets the username.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.UseSsl">
            <summary>
            Gets a value indicating whether to use SSL.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.UseTls">
            <summary>
            Gets a value indicating whether to use TLS.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.VerifySslCertificate">
            <summary>
            Gets a value indicating whether to verify an SSL certificate.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.W">
            <summary>
            Gets the W component of the write concern.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.WaitQueueMultiple">
            <summary>
            Gets the wait queue multiple (the actual wait queue size will be WaitQueueMultiple x MaxConnectionPoolSize).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.WaitQueueSize">
            <summary>
            Gets the wait queue size.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.WaitQueueTimeout">
            <summary>
            Gets the wait queue timeout.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.WTimeout">
            <summary>
            Gets the WTimeout component of the write concern.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoUrl.op_Equality(MongoDB.Driver.MongoUrl,MongoDB.Driver.MongoUrl)">
            <summary>
            Compares two MongoUrls.
            </summary>
            <param name="lhs">The first URL.</param>
            <param name="rhs">The other URL.</param>
            <returns>True if the two URLs are equal (or both null).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoUrl.op_Inequality(MongoDB.Driver.MongoUrl,MongoDB.Driver.MongoUrl)">
            <summary>
            Compares two MongoUrls.
            </summary>
            <param name="lhs">The first URL.</param>
            <param name="rhs">The other URL.</param>
            <returns>True if the two URLs are not equal (or one is null and the other is not).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoUrl.ClearCache">
            <summary>
            Clears the URL cache. When a URL is parsed it is stored in the cache so that it doesn't have to be
            parsed again. There is rarely a need to call this method.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoUrl.Create(System.String)">
            <summary>
            Creates an instance of MongoUrl (might be an existing existence if the same URL has been used before).
            </summary>
            <param name="url">The URL containing the settings.</param>
            <returns>An instance of MongoUrl.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoUrl.Equals(MongoDB.Driver.MongoUrl)">
            <summary>
            Compares two MongoUrls.
            </summary>
            <param name="rhs">The other URL.</param>
            <returns>True if the two URLs are equal.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoUrl.Equals(System.Object)">
            <summary>
            Compares two MongoUrls.
            </summary>
            <param name="obj">The other URL.</param>
            <returns>True if the two URLs are equal.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoUrl.GetCredential">
            <summary>
            Gets the credential.
            </summary>
            <returns>The credential (or null if the URL has not authentication settings).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoUrl.GetHashCode">
            <summary>
            Gets the hash code.
            </summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoUrl.GetWriteConcern(System.Boolean)">
            <summary>
            Returns a WriteConcern value based on this instance's settings and a default enabled value.
            </summary>
            <param name="enabledDefault">The default enabled value.</param>
            <returns>A WriteConcern.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoUrl.Resolve">
            <summary>
            Resolves a connection string. If the connection string indicates more information is available
            in the DNS system, it will acquire that information as well.
            </summary>
            <returns>A resolved MongoURL.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoUrl.Resolve(System.Boolean)">
            <summary>
            Resolves a connection string. If the connection string indicates more information is available
            in the DNS system, it will acquire that information as well.
            </summary>
            <param name="resolveHosts">Whether to resolve hosts.</param>
            <returns>A resolved MongoURL.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoUrl.ResolveAsync(System.Threading.CancellationToken)">
            <summary>
            Resolves a connection string. If the connection string indicates more information is available
            in the DNS system, it will acquire that information as well.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A resolved MongoURL.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoUrl.ResolveAsync(System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Resolves a connection string. If the connection string indicates more information is available
            in the DNS system, it will acquire that information as well.
            </summary>
            <param name="resolveHosts">Whether to resolve hosts.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A resolved MongoURL.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoUrl.ToString">
            <summary>
            Returns the canonical URL based on the settings in this MongoUrlBuilder.
            </summary>
            <returns>The canonical URL.</returns>
        </member>
        <member name="T:MongoDB.Driver.MongoUrlBuilder">
            <summary>
            Represents URL-style connection strings.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoUrlBuilder.#ctor">
            <summary>
            Creates a new instance of MongoUrlBuilder.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoUrlBuilder.#ctor(System.String)">
            <summary>
            Creates a new instance of MongoUrlBuilder.
            </summary>
            <param name="url">The initial settings.</param>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.AllowInsecureTls">
            <summary>
            Gets or sets whether to relax TLS constraints as much as possible.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.ApplicationName">
            <summary>
            Gets or sets the application name.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.AuthenticationMechanism">
            <summary>
            Gets or sets the authentication mechanism.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.AuthenticationMechanismProperties">
            <summary>
            Gets or sets the authentication mechanism properties.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.AuthenticationSource">
            <summary>
            Gets or sets the authentication source.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.Compressors">
            <summary>
            Gets or sets the compressors.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.ComputedWaitQueueSize">
            <summary>
            Gets the actual wait queue size (either WaitQueueSize or WaitQueueMultiple x MaxConnectionPoolSize).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.ConnectionMode">
            <summary>
            Gets or sets the connection mode.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.ConnectTimeout">
            <summary>
            Gets or sets the connect timeout.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.DatabaseName">
            <summary>
            Gets or sets the optional database name.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.FSync">
            <summary>
            Gets or sets the FSync component of the write concern.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.GuidRepresentation">
            <summary>
            Gets or sets the representation to use for Guids.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.HeartbeatInterval">
            <summary>
            Gets or sets the heartbeat interval.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.HeartbeatTimeout">
            <summary>
            Gets or sets the heartbeat timeout.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.IPv6">
            <summary>
            Gets or sets a value indicating whether to use IPv6.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.Journal">
            <summary>
            Gets or sets the Journal component of the write concern.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.LocalThreshold">
            <summary>
            Gets or sets the local threshold.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.MaxConnectionIdleTime">
            <summary>
            Gets or sets the max connection idle time.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.MaxConnectionLifeTime">
            <summary>
            Gets or sets the max connection life time.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.MaxConnectionPoolSize">
            <summary>
            Gets or sets the max connection pool size.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.MinConnectionPoolSize">
            <summary>
            Gets or sets the min connection pool size.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.Password">
            <summary>
            Gets or sets the password.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.ReadConcernLevel">
            <summary>
            Gets or sets the read concern level.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.ReadPreference">
            <summary>
            Gets or sets the read preference.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.ReplicaSetName">
            <summary>
            Gets or sets the name of the replica set.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.RetryReads">
            <summary>
            Gets or sets whether to retry reads.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.RetryWrites">
            <summary>
            Gets or sets whether to retry writes.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.Scheme">
            <summary>
            The connection string scheme.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.Server">
            <summary>
            Gets or sets the address of the server (see also Servers if using more than one address).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.Servers">
            <summary>
            Gets or sets the list of server addresses (see also Server if using only one address).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.ServerSelectionTimeout">
            <summary>
            Gets or sets the server selection timeout.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.SocketTimeout">
            <summary>
            Gets or sets the socket timeout.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.Username">
            <summary>
            Gets or sets the username.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.UseSsl">
            <summary>
            Gets or sets a value indicating whether to use SSL.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.UseTls">
            <summary>
            Gets or sets a value indicating whether to use TLS.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.VerifySslCertificate">
            <summary>
            Gets or sets a value indicating whether to verify an SSL certificate.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.W">
            <summary>
            Gets or sets the W component of the write concern.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.WaitQueueMultiple">
            <summary>
            Gets or sets the wait queue multiple (the actual wait queue size will be WaitQueueMultiple x MaxConnectionPoolSize).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.WaitQueueSize">
            <summary>
            Gets or sets the wait queue size.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.WaitQueueTimeout">
            <summary>
            Gets or sets the wait queue timeout.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.WTimeout">
            <summary>
            Gets or sets the WTimeout component of the write concern.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoUrlBuilder.GetWriteConcern(System.Boolean)">
            <summary>
            Returns a WriteConcern value based on this instance's settings and a default enabled value.
            </summary>
            <param name="enabledDefault">The default enabled value.</param>
            <returns>A WriteConcern.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoUrlBuilder.Parse(System.String)">
            <summary>
            Parses a URL and sets all settings to match the URL.
            </summary>
            <param name="url">The URL.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoUrlBuilder.ToMongoUrl">
            <summary>
            Creates a new instance of MongoUrl based on the settings in this MongoUrlBuilder.
            </summary>
            <returns>A new instance of MongoUrl.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoUrlBuilder.ToString">
            <summary>
            Returns the canonical URL based on the settings in this MongoUrlBuilder.
            </summary>
            <returns>The canonical URL.</returns>
        </member>
        <member name="T:MongoDB.Driver.MongoUtils">
            <summary>
            Various static utility methods.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoUtils.Hash(System.String)">
            <summary>
            Gets the MD5 hash of a string.
            </summary>
            <param name="text">The string to get the MD5 hash of.</param>
            <returns>The MD5 hash.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoUtils.TimeSpanFromMicroseconds(System.Int64)">
            <summary>
            Creates a TimeSpan from microseconds.
            </summary>
            <param name="microseconds">The microseconds.</param>
            <returns>The TimeSpan.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoUtils.ToCamelCase(System.String)">
            <summary>
            Converts a string to camel case by lower casing the first letter (only the first letter is modified).
            </summary>
            <param name="value">The string to camel case.</param>
            <returns>The camel cased string.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoUtils.ToInsecureString(System.Security.SecureString)">
            <summary>
            Should only be used when the safety of the data cannot be guaranteed.  For instance,
            when the secure string is a password used in a plain text protocol.
            </summary>
            <param name="secureString">The secure string.</param>
            <returns>The CLR string.</returns>
        </member>
        <member name="T:MongoDB.Driver.MongoWriteException">
            <summary>
            Represents a write exception.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoWriteException.#ctor(MongoDB.Driver.Core.Connections.ConnectionId,MongoDB.Driver.WriteError,MongoDB.Driver.WriteConcernError,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoWriteException" /> class.
            </summary>
            <param name="connectionId">The connection identifier.</param>
            <param name="writeError">The write error.</param>
            <param name="writeConcernError">The write concern error.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="P:MongoDB.Driver.MongoWriteException.WriteConcernError">
            <summary>
            Gets the write concern error.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoWriteException.WriteError">
            <summary>
            Gets the write error.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.MongoX509Identity">
            <summary>
            Represents an identity defined by an X509 certificate.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoX509Identity.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoExternalIdentity" /> class.
            </summary>
            <param name="username">The username.</param>
        </member>
        <member name="T:MongoDB.Driver.NoPipelineInput">
            <summary>
            Represents the void input data type to a pipeline with no input, such as a database aggregation. No actual instances of this type can be created.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.NoPipelineInputSerializer">
            <summary>
            The serializer for NoPipelineInput.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.NoPipelineInputSerializer.Instance">
            <summary>
             Gets the instance.
            </summary>
            <value>The instance.</value>
        </member>
        <member name="P:MongoDB.Driver.NoPipelineInputSerializer.ValueType">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.NoPipelineInputSerializer.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.NoPipelineInputSerializer.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,MongoDB.Driver.NoPipelineInput)">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.PasswordEvidence">
            <summary>
            Evidence of a MongoIdentity via a shared secret.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.PasswordEvidence.#ctor(System.Security.SecureString)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.PasswordEvidence" /> class.
            Less secure when used in conjunction with SCRAM-SHA-256, due to the need to store the password in a managed
            string in order to SaslPrep it.
            See <a href="https://github.com/mongodb/specifications/blob/master/source/auth/auth.rst#scram-sha-256">Driver Authentication: SCRAM-SHA-256</a>
            for additional details.
            </summary>
            <param name="password">The password.</param>
        </member>
        <member name="M:MongoDB.Driver.PasswordEvidence.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.PasswordEvidence" /> class.
            </summary>
            <param name="password">The password.</param>
        </member>
        <member name="P:MongoDB.Driver.PasswordEvidence.SecurePassword">
            <summary>
            Gets the password.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.PasswordEvidence.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
            <param name="rhs">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.PasswordEvidence.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.PasswordEvidence.ComputeMongoCRPasswordDigest(System.String)">
            <summary>
            Computes the MONGODB-CR password digest.
            </summary>
            <param name="username">The username.</param>
            <returns>The MONGODB-CR password digest.</returns>
        </member>
        <member name="T:MongoDB.Driver.RenderedPipelineDefinition`1">
            <summary>
            A rendered pipeline.
            </summary>
            <typeparam name="TOutput">The type of the output.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.RenderedPipelineDefinition`1.#ctor(System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonDocument},MongoDB.Bson.Serialization.IBsonSerializer{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.RenderedPipelineDefinition`1"/> class.
            </summary>
            <param name="documents">The pipeline.</param>
            <param name="outputSerializer">The output serializer.</param>
        </member>
        <member name="P:MongoDB.Driver.RenderedPipelineDefinition`1.Documents">
            <summary>
            Gets the documents.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.RenderedPipelineDefinition`1.OutputSerializer">
            <summary>
            Gets the serializer.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.PipelineDefinition`2">
            <summary>
            Base class for a pipeline.
            </summary>
            <typeparam name="TInput">The type of the input.</typeparam>
            <typeparam name="TOutput">The type of the output.</typeparam>
        </member>
        <member name="P:MongoDB.Driver.PipelineDefinition`2.OutputSerializer">
            <summary>
            Gets the output serializer.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.PipelineDefinition`2.Stages">
            <summary>
            Gets the stages.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinition`2.Render(MongoDB.Bson.Serialization.IBsonSerializer{`0},MongoDB.Bson.Serialization.IBsonSerializerRegistry)">
            <summary>
            Renders the pipeline.
            </summary>
            <param name="inputSerializer">The input serializer.</param>
            <param name="serializerRegistry">The serializer registry.</param>
            <returns>A <see cref="T:MongoDB.Driver.RenderedPipelineDefinition`1"/></returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinition`2.ToString">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinition`2.ToString(MongoDB.Bson.Serialization.IBsonSerializer{`0},MongoDB.Bson.Serialization.IBsonSerializerRegistry)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <param name="inputSerializer">The input serializer.</param>
            <param name="serializerRegistry">The serializer registry.</param>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinition`2.Create(System.Collections.Generic.IEnumerable{MongoDB.Driver.IPipelineStageDefinition},MongoDB.Bson.Serialization.IBsonSerializer{`1})">
            <summary>
            Creates a pipeline.
            </summary>
            <param name="stages">The stages.</param>
            <param name="outputSerializer">The output serializer.</param>
            <returns>A <see cref="T:MongoDB.Driver.PipelineDefinition`2"/>.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinition`2.Create(System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonDocument},MongoDB.Bson.Serialization.IBsonSerializer{`1})">
            <summary>
            Creates a pipeline.
            </summary>
            <param name="stages">The stages.</param>
            <param name="outputSerializer">The output serializer.</param>
            <returns>A <see cref="T:MongoDB.Driver.PipelineDefinition`2"/>.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinition`2.Create(System.Collections.Generic.IEnumerable{System.String},MongoDB.Bson.Serialization.IBsonSerializer{`1})">
            <summary>
            Creates a pipeline.
            </summary>
            <param name="stages">The stages.</param>
            <param name="outputSerializer">The output serializer.</param>
            <returns>A <see cref="T:MongoDB.Driver.PipelineDefinition`2"/>.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinition`2.Create(MongoDB.Bson.BsonDocument[])">
            <summary>
            Creates a pipeline.
            </summary>
            <param name="stages">The stages.</param>
            <returns>A <see cref="T:MongoDB.Driver.PipelineDefinition`2"/>.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinition`2.Create(System.String[])">
            <summary>
            Creates a pipeline.
            </summary>
            <param name="stages">The stages.</param>
            <returns>A <see cref="T:MongoDB.Driver.PipelineDefinition`2"/>.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinition`2.op_Implicit(MongoDB.Driver.IPipelineStageDefinition[])~MongoDB.Driver.PipelineDefinition{`0,`1}">
            <summary>
            Performs an implicit conversion from <see cref="T:MongoDB.Driver.IPipelineStageDefinition"/>[] to <see cref="T:MongoDB.Driver.PipelineDefinition`2"/>.
            </summary>
            <param name="stages">The stages.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinition`2.op_Implicit(System.Collections.Generic.List{MongoDB.Driver.IPipelineStageDefinition})~MongoDB.Driver.PipelineDefinition{`0,`1}">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Collections.Generic.List`1"/> to <see cref="T:MongoDB.Driver.PipelineDefinition`2"/>.
            </summary>
            <param name="stages">The stages.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinition`2.op_Implicit(MongoDB.Bson.BsonDocument[])~MongoDB.Driver.PipelineDefinition{`0,`1}">
            <summary>
            Performs an implicit conversion from <see cref="T:MongoDB.Bson.BsonDocument"/>[] to <see cref="T:MongoDB.Driver.PipelineDefinition`2"/>.
            </summary>
            <param name="stages">The stages.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinition`2.op_Implicit(System.Collections.Generic.List{MongoDB.Bson.BsonDocument})~MongoDB.Driver.PipelineDefinition{`0,`1}">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Collections.Generic.List`1"/> to <see cref="T:MongoDB.Driver.PipelineDefinition`2"/>.
            </summary>
            <param name="stages">The stages.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="T:MongoDB.Driver.BsonDocumentStagePipelineDefinition`2">
            <summary>
            A pipeline composed of instances of <see cref="T:MongoDB.Bson.BsonDocument"/>.
            </summary>
            <typeparam name="TInput">The type of the input.</typeparam>
            <typeparam name="TOutput">The type of the output.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.BsonDocumentStagePipelineDefinition`2.#ctor(System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonDocument},MongoDB.Bson.Serialization.IBsonSerializer{`1})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.BsonDocumentStagePipelineDefinition`2"/> class.
            </summary>
            <param name="stages">The stages.</param>
            <param name="outputSerializer">The output serializer.</param>
        </member>
        <member name="P:MongoDB.Driver.BsonDocumentStagePipelineDefinition`2.OutputSerializer">
            <inheritdoc />
        </member>
        <member name="P:MongoDB.Driver.BsonDocumentStagePipelineDefinition`2.Documents">
            <summary>
            Gets the stages.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.BsonDocumentStagePipelineDefinition`2.Stages">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.BsonDocumentStagePipelineDefinition`2.Render(MongoDB.Bson.Serialization.IBsonSerializer{`0},MongoDB.Bson.Serialization.IBsonSerializerRegistry)">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.PipelineStagePipelineDefinition`2">
            <summary>
            A pipeline composed of instances of <see cref="T:MongoDB.Driver.IPipelineStageDefinition" />.
            </summary>
            <typeparam name="TInput">The type of the input.</typeparam>
            <typeparam name="TOutput">The type of the output.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.PipelineStagePipelineDefinition`2.#ctor(System.Collections.Generic.IEnumerable{MongoDB.Driver.IPipelineStageDefinition},MongoDB.Bson.Serialization.IBsonSerializer{`1})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.PipelineStagePipelineDefinition`2"/> class.
            </summary>
            <param name="stages">The stages.</param>
            <param name="outputSerializer">The output serializer.</param>
        </member>
        <member name="P:MongoDB.Driver.PipelineStagePipelineDefinition`2.OutputSerializer">
            <inheritdoc />
        </member>
        <member name="P:MongoDB.Driver.PipelineStagePipelineDefinition`2.Serializer">
            <summary>
            Gets the serializer.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.PipelineStagePipelineDefinition`2.Stages">
            <summary>
            Gets the stages.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.PipelineStagePipelineDefinition`2.Render(MongoDB.Bson.Serialization.IBsonSerializer{`0},MongoDB.Bson.Serialization.IBsonSerializerRegistry)">
            <inheritdoc />
        </member>
        <member name="P:MongoDB.Driver.OptimizingPipelineDefinition`2.OutputSerializer">
            <inheritdoc />
        </member>
        <member name="P:MongoDB.Driver.OptimizingPipelineDefinition`2.Stages">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.PipelineDefinitionBuilder">
            <summary>
            Extension methods for adding stages to a pipeline.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.AppendStage``3(MongoDB.Driver.PipelineDefinition{``0,``1},MongoDB.Driver.PipelineStageDefinition{``1,``2},MongoDB.Bson.Serialization.IBsonSerializer{``2})">
            <summary>
            Appends a stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TIntermediate">The type of the intermediate documents.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="stage">The stage.</param>
            <param name="outputSerializer">The output serializer.</param>
            <returns>A new pipeline with an additional stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.As``3(MongoDB.Driver.PipelineDefinition{``0,``1},MongoDB.Bson.Serialization.IBsonSerializer{``2})">
            <summary>
            Changes the output type of the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TIntermediate">The type of the intermediate documents.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="outputSerializer">The output serializer.</param>
            <returns>
            A new pipeline with an additional stage.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.Bucket``3(MongoDB.Driver.PipelineDefinition{``0,``1},MongoDB.Driver.AggregateExpressionDefinition{``1,``2},System.Collections.Generic.IEnumerable{``2},MongoDB.Driver.AggregateBucketOptions{``2})">
            <summary>
            Appends a $bucket stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TIntermediate">The type of the intermediate documents.</typeparam>
            <typeparam name="TValue">The type of the values.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="groupBy">The group by expression.</param>
            <param name="boundaries">The boundaries.</param>
            <param name="options">The options.</param>
            <returns>
            A new pipeline with an additional stage.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.Bucket``4(MongoDB.Driver.PipelineDefinition{``0,``1},MongoDB.Driver.AggregateExpressionDefinition{``1,``2},System.Collections.Generic.IEnumerable{``2},MongoDB.Driver.ProjectionDefinition{``1,``3},MongoDB.Driver.AggregateBucketOptions{``2})">
            <summary>
            Appends a $bucket stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TIntermediate">The type of the intermediate documents.</typeparam>
            <typeparam name="TValue">The type of the values.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="groupBy">The group by expression.</param>
            <param name="boundaries">The boundaries.</param>
            <param name="output">The output projection.</param>
            <param name="options">The options.</param>
            <returns>
            A new pipeline with an additional stage.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.Bucket``3(MongoDB.Driver.PipelineDefinition{``0,``1},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Collections.Generic.IEnumerable{``2},MongoDB.Driver.AggregateBucketOptions{``2},MongoDB.Driver.ExpressionTranslationOptions)">
            <summary>
            Appends a $bucket stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TIntermediate">The type of the intermediate documents.</typeparam>
            <typeparam name="TValue">The type of the values.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="groupBy">The group by expression.</param>
            <param name="boundaries">The boundaries.</param>
            <param name="options">The options.</param>
            <param name="translationOptions">The translation options.</param>
            <returns>
            The fluent aggregate interface.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.Bucket``4(MongoDB.Driver.PipelineDefinition{``0,``1},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Collections.Generic.IEnumerable{``2},System.Linq.Expressions.Expression{System.Func{System.Linq.IGrouping{``2,``1},``3}},MongoDB.Driver.AggregateBucketOptions{``2},MongoDB.Driver.ExpressionTranslationOptions)">
            <summary>
            Appends a $bucket stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TIntermediate">The type of the intermediate documents.</typeparam>
            <typeparam name="TValue">The type of the values.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="groupBy">The group by expression.</param>
            <param name="boundaries">The boundaries.</param>
            <param name="output">The output projection.</param>
            <param name="options">The options.</param>
            <param name="translationOptions">The translation options.</param>
            <returns>
            The fluent aggregate interface.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.BucketAuto``3(MongoDB.Driver.PipelineDefinition{``0,``1},MongoDB.Driver.AggregateExpressionDefinition{``1,``2},System.Int32,MongoDB.Driver.AggregateBucketAutoOptions)">
            <summary>
            Appends a $bucketAuto stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TIntermediate">The type of the intermediate documents.</typeparam>
            <typeparam name="TValue">The type of the values.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="groupBy">The group by expression.</param>
            <param name="buckets">The number of buckets.</param>
            <param name="options">The options.</param>
            <returns>
            A new pipeline with an additional stage.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.BucketAuto``4(MongoDB.Driver.PipelineDefinition{``0,``1},MongoDB.Driver.AggregateExpressionDefinition{``1,``2},System.Int32,MongoDB.Driver.ProjectionDefinition{``1,``3},MongoDB.Driver.AggregateBucketAutoOptions)">
            <summary>
            Appends a $bucketAuto stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TIntermediate">The type of the intermediate documents.</typeparam>
            <typeparam name="TValue">The type of the values.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="groupBy">The group by expression.</param>
            <param name="buckets">The number of buckets.</param>
            <param name="output">The output projection.</param>
            <param name="options">The options.</param>
            <returns>
            A new pipeline with an additional stage.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.BucketAuto``3(MongoDB.Driver.PipelineDefinition{``0,``1},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Int32,MongoDB.Driver.AggregateBucketAutoOptions,MongoDB.Driver.ExpressionTranslationOptions)">
            <summary>
            Appends a $bucketAuto stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TIntermediate">The type of the intermediate documents.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="groupBy">The group by expression.</param>
            <param name="buckets">The number of buckets.</param>
            <param name="options">The options (optional).</param>
            <param name="translationOptions">The translation options.</param>
            <returns>
            The fluent aggregate interface.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.BucketAuto``4(MongoDB.Driver.PipelineDefinition{``0,``1},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Int32,System.Linq.Expressions.Expression{System.Func{System.Linq.IGrouping{``2,``1},``3}},MongoDB.Driver.AggregateBucketAutoOptions,MongoDB.Driver.ExpressionTranslationOptions)">
            <summary>
            Appends a $bucketAuto stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TIntermediate">The type of the intermediate documents.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="groupBy">The group by expression.</param>
            <param name="buckets">The number of buckets.</param>
            <param name="output">The output projection.</param>
            <param name="options">The options (optional).</param>
            <param name="translationOptions">The translation options.</param>
            <returns>
            The fluent aggregate interface.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.ChangeStream``2(MongoDB.Driver.PipelineDefinition{``0,``1},MongoDB.Driver.ChangeStreamStageOptions)">
            <summary>
            Appends a $changeStream stage to the pipeline.
            Normally you would prefer to use the Watch method of <see cref="T:MongoDB.Driver.IMongoCollection`1" />.
            Only use this method if subsequent stages project away the resume token (the _id)
            or you don't want the resulting cursor to automatically resume.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TIntermediate">The type of the intermediate documents.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="options">The options.</param>
            <returns>
            The fluent aggregate interface.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.Count``2(MongoDB.Driver.PipelineDefinition{``0,``1})">
            <summary>
            Appends a $count stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TIntermediate">The type of the intermediate documents.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <returns>
            A new pipeline with an additional stage.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.Facet``3(MongoDB.Driver.PipelineDefinition{``0,``1},System.Collections.Generic.IEnumerable{MongoDB.Driver.AggregateFacet{``1}},MongoDB.Driver.AggregateFacetOptions{``2})">
            <summary>
            Appends a $facet stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TIntermediate">The type of the intermediate documents.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="facets">The facets.</param>
            <param name="options">The options.</param>
            <returns>
            A new pipeline with an additional stage.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.Facet``2(MongoDB.Driver.PipelineDefinition{``0,``1},System.Collections.Generic.IEnumerable{MongoDB.Driver.AggregateFacet{``1}})">
            <summary>
            Appends a $facet stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TIntermediate">The type of the intermediate documents.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="facets">The facets.</param>
            <returns>
            The fluent aggregate interface.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.Facet``2(MongoDB.Driver.PipelineDefinition{``0,``1},MongoDB.Driver.AggregateFacet{``1}[])">
            <summary>
            Appends a $facet stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TIntermediate">The type of the intermediate documents.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="facets">The facets.</param>
            <returns>
            The fluent aggregate interface.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.Facet``3(MongoDB.Driver.PipelineDefinition{``0,``1},MongoDB.Driver.AggregateFacet{``1}[])">
            <summary>
            Appends a $facet stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TIntermediate">The type of the intermediate documents.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="facets">The facets.</param>
            <returns>
            The fluent aggregate interface.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.For``1(MongoDB.Bson.Serialization.IBsonSerializer{``0})">
            <summary>
            Used to start creating a pipeline for {TInput} documents.
            </summary>
            <typeparam name="TInput">The type of the output.</typeparam>
            <param name="inputSerializer">The inputSerializer serializer.</param>
            <returns>
            The fluent aggregate interface.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.GraphLookup``9(MongoDB.Driver.PipelineDefinition{``0,``1},MongoDB.Driver.IMongoCollection{``2},MongoDB.Driver.FieldDefinition{``2,``3},MongoDB.Driver.FieldDefinition{``2,``4},MongoDB.Driver.AggregateExpressionDefinition{``1,``5},MongoDB.Driver.FieldDefinition{``8,``7},MongoDB.Driver.FieldDefinition{``6,System.Int32},MongoDB.Driver.AggregateGraphLookupOptions{``2,``6,``8})">
            <summary>
            Appends a $graphLookup stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TIntermediate">The type of the intermediate documents.</typeparam>
            <typeparam name="TFrom">The type of the from documents.</typeparam>
            <typeparam name="TConnectFrom">The type of the connect from field (must be either TConnectTo or a type that implements IEnumerable{TConnectTo}).</typeparam>
            <typeparam name="TConnectTo">The type of the connect to field.</typeparam>
            <typeparam name="TStartWith">The type of the start with expression (must be either TConnectTo or a type that implements IEnumerable{TConnectTo}).</typeparam>
            <typeparam name="TAsElement">The type of the as field elements.</typeparam>
            <typeparam name="TAs">The type of the as field.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="from">The from collection.</param>
            <param name="connectFromField">The connect from field.</param>
            <param name="connectToField">The connect to field.</param>
            <param name="startWith">The start with value.</param>
            <param name="as">The as field.</param>
            <param name="depthField">The depth field.</param>
            <param name="options">The options.</param>
            <returns>The fluent aggregate interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.GraphLookup``8(MongoDB.Driver.PipelineDefinition{``0,``1},MongoDB.Driver.IMongoCollection{``2},MongoDB.Driver.FieldDefinition{``2,``3},MongoDB.Driver.FieldDefinition{``2,``4},MongoDB.Driver.AggregateExpressionDefinition{``1,``5},MongoDB.Driver.FieldDefinition{``7,``6},MongoDB.Driver.AggregateGraphLookupOptions{``2,``2,``7})">
            <summary>
            Appends a $graphLookup stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TIntermediate">The type of the intermediate documents.</typeparam>
            <typeparam name="TFrom">The type of the from documents.</typeparam>
            <typeparam name="TConnectFrom">The type of the connect from field (must be either TConnectTo or a type that implements IEnumerable{TConnectTo}).</typeparam>
            <typeparam name="TConnectTo">The type of the connect to field.</typeparam>
            <typeparam name="TStartWith">The type of the start with expression (must be either TConnectTo or a type that implements IEnumerable{TConnectTo}).</typeparam>
            <typeparam name="TAs">The type of the as field.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="from">The from collection.</param>
            <param name="connectFromField">The connect from field.</param>
            <param name="connectToField">The connect to field.</param>
            <param name="startWith">The start with value.</param>
            <param name="as">The as field.</param>
            <param name="options">The options.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.GraphLookup``3(MongoDB.Driver.PipelineDefinition{``0,``1},MongoDB.Driver.IMongoCollection{``2},MongoDB.Driver.FieldDefinition{``2,MongoDB.Bson.BsonValue},MongoDB.Driver.FieldDefinition{``2,MongoDB.Bson.BsonValue},MongoDB.Driver.AggregateExpressionDefinition{``1,MongoDB.Bson.BsonValue},MongoDB.Driver.FieldDefinition{MongoDB.Bson.BsonDocument,System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonDocument}},MongoDB.Driver.FieldDefinition{MongoDB.Bson.BsonDocument,System.Int32})">
            <summary>
            Appends a $graphLookup stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TIntermediate">The type of the intermediate documents.</typeparam>
            <typeparam name="TFrom">The type of the from documents.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="from">The from collection.</param>
            <param name="connectFromField">The connect from field.</param>
            <param name="connectToField">The connect to field.</param>
            <param name="startWith">The start with value.</param>
            <param name="as">The as field.</param>
            <param name="depthField">The depth field.</param>
            <returns>The fluent aggregate interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.GraphLookup``8(MongoDB.Driver.PipelineDefinition{``0,``1},MongoDB.Driver.IMongoCollection{``2},System.Linq.Expressions.Expression{System.Func{``2,``3}},System.Linq.Expressions.Expression{System.Func{``2,``4}},System.Linq.Expressions.Expression{System.Func{``1,``5}},System.Linq.Expressions.Expression{System.Func{``7,``6}},MongoDB.Driver.AggregateGraphLookupOptions{``2,``2,``7},MongoDB.Driver.ExpressionTranslationOptions)">
            <summary>
            Appends a $graphLookup stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TIntermediate">The type of the intermediate documents.</typeparam>
            <typeparam name="TFrom">The type of the from documents.</typeparam>
            <typeparam name="TConnectFrom">The type of the connect from field (must be either TConnectTo or a type that implements IEnumerable{TConnectTo}).</typeparam>
            <typeparam name="TConnectTo">The type of the connect to field.</typeparam>
            <typeparam name="TStartWith">The type of the start with expression (must be either TConnectTo or a type that implements IEnumerable{TConnectTo}).</typeparam>
            <typeparam name="TAs">The type of the as field.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="from">The from collection.</param>
            <param name="connectFromField">The connect from field.</param>
            <param name="connectToField">The connect to field.</param>
            <param name="startWith">The start with value.</param>
            <param name="as">The as field.</param>
            <param name="options">The options.</param>
            <param name="translationOptions">The translation options.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.GraphLookup``9(MongoDB.Driver.PipelineDefinition{``0,``1},MongoDB.Driver.IMongoCollection{``2},System.Linq.Expressions.Expression{System.Func{``2,``3}},System.Linq.Expressions.Expression{System.Func{``2,``4}},System.Linq.Expressions.Expression{System.Func{``1,``5}},System.Linq.Expressions.Expression{System.Func{``8,``7}},System.Linq.Expressions.Expression{System.Func{``6,System.Int32}},MongoDB.Driver.AggregateGraphLookupOptions{``2,``6,``8},MongoDB.Driver.ExpressionTranslationOptions)">
            <summary>
            Appends a $graphLookup stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TIntermediate">The type of the intermediate documents.</typeparam>
            <typeparam name="TFrom">The type of the from documents.</typeparam>
            <typeparam name="TConnectFrom">The type of the connect from field (must be either TConnectTo or a type that implements IEnumerable{TConnectTo}).</typeparam>
            <typeparam name="TConnectTo">The type of the connect to field.</typeparam>
            <typeparam name="TStartWith">The type of the start with expression (must be either TConnectTo or a type that implements IEnumerable{TConnectTo}).</typeparam>
            <typeparam name="TAsElement">The type of the as field elements.</typeparam>
            <typeparam name="TAs">The type of the as field.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="from">The from collection.</param>
            <param name="connectFromField">The connect from field.</param>
            <param name="connectToField">The connect to field.</param>
            <param name="startWith">The start with value.</param>
            <param name="as">The as field.</param>
            <param name="depthField">The depth field.</param>
            <param name="options">The options.</param>
            <param name="translationOptions">The translation options.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.Group``3(MongoDB.Driver.PipelineDefinition{``0,``1},MongoDB.Driver.ProjectionDefinition{``1,``2})">
            <summary>
            Appends a $group stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TIntermediate">The type of the intermediate documents.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="group">The group projection.</param>
            <returns>
            A new pipeline with an additional stage.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.Group``2(MongoDB.Driver.PipelineDefinition{``0,``1},MongoDB.Driver.ProjectionDefinition{``1,MongoDB.Bson.BsonDocument})">
            <summary>
            Appends a group stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TIntermediate">The type of the intermediate documents.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="group">The group projection.</param>
            <returns>
            The fluent aggregate interface.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.Group``4(MongoDB.Driver.PipelineDefinition{``0,``1},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{System.Linq.IGrouping{``2,``1},``3}},MongoDB.Driver.ExpressionTranslationOptions)">
            <summary>
            Appends a group stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TIntermediate">The type of the intermediate documents.</typeparam>
            <typeparam name="TKey">The type of the key.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="id">The id.</param>
            <param name="group">The group projection.</param>
            <param name="translationOptions">The translation options.</param>
            <returns>
            The fluent aggregate interface.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.Limit``2(MongoDB.Driver.PipelineDefinition{``0,``1},System.Int32)">
            <summary>
            Appends a $limit stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="limit">The limit.</param>
            <returns>
            A new pipeline with an additional stage.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.Lookup``4(MongoDB.Driver.PipelineDefinition{``0,``1},MongoDB.Driver.IMongoCollection{``2},MongoDB.Driver.FieldDefinition{``1},MongoDB.Driver.FieldDefinition{``2},MongoDB.Driver.FieldDefinition{``3},MongoDB.Driver.AggregateLookupOptions{``2,``3})">
            <summary>
            Appends a $lookup stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TIntermediate">The type of the intermediate documents.</typeparam>
            <typeparam name="TForeignDocument">The type of the foreign collection documents.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="foreignCollection">The foreign collection.</param>
            <param name="localField">The local field.</param>
            <param name="foreignField">The foreign field.</param>
            <param name="as">The "as" field.</param>
            <param name="options">The options.</param>
            <returns>
            A new pipeline with an additional stage.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.Lookup``4(MongoDB.Driver.PipelineDefinition{``0,``1},MongoDB.Driver.IMongoCollection{``2},System.Linq.Expressions.Expression{System.Func{``1,System.Object}},System.Linq.Expressions.Expression{System.Func{``2,System.Object}},System.Linq.Expressions.Expression{System.Func{``3,System.Object}},MongoDB.Driver.AggregateLookupOptions{``2,``3})">
            <summary>
            Appends a lookup stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TIntermediate">The type of the intermediate documents.</typeparam>
            <typeparam name="TForeignDocument">The type of the foreign collection documents.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="foreignCollection">The foreign collection.</param>
            <param name="localField">The local field.</param>
            <param name="foreignField">The foreign field.</param>
            <param name="as">The "as" field.</param>
            <param name="options">The options.</param>
            <returns>
            The fluent aggregate interface.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.Lookup``6(MongoDB.Driver.PipelineDefinition{``0,``1},MongoDB.Driver.IMongoCollection{``2},MongoDB.Bson.BsonDocument,MongoDB.Driver.PipelineDefinition{``2,``3},MongoDB.Driver.FieldDefinition{``5,``4},MongoDB.Driver.AggregateLookupOptions{``2,``5})">
            <summary>
            Appends a $lookup stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TIntermediate">The type of the intermediate documents.</typeparam>
            <typeparam name="TForeignDocument">The type of the foreign collection documents.</typeparam>
            <typeparam name="TAsElement">The type of the as field elements.</typeparam>
            <typeparam name="TAs">The type of the as field.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="foreignCollection">The foreign collection.</param>
            <param name="let">The "let" definition.</param>
            <param name="lookupPipeline">The lookup pipeline.</param>
            <param name="as">The as field in <typeparamref name="TOutput" /> in which to place the results of the lookup pipeline.</param>
            <param name="options">The options.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.Lookup``6(MongoDB.Driver.PipelineDefinition{``0,``1},MongoDB.Driver.IMongoCollection{``2},MongoDB.Bson.BsonDocument,MongoDB.Driver.PipelineDefinition{``2,``3},System.Linq.Expressions.Expression{System.Func{``5,``4}},MongoDB.Driver.AggregateLookupOptions{``2,``5})">
            <summary>
            Appends a $lookup stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TIntermediate">The type of the intermediate documents.</typeparam>
            <typeparam name="TForeignDocument">The type of the foreign collection documents.</typeparam>
            <typeparam name="TAsElement">The type of the as field elements.</typeparam>
            <typeparam name="TAs">The type of the as field.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="foreignCollection">The foreign collection.</param>
            <param name="let">The "let" definition.</param>
            <param name="lookupPipeline">The lookup pipeline.</param>
            <param name="as">The as field in <typeparamref name="TOutput" /> in which to place the results of the lookup pipeline.</param>
            <param name="options">The options.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.Match``2(MongoDB.Driver.PipelineDefinition{``0,``1},MongoDB.Driver.FilterDefinition{``1})">
            <summary>
            Appends a $match stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="filter">The filter.</param>
            <returns>
            A new pipeline with an additional stage.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.Match``2(MongoDB.Driver.PipelineDefinition{``0,``1},System.Linq.Expressions.Expression{System.Func{``1,System.Boolean}})">
            <summary>
            Appends a match stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="filter">The filter.</param>
            <returns>
            The fluent aggregate interface.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.OfType``3(MongoDB.Driver.PipelineDefinition{``0,``1},MongoDB.Bson.Serialization.IBsonSerializer{``2})">
            <summary>
            Appends a $match stage to the pipeline to select documents of a certain type.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TIntermediate">The type of the intermediate documents.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="outputSerializer">The output serializer.</param>
            <returns>
            A new pipeline with an additional stage.
            </returns>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.Merge``3(MongoDB.Driver.PipelineDefinition{``0,``1},MongoDB.Driver.IMongoCollection{``2},MongoDB.Driver.MergeStageOptions{``2})">
            <summary>
            Appends a $merge stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TIntermediate">The type of the intermediate documents.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="outputCollection">The output collection.</param>
            <param name="mergeOptions">The merge options.</param>
            <returns>
            A new pipeline with an additional stage.
            </returns>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.Out``2(MongoDB.Driver.PipelineDefinition{``0,``1},MongoDB.Driver.IMongoCollection{``1})">
            <summary>
            Appends a $out stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="outputCollection">The output collection.</param>
            <returns>
            A new pipeline with an additional stage.
            </returns>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.Project``3(MongoDB.Driver.PipelineDefinition{``0,``1},MongoDB.Driver.ProjectionDefinition{``1,``2})">
            <summary>
            Appends a $project stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TIntermediate">The type of the intermediate documents.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="projection">The projection.</param>
            <returns>
            A new pipeline with an additional stage.
            </returns>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.Project``2(MongoDB.Driver.PipelineDefinition{``0,``1},MongoDB.Driver.ProjectionDefinition{``1,MongoDB.Bson.BsonDocument})">
            <summary>
            Appends a project stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TIntermediate">The type of the intermediate documents.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="projection">The projection.</param>
            <returns>
            The fluent aggregate interface.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.Project``3(MongoDB.Driver.PipelineDefinition{``0,``1},System.Linq.Expressions.Expression{System.Func{``1,``2}},MongoDB.Driver.ExpressionTranslationOptions)">
            <summary>
            Appends a project stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TIntermediate">The type of the intermediate documents.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="projection">The projection.</param>
            <param name="translationOptions">The translation options.</param>
            <returns>
            The fluent aggregate interface.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.ReplaceRoot``3(MongoDB.Driver.PipelineDefinition{``0,``1},MongoDB.Driver.AggregateExpressionDefinition{``1,``2})">
            <summary>
            Appends a $replaceRoot stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TIntermediate">The type of the intermediate documents.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="newRoot">The new root.</param>
            <returns>
            A new pipeline with an additional stage.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.ReplaceRoot``3(MongoDB.Driver.PipelineDefinition{``0,``1},System.Linq.Expressions.Expression{System.Func{``1,``2}},MongoDB.Driver.ExpressionTranslationOptions)">
            <summary>
            Appends a $replaceRoot stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TIntermediate">The type of the intermediate documents.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="newRoot">The new root.</param>
            <param name="translationOptions">The translation options.</param>
            <returns>
            The fluent aggregate interface.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.ReplaceWith``3(MongoDB.Driver.PipelineDefinition{``0,``1},MongoDB.Driver.AggregateExpressionDefinition{``1,``2})">
            <summary>
            Appends a $replaceWith stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TIntermediate">The type of the intermediate documents.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="newRoot">The new root.</param>
            <returns>
            A new pipeline with an additional stage.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.ReplaceWith``3(MongoDB.Driver.PipelineDefinition{``0,``1},System.Linq.Expressions.Expression{System.Func{``1,``2}},MongoDB.Driver.ExpressionTranslationOptions)">
            <summary>
            Appends a $replaceWith stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TIntermediate">The type of the intermediate documents.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="newRoot">The new root.</param>
            <param name="translationOptions">The translation options.</param>
            <returns>
            The fluent aggregate interface.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.Skip``2(MongoDB.Driver.PipelineDefinition{``0,``1},System.Int32)">
            <summary>
            Appends a $skip stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="skip">The number of documents to skip.</param>
            <returns>
            A new pipeline with an additional stage.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.Sort``2(MongoDB.Driver.PipelineDefinition{``0,``1},MongoDB.Driver.SortDefinition{``1})">
            <summary>
            Appends a $sort stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="sort">The sort definition.</param>
            <returns>
            A new pipeline with an additional stage.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.SortByCount``3(MongoDB.Driver.PipelineDefinition{``0,``1},MongoDB.Driver.AggregateExpressionDefinition{``1,``2})">
            <summary>
            Appends a $sortByCount stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TIntermediate">The type of the intermediate documents.</typeparam>
            <typeparam name="TValue">The type of the values.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="value">The value expression.</param>
            <returns>
            A new pipeline with an additional stage.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.SortByCount``3(MongoDB.Driver.PipelineDefinition{``0,``1},System.Linq.Expressions.Expression{System.Func{``1,``2}},MongoDB.Driver.ExpressionTranslationOptions)">
            <summary>
            Appends a sortByCount stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TIntermediate">The type of the intermediate documents.</typeparam>
            <typeparam name="TValue">The type of the values.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="value">The value expression.</param>
            <param name="translationOptions">The translation options.</param>
            <returns>
            The fluent aggregate interface.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.Unwind``3(MongoDB.Driver.PipelineDefinition{``0,``1},MongoDB.Driver.FieldDefinition{``1},MongoDB.Driver.AggregateUnwindOptions{``2})">
            <summary>
            Appends an $unwind stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TIntermediate">The type of the intermediate documents.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="field">The field.</param>
            <param name="options">The options.</param>
            <returns>
            A new pipeline with an additional stage.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.Unwind``2(MongoDB.Driver.PipelineDefinition{``0,``1},MongoDB.Driver.FieldDefinition{``1},MongoDB.Driver.AggregateUnwindOptions{MongoDB.Bson.BsonDocument})">
            <summary>
            Appends an unwind stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TIntermediate">The type of the intermediate documents.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="field">The field to unwind.</param>
            <param name="options">The options.</param>
            <returns>
            The fluent aggregate interface.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.Unwind``2(MongoDB.Driver.PipelineDefinition{``0,``1},System.Linq.Expressions.Expression{System.Func{``1,System.Object}},MongoDB.Driver.AggregateUnwindOptions{MongoDB.Bson.BsonDocument})">
            <summary>
            Appends an unwind stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TIntermediate">The type of the intermediate documents.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="field">The field to unwind.</param>
            <param name="options">The options.</param>
            <returns>
            The fluent aggregate interface.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineDefinitionBuilder.Unwind``3(MongoDB.Driver.PipelineDefinition{``0,``1},System.Linq.Expressions.Expression{System.Func{``1,System.Object}},MongoDB.Driver.AggregateUnwindOptions{``2})">
            <summary>
            Appends an unwind stage to the pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TIntermediate">The type of the intermediate documents.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="pipeline">The pipeline.</param>
            <param name="field">The field to unwind.</param>
            <param name="options">The options.</param>
            <returns>
            The fluent aggregate interface.
            </returns>
        </member>
        <member name="T:MongoDB.Driver.AppendedStagePipelineDefinition`3">
            <summary>
            Represents a pipeline consisting of an existing pipeline with one additional stage appended.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TIntermediate">The type of the intermediate documents.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.AppendedStagePipelineDefinition`3.#ctor(MongoDB.Driver.PipelineDefinition{`0,`1},MongoDB.Driver.PipelineStageDefinition{`1,`2},MongoDB.Bson.Serialization.IBsonSerializer{`2})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.AppendedStagePipelineDefinition`3" /> class.
            </summary>
            <param name="pipeline">The pipeline.</param>
            <param name="stage">The stage.</param>
            <param name="outputSerializer">The output serializer.</param>
        </member>
        <member name="P:MongoDB.Driver.AppendedStagePipelineDefinition`3.OutputSerializer">
            <inheritdoc/>
        </member>
        <member name="P:MongoDB.Driver.AppendedStagePipelineDefinition`3.Stages">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.AppendedStagePipelineDefinition`3.Render(MongoDB.Bson.Serialization.IBsonSerializer{`0},MongoDB.Bson.Serialization.IBsonSerializerRegistry)">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.EmptyPipelineDefinition`1">
            <summary>
            Represents an empty pipeline.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.EmptyPipelineDefinition`1.#ctor(MongoDB.Bson.Serialization.IBsonSerializer{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.EmptyPipelineDefinition`1"/> class.
            </summary>
            <param name="inputSerializer">The output serializer.</param>
        </member>
        <member name="P:MongoDB.Driver.EmptyPipelineDefinition`1.OutputSerializer">
            <inheritdoc/>
        </member>
        <member name="P:MongoDB.Driver.EmptyPipelineDefinition`1.Stages">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.EmptyPipelineDefinition`1.Render(MongoDB.Bson.Serialization.IBsonSerializer{`0},MongoDB.Bson.Serialization.IBsonSerializerRegistry)">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.PrependedStagePipelineDefinition`3">
            <summary>
            Represents a pipeline consisting of an existing pipeline with one additional stage prepended.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TIntermediate">The type of the intermediate documents.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.PrependedStagePipelineDefinition`3.#ctor(MongoDB.Driver.PipelineStageDefinition{`0,`1},MongoDB.Driver.PipelineDefinition{`1,`2},MongoDB.Bson.Serialization.IBsonSerializer{`2})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.PrependedStagePipelineDefinition`3" /> class.
            </summary>
            <param name="stage">The stage.</param>
            <param name="pipeline">The pipeline.</param>
            <param name="outputSerializer">The output serializer.</param>
        </member>
        <member name="P:MongoDB.Driver.PrependedStagePipelineDefinition`3.OutputSerializer">
            <inheritdoc/>
        </member>
        <member name="P:MongoDB.Driver.PrependedStagePipelineDefinition`3.Stages">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.PrependedStagePipelineDefinition`3.Render(MongoDB.Bson.Serialization.IBsonSerializer{`0},MongoDB.Bson.Serialization.IBsonSerializerRegistry)">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.ReplaceOutputSerializerPipelineDefinition`3">
            <summary>
            Represents a pipeline with the output serializer replaced.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TIntermediate">The type of the intermediate documents.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <seealso cref="T:MongoDB.Driver.PipelineDefinition`2" />
        </member>
        <member name="M:MongoDB.Driver.ReplaceOutputSerializerPipelineDefinition`3.#ctor(MongoDB.Driver.PipelineDefinition{`0,`1},MongoDB.Bson.Serialization.IBsonSerializer{`2})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.ReplaceOutputSerializerPipelineDefinition`3"/> class.
            </summary>
            <param name="pipeline">The pipeline.</param>
            <param name="outputSerializer">The output serializer.</param>
        </member>
        <member name="P:MongoDB.Driver.ReplaceOutputSerializerPipelineDefinition`3.OutputSerializer">
            <inheritdoc/>
        </member>
        <member name="P:MongoDB.Driver.ReplaceOutputSerializerPipelineDefinition`3.Stages">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.ReplaceOutputSerializerPipelineDefinition`3.Render(MongoDB.Bson.Serialization.IBsonSerializer{`0},MongoDB.Bson.Serialization.IBsonSerializerRegistry)">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.IRenderedPipelineStageDefinition">
            <summary>
            A rendered pipeline stage.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.IRenderedPipelineStageDefinition.OperatorName">
            <summary>
            Gets the name of the pipeline operator.
            </summary>
            <value>
            The name of the pipeline operator.
            </value>
        </member>
        <member name="P:MongoDB.Driver.IRenderedPipelineStageDefinition.Document">
            <summary>
            Gets the document.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.IRenderedPipelineStageDefinition.OutputSerializer">
            <summary>
            Gets the output serializer.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.RenderedPipelineStageDefinition`1">
            <summary>
            A rendered pipeline stage.
            </summary>
            <typeparam name="TOutput">The type of the output.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.RenderedPipelineStageDefinition`1.#ctor(System.String,MongoDB.Bson.BsonDocument,MongoDB.Bson.Serialization.IBsonSerializer{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.RenderedPipelineStageDefinition`1"/> class.
            </summary>
            <param name="operatorName">Name of the pipeline operator.</param>
            <param name="document">The document.</param>
            <param name="outputSerializer">The output serializer.</param>
        </member>
        <member name="P:MongoDB.Driver.RenderedPipelineStageDefinition`1.Document">
            <inheritdoc />
        </member>
        <member name="P:MongoDB.Driver.RenderedPipelineStageDefinition`1.OutputSerializer">
            <summary>
            Gets the output serializer.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.RenderedPipelineStageDefinition`1.OperatorName">
            <inheritdoc />
        </member>
        <member name="P:MongoDB.Driver.RenderedPipelineStageDefinition`1.MongoDB#Driver#IRenderedPipelineStageDefinition#OutputSerializer">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.IPipelineStageDefinition">
            <summary>
            A pipeline stage.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.IPipelineStageDefinition.InputType">
            <summary>
            Gets the type of the input.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.IPipelineStageDefinition.OperatorName">
            <summary>
            Gets the name of the pipeline operator.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.IPipelineStageDefinition.OutputType">
            <summary>
            Gets the type of the output.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.IPipelineStageDefinition.Render(MongoDB.Bson.Serialization.IBsonSerializer,MongoDB.Bson.Serialization.IBsonSerializerRegistry)">
            <summary>
            Renders the specified document serializer.
            </summary>
            <param name="inputSerializer">The input serializer.</param>
            <param name="serializerRegistry">The serializer registry.</param>
            <returns>An <see cref="T:MongoDB.Driver.IRenderedPipelineStageDefinition" /></returns>
        </member>
        <member name="M:MongoDB.Driver.IPipelineStageDefinition.ToString(MongoDB.Bson.Serialization.IBsonSerializer,MongoDB.Bson.Serialization.IBsonSerializerRegistry)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <param name="inputSerializer">The input serializer.</param>
            <param name="serializerRegistry">The serializer registry.</param>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:MongoDB.Driver.PipelineStageDefinition`2">
            <summary>
            Base class for pipeline stages.
            </summary>
            <typeparam name="TInput">The type of the input.</typeparam>
            <typeparam name="TOutput">The type of the output.</typeparam>
        </member>
        <member name="P:MongoDB.Driver.PipelineStageDefinition`2.InputType">
            <summary>
            Gets the type of the input.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.PipelineStageDefinition`2.OperatorName">
            <inheritdoc />
        </member>
        <member name="P:MongoDB.Driver.PipelineStageDefinition`2.OutputType">
            <summary>
            Gets the type of the output.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinition`2.Render(MongoDB.Bson.Serialization.IBsonSerializer{`0},MongoDB.Bson.Serialization.IBsonSerializerRegistry)">
            <summary>
            Renders the specified document serializer.
            </summary>
            <param name="inputSerializer">The input serializer.</param>
            <param name="serializerRegistry">The serializer registry.</param>
            <returns>A <see cref="T:MongoDB.Driver.RenderedPipelineStageDefinition`1" /></returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinition`2.ToString">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinition`2.ToString(MongoDB.Bson.Serialization.IBsonSerializer{`0},MongoDB.Bson.Serialization.IBsonSerializerRegistry)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <param name="inputSerializer">The input serializer.</param>
            <param name="serializerRegistry">The serializer registry.</param>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinition`2.op_Implicit(MongoDB.Bson.BsonDocument)~MongoDB.Driver.PipelineStageDefinition{`0,`1}">
            <summary>
            Performs an implicit conversion from <see cref="T:MongoDB.Bson.BsonDocument"/> to <see cref="T:MongoDB.Driver.PipelineStageDefinition`2"/>.
            </summary>
            <param name="document">The document.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinition`2.op_Implicit(System.String)~MongoDB.Driver.PipelineStageDefinition{`0,`1}">
            <summary>
            Performs an implicit conversion from <see cref="T:System.String" /> to <see cref="T:MongoDB.Driver.PipelineStageDefinition`2" />.
            </summary>
            <param name="json">The JSON string.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinition`2.MongoDB#Driver#IPipelineStageDefinition#Render(MongoDB.Bson.Serialization.IBsonSerializer,MongoDB.Bson.Serialization.IBsonSerializerRegistry)">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.BsonDocumentPipelineStageDefinition`2">
            <summary>
            A <see cref="T:MongoDB.Bson.BsonDocument"/> based stage.
            </summary>
            <typeparam name="TInput">The type of the input.</typeparam>
            <typeparam name="TOutput">The type of the output.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.BsonDocumentPipelineStageDefinition`2.#ctor(MongoDB.Bson.BsonDocument,MongoDB.Bson.Serialization.IBsonSerializer{`1})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.BsonDocumentPipelineStageDefinition`2"/> class.
            </summary>
            <param name="document">The document.</param>
            <param name="outputSerializer">The output serializer.</param>
        </member>
        <member name="P:MongoDB.Driver.BsonDocumentPipelineStageDefinition`2.OperatorName">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.BsonDocumentPipelineStageDefinition`2.Render(MongoDB.Bson.Serialization.IBsonSerializer{`0},MongoDB.Bson.Serialization.IBsonSerializerRegistry)">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.JsonPipelineStageDefinition`2">
            <summary>
            A JSON <see cref="T:System.String"/> based pipeline stage.
            </summary>
            <typeparam name="TInput">The type of the input.</typeparam>
            <typeparam name="TOutput">The type of the output.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.JsonPipelineStageDefinition`2.#ctor(System.String,MongoDB.Bson.Serialization.IBsonSerializer{`1})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.JsonPipelineStageDefinition`2" /> class.
            </summary>
            <param name="json">The json.</param>
            <param name="outputSerializer">The output serializer.</param>
        </member>
        <member name="P:MongoDB.Driver.JsonPipelineStageDefinition`2.Json">
            <summary>
            Gets the json.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.JsonPipelineStageDefinition`2.OperatorName">
            <inheritdoc />
        </member>
        <member name="P:MongoDB.Driver.JsonPipelineStageDefinition`2.OutputSerializer">
            <summary>
            Gets the output serializer.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.JsonPipelineStageDefinition`2.Render(MongoDB.Bson.Serialization.IBsonSerializer{`0},MongoDB.Bson.Serialization.IBsonSerializerRegistry)">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.PipelineStageDefinitionBuilder">
            <summary>
            Methods for building pipeline stages.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.Bucket``2(MongoDB.Driver.AggregateExpressionDefinition{``0,``1},System.Collections.Generic.IEnumerable{``1},MongoDB.Driver.AggregateBucketOptions{``1})">
            <summary>
            Creates a $bucket stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TValue">The type of the values.</typeparam>
            <param name="groupBy">The group by expression.</param>
            <param name="boundaries">The boundaries.</param>
            <param name="options">The options.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.Bucket``3(MongoDB.Driver.AggregateExpressionDefinition{``0,``1},System.Collections.Generic.IEnumerable{``1},MongoDB.Driver.ProjectionDefinition{``0,``2},MongoDB.Driver.AggregateBucketOptions{``1})">
            <summary>
            Creates a $bucket stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TValue">The type of the values.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="groupBy">The group by expression.</param>
            <param name="boundaries">The boundaries.</param>
            <param name="output">The output projection.</param>
            <param name="options">The options.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.Bucket``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{``1},MongoDB.Driver.AggregateBucketOptions{``1},MongoDB.Driver.ExpressionTranslationOptions)">
            <summary>
            Creates a $bucket stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TValue">The type of the values.</typeparam>
            <param name="groupBy">The group by expression.</param>
            <param name="boundaries">The boundaries.</param>
            <param name="options">The options.</param>
            <param name="translationOptions">The translation options.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.Bucket``3(System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{System.Linq.IGrouping{``1,``0},``2}},MongoDB.Driver.AggregateBucketOptions{``1},MongoDB.Driver.ExpressionTranslationOptions)">
            <summary>
            Creates a $bucket stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TValue">The type of the values.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="groupBy">The group by expression.</param>
            <param name="boundaries">The boundaries.</param>
            <param name="output">The output projection.</param>
            <param name="options">The options.</param>
            <param name="translationOptions">The translation options.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.BucketAuto``2(MongoDB.Driver.AggregateExpressionDefinition{``0,``1},System.Int32,MongoDB.Driver.AggregateBucketAutoOptions)">
            <summary>
            Creates a $bucketAuto stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TValue">The type of the values.</typeparam>
            <param name="groupBy">The group by expression.</param>
            <param name="buckets">The number of buckets.</param>
            <param name="options">The options.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.BucketAuto``3(MongoDB.Driver.AggregateExpressionDefinition{``0,``1},System.Int32,MongoDB.Driver.ProjectionDefinition{``0,``2},MongoDB.Driver.AggregateBucketAutoOptions)">
            <summary>
            Creates a $bucketAuto stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TValue">The type of the values.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="groupBy">The group by expression.</param>
            <param name="buckets">The number of buckets.</param>
            <param name="output">The output projection.</param>
            <param name="options">The options.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.BucketAuto``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int32,MongoDB.Driver.AggregateBucketAutoOptions,MongoDB.Driver.ExpressionTranslationOptions)">
            <summary>
            Creates a $bucketAuto stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="groupBy">The group by expression.</param>
            <param name="buckets">The number of buckets.</param>
            <param name="options">The options (optional).</param>
            <param name="translationOptions">The translation options.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.BucketAuto``3(System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int32,System.Linq.Expressions.Expression{System.Func{System.Linq.IGrouping{``1,``0},``2}},MongoDB.Driver.AggregateBucketAutoOptions,MongoDB.Driver.ExpressionTranslationOptions)">
            <summary>
            Creates a $bucketAuto stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TValue">The type of the output documents.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="groupBy">The group by expression.</param>
            <param name="buckets">The number of buckets.</param>
            <param name="output">The output projection.</param>
            <param name="options">The options (optional).</param>
            <param name="translationOptions">The translation options.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.ChangeStream``1(MongoDB.Driver.ChangeStreamStageOptions)">
            <summary>
            Creates a $changeStream stage.
            Normally you would prefer to use the Watch method of <see cref="T:MongoDB.Driver.IMongoCollection`1" />.
            Only use this method if subsequent stages project away the resume token (the _id)
            or you don't want the resulting cursor to automatically resume.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <param name="options">The options.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.Count``1">
            <summary>
            Creates a $count stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.Facet``2(System.Collections.Generic.IEnumerable{MongoDB.Driver.AggregateFacet{``0}},MongoDB.Driver.AggregateFacetOptions{``1})">
            <summary>
            Creates a $facet stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="facets">The facets.</param>
            <param name="options">The options.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.Facet``1(System.Collections.Generic.IEnumerable{MongoDB.Driver.AggregateFacet{``0}})">
            <summary>
            Creates a $facet stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <param name="facets">The facets.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.Facet``1(MongoDB.Driver.AggregateFacet{``0}[])">
            <summary>
            Creates a $facet stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <param name="facets">The facets.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.Facet``2(MongoDB.Driver.AggregateFacet{``0}[])">
            <summary>
            Creates a $facet stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="facets">The facets.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.GraphLookup``8(MongoDB.Driver.IMongoCollection{``1},MongoDB.Driver.FieldDefinition{``1,``2},MongoDB.Driver.FieldDefinition{``1,``3},MongoDB.Driver.AggregateExpressionDefinition{``0,``4},MongoDB.Driver.FieldDefinition{``7,``6},MongoDB.Driver.FieldDefinition{``5,System.Int32},MongoDB.Driver.AggregateGraphLookupOptions{``1,``5,``7})">
            <summary>
            Creates a $graphLookup stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TFrom">The type of the from documents.</typeparam>
            <typeparam name="TConnectFrom">The type of the connect from field (must be either TConnectTo or a type that implements IEnumerable{TConnectTo}).</typeparam>
            <typeparam name="TConnectTo">The type of the connect to field.</typeparam>
            <typeparam name="TStartWith">The type of the start with expression (must be either TConnectTo or a type that implements IEnumerable{TConnectTo}).</typeparam>
            <typeparam name="TAsElement">The type of the as field elements.</typeparam>
            <typeparam name="TAs">The type of the as field.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="from">The from collection.</param>
            <param name="connectFromField">The connect from field.</param>
            <param name="connectToField">The connect to field.</param>
            <param name="startWith">The start with value.</param>
            <param name="as">The as field.</param>
            <param name="depthField">The depth field.</param>
            <param name="options">The options.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.GraphLookup``7(MongoDB.Driver.IMongoCollection{``1},MongoDB.Driver.FieldDefinition{``1,``2},MongoDB.Driver.FieldDefinition{``1,``3},MongoDB.Driver.AggregateExpressionDefinition{``0,``4},MongoDB.Driver.FieldDefinition{``6,``5},MongoDB.Driver.AggregateGraphLookupOptions{``1,``1,``6})">
            <summary>
            Creates a $graphLookup stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TFrom">The type of the from documents.</typeparam>
            <typeparam name="TConnectFrom">The type of the connect from field (must be either TConnectTo or a type that implements IEnumerable{TConnectTo}).</typeparam>
            <typeparam name="TConnectTo">The type of the connect to field.</typeparam>
            <typeparam name="TStartWith">The type of the start with expression (must be either TConnectTo or a type that implements IEnumerable{TConnectTo}).</typeparam>
            <typeparam name="TAs">The type of the as field.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="from">The from collection.</param>
            <param name="connectFromField">The connect from field.</param>
            <param name="connectToField">The connect to field.</param>
            <param name="startWith">The start with value.</param>
            <param name="as">The as field.</param>
            <param name="options">The options.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.GraphLookup``2(MongoDB.Driver.IMongoCollection{``1},MongoDB.Driver.FieldDefinition{``1,MongoDB.Bson.BsonValue},MongoDB.Driver.FieldDefinition{``1,MongoDB.Bson.BsonValue},MongoDB.Driver.AggregateExpressionDefinition{``0,MongoDB.Bson.BsonValue},MongoDB.Driver.FieldDefinition{MongoDB.Bson.BsonDocument,System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonDocument}},MongoDB.Driver.FieldDefinition{MongoDB.Bson.BsonDocument,System.Int32})">
            <summary>
            Creates a $graphLookup stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TFrom">The type of the from documents.</typeparam>
            <param name="from">The from collection.</param>
            <param name="connectFromField">The connect from field.</param>
            <param name="connectToField">The connect to field.</param>
            <param name="startWith">The start with value.</param>
            <param name="as">The as field.</param>
            <param name="depthField">The depth field.</param>
            <returns>The fluent aggregate interface.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.GraphLookup``7(MongoDB.Driver.IMongoCollection{``1},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``1,``3}},System.Linq.Expressions.Expression{System.Func{``0,``4}},System.Linq.Expressions.Expression{System.Func{``6,``5}},MongoDB.Driver.AggregateGraphLookupOptions{``1,``1,``6},MongoDB.Driver.ExpressionTranslationOptions)">
            <summary>
            Creates a $graphLookup stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TFrom">The type of the from documents.</typeparam>
            <typeparam name="TConnectFrom">The type of the connect from field (must be either TConnectTo or a type that implements IEnumerable{TConnectTo}).</typeparam>
            <typeparam name="TConnectTo">The type of the connect to field.</typeparam>
            <typeparam name="TStartWith">The type of the start with expression (must be either TConnectTo or a type that implements IEnumerable{TConnectTo}).</typeparam>
            <typeparam name="TAs">The type of the as field.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="from">The from collection.</param>
            <param name="connectFromField">The connect from field.</param>
            <param name="connectToField">The connect to field.</param>
            <param name="startWith">The start with value.</param>
            <param name="as">The as field.</param>
            <param name="options">The options.</param>
            <param name="translationOptions">The translation options.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.GraphLookup``8(MongoDB.Driver.IMongoCollection{``1},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``1,``3}},System.Linq.Expressions.Expression{System.Func{``0,``4}},System.Linq.Expressions.Expression{System.Func{``7,``6}},System.Linq.Expressions.Expression{System.Func{``5,System.Int32}},MongoDB.Driver.AggregateGraphLookupOptions{``1,``5,``7},MongoDB.Driver.ExpressionTranslationOptions)">
            <summary>
            Creates a $graphLookup stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TFrom">The type of the from documents.</typeparam>
            <typeparam name="TConnectFrom">The type of the connect from field (must be either TConnectTo or a type that implements IEnumerable{TConnectTo}).</typeparam>
            <typeparam name="TConnectTo">The type of the connect to field.</typeparam>
            <typeparam name="TStartWith">The type of the start with expression (must be either TConnectTo or a type that implements IEnumerable{TConnectTo}).</typeparam>
            <typeparam name="TAsElement">The type of the as field elements.</typeparam>
            <typeparam name="TAs">The type of the as field.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="from">The from collection.</param>
            <param name="connectFromField">The connect from field.</param>
            <param name="connectToField">The connect to field.</param>
            <param name="startWith">The start with value.</param>
            <param name="as">The as field.</param>
            <param name="depthField">The depth field.</param>
            <param name="options">The options.</param>
            <param name="translationOptions">The translation options.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.Group``2(MongoDB.Driver.ProjectionDefinition{``0,``1})">
            <summary>
            Creates a $group stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="group">The group projection.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.Group``1(MongoDB.Driver.ProjectionDefinition{``0,MongoDB.Bson.BsonDocument})">
            <summary>
            Creates a $group stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <param name="group">The group projection.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.Group``3(System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{System.Linq.IGrouping{``1,``0},``2}},MongoDB.Driver.ExpressionTranslationOptions)">
            <summary>
            Creates a $group stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TValue">The type of the values.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="value">The value field.</param>
            <param name="group">The group projection.</param>
            <param name="translationOptions">The translation options.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.Limit``1(System.Int32)">
            <summary>
            Creates a $limit stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <param name="limit">The limit.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.Lookup``3(MongoDB.Driver.IMongoCollection{``1},MongoDB.Driver.FieldDefinition{``0},MongoDB.Driver.FieldDefinition{``1},MongoDB.Driver.FieldDefinition{``2},MongoDB.Driver.AggregateLookupOptions{``1,``2})">
            <summary>
            Creates a $lookup stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TForeignDocument">The type of the foreign collection documents.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="foreignCollection">The foreign collection.</param>
            <param name="localField">The local field.</param>
            <param name="foreignField">The foreign field.</param>
            <param name="as">The "as" field.</param>
            <param name="options">The options.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.Lookup``3(MongoDB.Driver.IMongoCollection{``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Linq.Expressions.Expression{System.Func{``1,System.Object}},System.Linq.Expressions.Expression{System.Func{``2,System.Object}},MongoDB.Driver.AggregateLookupOptions{``1,``2})">
            <summary>
            Creates a $lookup stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TForeignDocument">The type of the foreign collection documents.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="foreignCollection">The foreign collection.</param>
            <param name="localField">The local field.</param>
            <param name="foreignField">The foreign field.</param>
            <param name="as">The "as" field.</param>
            <param name="options">The options.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.Lookup``5(MongoDB.Driver.IMongoCollection{``1},MongoDB.Bson.BsonDocument,MongoDB.Driver.PipelineDefinition{``1,``2},MongoDB.Driver.FieldDefinition{``4,``3},MongoDB.Driver.AggregateLookupOptions{``1,``4})">
            <summary>
            Creates a $lookup stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TForeignDocument">The type of the foreign collection documents.</typeparam>
            <typeparam name="TAsElement">The type of the as field elements.</typeparam>
            <typeparam name="TAs">The type of the as field.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="foreignCollection">The foreign collection.</param>
            <param name="let">The "let" definition.</param>
            <param name="lookupPipeline">The lookup pipeline.</param>
            <param name="as">The as field in <typeparamref name="TOutput" /> in which to place the results of the lookup pipeline.</param>
            <param name="options">The options.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.Lookup``5(MongoDB.Driver.IMongoCollection{``1},MongoDB.Bson.BsonDocument,MongoDB.Driver.PipelineDefinition{``1,``2},System.Linq.Expressions.Expression{System.Func{``4,``3}},MongoDB.Driver.AggregateLookupOptions{``1,``4})">
            <summary>
            Creates a $lookup stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TForeignDocument">The type of the foreign collection documents.</typeparam>
            <typeparam name="TAsElement">The type of the as field elements.</typeparam>
            <typeparam name="TAs">The type of the as field.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="foreignCollection">The foreign collection.</param>
            <param name="let">The "let" definition.</param>
            <param name="lookupPipeline">The lookup pipeline.</param>
            <param name="as">The as field in <typeparamref name="TOutput" /> in which to place the results of the lookup pipeline.</param>
            <param name="options">The options.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.Match``1(MongoDB.Driver.FilterDefinition{``0})">
            <summary>
            Creates a $match stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <param name="filter">The filter.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.Match``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            Creates a $match stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <param name="filter">The filter.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.Merge``2(MongoDB.Driver.IMongoCollection{``1},MongoDB.Driver.MergeStageOptions{``1})">
            <summary>
            Creates a $merge stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="outputCollection">The output collection.</param>
            <param name="mergeOptions">The merge options.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.OfType``2(MongoDB.Bson.Serialization.IBsonSerializer{``1})">
            <summary>
            Create a $match stage that select documents of a sub type.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="outputSerializer">The output serializer.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.Out``1(MongoDB.Driver.IMongoCollection{``0})">
            <summary>
            Creates a $out stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <param name="outputCollection">The output collection.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.Project``2(MongoDB.Driver.ProjectionDefinition{``0,``1})">
            <summary>
            Creates a $project stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="projection">The projection.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.Project``1(MongoDB.Driver.ProjectionDefinition{``0,MongoDB.Bson.BsonDocument})">
            <summary>
            Creates a $project stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <param name="projection">The projection.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.Project``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},MongoDB.Driver.ExpressionTranslationOptions)">
            <summary>
            Creates a $project stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="projection">The projection.</param>
            <param name="translationOptions">The translation options.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.ReplaceRoot``2(MongoDB.Driver.AggregateExpressionDefinition{``0,``1})">
            <summary>
            Creates a $replaceRoot stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="newRoot">The new root.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.ReplaceRoot``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},MongoDB.Driver.ExpressionTranslationOptions)">
            <summary>
            Creates a $replaceRoot stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="newRoot">The new root.</param>
            <param name="translationOptions">The translation options.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.ReplaceWith``2(MongoDB.Driver.AggregateExpressionDefinition{``0,``1})">
            <summary>
            Creates a $replaceWith stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="newRoot">The new root.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.ReplaceWith``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},MongoDB.Driver.ExpressionTranslationOptions)">
            <summary>
            Creates a $replaceWith stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="newRoot">The new root.</param>
            <param name="translationOptions">The translation options.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.Skip``1(System.Int32)">
            <summary>
            Creates a $skip stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <param name="skip">The skip.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.Sort``1(MongoDB.Driver.SortDefinition{``0})">
            <summary>
            Creates a $sort stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <param name="sort">The sort.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.SortByCount``2(MongoDB.Driver.AggregateExpressionDefinition{``0,``1})">
            <summary>
            Creates a $sortByCount stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TValue">The type of the values.</typeparam>
            <param name="value">The value expression.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.SortByCount``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},MongoDB.Driver.ExpressionTranslationOptions)">
            <summary>
            Creates a $sortByCount stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TValue">The type of the values.</typeparam>
            <param name="value">The value.</param>
            <param name="translationOptions">The translation options.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.Unwind``2(MongoDB.Driver.FieldDefinition{``0},MongoDB.Driver.AggregateUnwindOptions{``1})">
            <summary>
            Creates an $unwind stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="field">The field.</param>
            <param name="options">The options.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.Unwind``1(MongoDB.Driver.FieldDefinition{``0},MongoDB.Driver.AggregateUnwindOptions{MongoDB.Bson.BsonDocument})">
            <summary>
            Creates an $unwind stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <param name="field">The field to unwind.</param>
            <param name="options">The options.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.Unwind``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}},MongoDB.Driver.AggregateUnwindOptions{MongoDB.Bson.BsonDocument})">
            <summary>
            Creates an $unwind stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <param name="field">The field to unwind.</param>
            <param name="options">The options.</param>
            <returns>The stage.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineStageDefinitionBuilder.Unwind``2(System.Linq.Expressions.Expression{System.Func{``0,System.Object}},MongoDB.Driver.AggregateUnwindOptions{``1})">
            <summary>
            Creates an $unwind stage.
            </summary>
            <typeparam name="TInput">The type of the input documents.</typeparam>
            <typeparam name="TOutput">The type of the output documents.</typeparam>
            <param name="field">The field to unwind.</param>
            <param name="options">The options.</param>
            <returns>The stage.</returns>
        </member>
        <member name="T:MongoDB.Driver.RenderedProjectionDefinition`1">
            <summary>
            A rendered projection.
            </summary>
            <typeparam name="TProjection">The type of the projection.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.RenderedProjectionDefinition`1.#ctor(MongoDB.Bson.BsonDocument,MongoDB.Bson.Serialization.IBsonSerializer{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.RenderedProjectionDefinition`1" /> class.
            </summary>
            <param name="document">The document.</param>
            <param name="projectionSerializer">The projection serializer.</param>
        </member>
        <member name="P:MongoDB.Driver.RenderedProjectionDefinition`1.Document">
            <summary>
            Gets the document.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.RenderedProjectionDefinition`1.ProjectionSerializer">
            <summary>
            Gets the serializer.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.ProjectionDefinition`1">
            <summary>
            Base class for projections whose projection type is not yet known.
            </summary>
            <typeparam name="TSource">The type of the source.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.ProjectionDefinition`1.Render(MongoDB.Bson.Serialization.IBsonSerializer{`0},MongoDB.Bson.Serialization.IBsonSerializerRegistry)">
            <summary>
            Renders the projection to a <see cref="T:MongoDB.Driver.RenderedProjectionDefinition`1"/>.
            </summary>
            <param name="sourceSerializer">The source serializer.</param>
            <param name="serializerRegistry">The serializer registry.</param>
            <returns>A <see cref="T:MongoDB.Bson.BsonDocument"/>.</returns>
        </member>
        <member name="M:MongoDB.Driver.ProjectionDefinition`1.op_Implicit(MongoDB.Bson.BsonDocument)~MongoDB.Driver.ProjectionDefinition{`0}">
            <summary>
            Performs an implicit conversion from <see cref="T:MongoDB.Bson.BsonDocument"/> to <see cref="T:MongoDB.Driver.ProjectionDefinition`1"/>.
            </summary>
            <param name="document">The document.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.ProjectionDefinition`1.op_Implicit(System.String)~MongoDB.Driver.ProjectionDefinition{`0}">
            <summary>
            Performs an implicit conversion from <see cref="T:System.String" /> to <see cref="T:MongoDB.Driver.ProjectionDefinition`2" />.
            </summary>
            <param name="json">The JSON string.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="T:MongoDB.Driver.ProjectionDefinition`2">
            <summary>
            Base class for projections.
            </summary>
            <typeparam name="TSource">The type of the source.</typeparam>
            <typeparam name="TProjection">The type of the projection.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.ProjectionDefinition`2.Render(MongoDB.Bson.Serialization.IBsonSerializer{`0},MongoDB.Bson.Serialization.IBsonSerializerRegistry)">
            <summary>
            Renders the projection to a <see cref="T:MongoDB.Driver.RenderedProjectionDefinition`1"/>.
            </summary>
            <param name="sourceSerializer">The source serializer.</param>
            <param name="serializerRegistry">The serializer registry.</param>
            <returns>A <see cref="T:MongoDB.Driver.RenderedProjectionDefinition`1"/>.</returns>
        </member>
        <member name="M:MongoDB.Driver.ProjectionDefinition`2.op_Implicit(MongoDB.Bson.BsonDocument)~MongoDB.Driver.ProjectionDefinition{`0,`1}">
            <summary>
            Performs an implicit conversion from <see cref="T:MongoDB.Bson.BsonDocument"/> to <see cref="T:MongoDB.Driver.ProjectionDefinition`2"/>.
            </summary>
            <param name="document">The document.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.ProjectionDefinition`2.op_Implicit(System.String)~MongoDB.Driver.ProjectionDefinition{`0,`1}">
            <summary>
            Performs an implicit conversion from <see cref="T:System.String" /> to <see cref="T:MongoDB.Driver.ProjectionDefinition`2" />.
            </summary>
            <param name="json">The JSON string.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.ProjectionDefinition`2.op_Implicit(MongoDB.Driver.ProjectionDefinition{`0})~MongoDB.Driver.ProjectionDefinition{`0,`1}">
            <summary>
            Performs an implicit conversion from <see cref="T:MongoDB.Driver.ProjectionDefinition`1"/> to <see cref="T:MongoDB.Driver.ProjectionDefinition`2"/>.
            </summary>
            <param name="projection">The projection.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="T:MongoDB.Driver.BsonDocumentProjectionDefinition`1">
            <summary>
            A <see cref="T:MongoDB.Bson.BsonDocument" /> based projection whose projection type is not yet known.
            </summary>
            <typeparam name="TSource">The type of the source.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.BsonDocumentProjectionDefinition`1.#ctor(MongoDB.Bson.BsonDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.BsonDocumentProjectionDefinition`1"/> class.
            </summary>
            <param name="document">The document.</param>
        </member>
        <member name="P:MongoDB.Driver.BsonDocumentProjectionDefinition`1.Document">
            <summary>
            Gets the document.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.BsonDocumentProjectionDefinition`1.Render(MongoDB.Bson.Serialization.IBsonSerializer{`0},MongoDB.Bson.Serialization.IBsonSerializerRegistry)">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.BsonDocumentProjectionDefinition`2">
            <summary>
            A <see cref="T:MongoDB.Bson.BsonDocument" /> based projection.
            </summary>
            <typeparam name="TSource">The type of the source.</typeparam>
            <typeparam name="TProjection">The type of the projection.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.BsonDocumentProjectionDefinition`2.#ctor(MongoDB.Bson.BsonDocument,MongoDB.Bson.Serialization.IBsonSerializer{`1})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.BsonDocumentProjectionDefinition`2"/> class.
            </summary>
            <param name="document">The document.</param>
            <param name="projectionSerializer">The projection serializer.</param>
        </member>
        <member name="P:MongoDB.Driver.BsonDocumentProjectionDefinition`2.Document">
            <summary>
            Gets the document.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.BsonDocumentProjectionDefinition`2.ProjectionSerializer">
            <summary>
            Gets the projection serializer.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.BsonDocumentProjectionDefinition`2.Render(MongoDB.Bson.Serialization.IBsonSerializer{`0},MongoDB.Bson.Serialization.IBsonSerializerRegistry)">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.FindExpressionProjectionDefinition`2">
            <summary>
            A find <see cref="P:MongoDB.Driver.FindExpressionProjectionDefinition`2.Expression" /> based projection.
            </summary>
            <typeparam name="TSource">The type of the source.</typeparam>
            <typeparam name="TProjection">The type of the projection.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.FindExpressionProjectionDefinition`2.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1}})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.FindExpressionProjectionDefinition`2" /> class.
            </summary>
            <param name="expression">The expression.</param>
        </member>
        <member name="P:MongoDB.Driver.FindExpressionProjectionDefinition`2.Expression">
            <summary>
            Gets the expression.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.FindExpressionProjectionDefinition`2.Render(MongoDB.Bson.Serialization.IBsonSerializer{`0},MongoDB.Bson.Serialization.IBsonSerializerRegistry)">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.JsonProjectionDefinition`1">
            <summary>
            A JSON <see cref="T:System.String" /> based projection whose projection type is not yet known.
            </summary>
            <typeparam name="TSource">The type of the source.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.JsonProjectionDefinition`1.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.JsonProjectionDefinition`1"/> class.
            </summary>
            <param name="json">The json.</param>
        </member>
        <member name="P:MongoDB.Driver.JsonProjectionDefinition`1.Json">
            <summary>
            Gets the json.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.JsonProjectionDefinition`1.Render(MongoDB.Bson.Serialization.IBsonSerializer{`0},MongoDB.Bson.Serialization.IBsonSerializerRegistry)">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.JsonProjectionDefinition`2">
            <summary>
            A JSON <see cref="T:System.String" /> based projection.
            </summary>
            <typeparam name="TSource">The type of the source.</typeparam>
            <typeparam name="TProjection">The type of the projection.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.JsonProjectionDefinition`2.#ctor(System.String,MongoDB.Bson.Serialization.IBsonSerializer{`1})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.BsonDocumentSortDefinition`1" /> class.
            </summary>
            <param name="json">The json.</param>
            <param name="projectionSerializer">The projection serializer.</param>
        </member>
        <member name="P:MongoDB.Driver.JsonProjectionDefinition`2.Json">
            <summary>
            Gets the json.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.JsonProjectionDefinition`2.ProjectionSerializer">
            <summary>
            Gets the projection serializer.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.JsonProjectionDefinition`2.Render(MongoDB.Bson.Serialization.IBsonSerializer{`0},MongoDB.Bson.Serialization.IBsonSerializerRegistry)">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.ObjectProjectionDefinition`1">
            <summary>
            An <see cref="P:MongoDB.Driver.ObjectProjectionDefinition`1.Object"/> based projection whose projection type is not yet known.
            </summary>
            <typeparam name="TSource">The type of the source.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.ObjectProjectionDefinition`1.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.ObjectProjectionDefinition`1"/> class.
            </summary>
            <param name="obj">The object.</param>
        </member>
        <member name="P:MongoDB.Driver.ObjectProjectionDefinition`1.Object">
            <summary>
            Gets the object.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.ObjectProjectionDefinition`1.Render(MongoDB.Bson.Serialization.IBsonSerializer{`0},MongoDB.Bson.Serialization.IBsonSerializerRegistry)">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.ObjectProjectionDefinition`2">
            <summary>
            An <see cref="P:MongoDB.Driver.ObjectProjectionDefinition`2.Object"/> based projection.
            </summary>
            <typeparam name="TSource">The type of the source.</typeparam>
            <typeparam name="TProjection">The type of the projection.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.ObjectProjectionDefinition`2.#ctor(System.Object,MongoDB.Bson.Serialization.IBsonSerializer{`1})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.ObjectProjectionDefinition`2" /> class.
            </summary>
            <param name="obj">The object.</param>
            <param name="projectionSerializer">The projection serializer.</param>
        </member>
        <member name="P:MongoDB.Driver.ObjectProjectionDefinition`2.Object">
            <summary>
            Gets the object.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ObjectProjectionDefinition`2.ProjectionSerializer">
            <summary>
            Gets the projection serializer.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.ObjectProjectionDefinition`2.Render(MongoDB.Bson.Serialization.IBsonSerializer{`0},MongoDB.Bson.Serialization.IBsonSerializerRegistry)">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.ClientSideDeserializationProjectionDefinition`2">
            <summary>
            A client side only projection that is implemented solely by deserializing using a different serializer.
            </summary>
            <typeparam name="TSource">The type of the source.</typeparam>
            <typeparam name="TProjection">The type of the projection.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.ClientSideDeserializationProjectionDefinition`2.#ctor(MongoDB.Bson.Serialization.IBsonSerializer{`1})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.ClientSideDeserializationProjectionDefinition`2"/> class.
            </summary>
            <param name="projectionSerializer">The projection serializer.</param>
        </member>
        <member name="P:MongoDB.Driver.ClientSideDeserializationProjectionDefinition`2.ResultSerializer">
            <summary>
            Gets the result serializer.
            </summary>
            <value>
            The result serializer.
            </value>
        </member>
        <member name="M:MongoDB.Driver.ClientSideDeserializationProjectionDefinition`2.Render(MongoDB.Bson.Serialization.IBsonSerializer{`0},MongoDB.Bson.Serialization.IBsonSerializerRegistry)">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.ProjectionDefinitionExtensions">
            <summary>
            Extension methods for projections.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.ProjectionDefinitionExtensions.ElemMatch``2(MongoDB.Driver.ProjectionDefinition{``0},MongoDB.Driver.FieldDefinition{``0},MongoDB.Driver.FilterDefinition{``1})">
            <summary>
            Combines an existing projection with a projection that filters the contents of an array.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="projection">The projection.</param>
            <param name="field">The field.</param>
            <param name="filter">The filter.</param>
            <returns>
            A combined projection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.ProjectionDefinitionExtensions.ElemMatch``2(MongoDB.Driver.ProjectionDefinition{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}},MongoDB.Driver.FilterDefinition{``1})">
            <summary>
            Combines an existing projection with a projection that filters the contents of an array.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="projection">The projection.</param>
            <param name="field">The field.</param>
            <param name="filter">The filter.</param>
            <returns>
            A combined projection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.ProjectionDefinitionExtensions.ElemMatch``2(MongoDB.Driver.ProjectionDefinition{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``1,System.Boolean}})">
            <summary>
            Combines an existing projection with a projection that filters the contents of an array.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="projection">The projection.</param>
            <param name="field">The field.</param>
            <param name="filter">The filter.</param>
            <returns>
            A combined projection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.ProjectionDefinitionExtensions.Exclude``1(MongoDB.Driver.ProjectionDefinition{``0},MongoDB.Driver.FieldDefinition{``0})">
            <summary>
            Combines an existing projection with a projection that excludes a field.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="projection">The projection.</param>
            <param name="field">The field.</param>
            <returns>
            A combined projection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.ProjectionDefinitionExtensions.Exclude``1(MongoDB.Driver.ProjectionDefinition{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Combines an existing projection with a projection that excludes a field.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="projection">The projection.</param>
            <param name="field">The field.</param>
            <returns>
            A combined projection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.ProjectionDefinitionExtensions.Include``1(MongoDB.Driver.ProjectionDefinition{``0},MongoDB.Driver.FieldDefinition{``0})">
            <summary>
            Combines an existing projection with a projection that includes a field.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="projection">The projection.</param>
            <param name="field">The field.</param>
            <returns>
            A combined projection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.ProjectionDefinitionExtensions.Include``1(MongoDB.Driver.ProjectionDefinition{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Combines an existing projection with a projection that includes a field.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="projection">The projection.</param>
            <param name="field">The field.</param>
            <returns>
            A combined projection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.ProjectionDefinitionExtensions.MetaTextScore``1(MongoDB.Driver.ProjectionDefinition{``0},System.String)">
            <summary>
            Combines an existing projection with a text score projection.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="projection">The projection.</param>
            <param name="field">The field.</param>
            <returns>
            A combined projection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.ProjectionDefinitionExtensions.Slice``1(MongoDB.Driver.ProjectionDefinition{``0},MongoDB.Driver.FieldDefinition{``0},System.Int32,System.Nullable{System.Int32})">
            <summary>
            Combines an existing projection with an array slice projection.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="projection">The projection.</param>
            <param name="field">The field.</param>
            <param name="skip">The skip.</param>
            <param name="limit">The limit.</param>
            <returns>
            A combined projection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.ProjectionDefinitionExtensions.Slice``1(MongoDB.Driver.ProjectionDefinition{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Int32,System.Nullable{System.Int32})">
            <summary>
            Combines an existing projection with an array slice projection.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="projection">The projection.</param>
            <param name="field">The field.</param>
            <param name="skip">The skip.</param>
            <param name="limit">The limit.</param>
            <returns>
            A combined projection.
            </returns>
        </member>
        <member name="T:MongoDB.Driver.ProjectionDefinitionBuilder`1">
            <summary>
            A builder for a projection.
            </summary>
            <typeparam name="TSource">The type of the source.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.ProjectionDefinitionBuilder`1.As``1(MongoDB.Bson.Serialization.IBsonSerializer{``0})">
            <summary>
            Creates a client side projection that is implemented solely by using a different serializer.
            </summary>
            <typeparam name="TProjection">The type of the projection.</typeparam>
            <param name="projectionSerializer">The projection serializer.</param>
            <returns>A client side deserialization projection.</returns>
        </member>
        <member name="M:MongoDB.Driver.ProjectionDefinitionBuilder`1.Combine(MongoDB.Driver.ProjectionDefinition{`0}[])">
            <summary>
            Combines the specified projections.
            </summary>
            <param name="projections">The projections.</param>
            <returns>
            A combined projection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.ProjectionDefinitionBuilder`1.Combine(System.Collections.Generic.IEnumerable{MongoDB.Driver.ProjectionDefinition{`0}})">
            <summary>
            Combines the specified projections.
            </summary>
            <param name="projections">The projections.</param>
            <returns>
            A combined projection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.ProjectionDefinitionBuilder`1.ElemMatch``1(MongoDB.Driver.FieldDefinition{`0},MongoDB.Driver.FilterDefinition{``0})">
            <summary>
            Creates a projection that filters the contents of an array.
            </summary>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="field">The field.</param>
            <param name="filter">The filter.</param>
            <returns>
            An array filtering projection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.ProjectionDefinitionBuilder`1.ElemMatch``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},MongoDB.Driver.FilterDefinition{``0})">
            <summary>
            Creates a projection that filters the contents of an array.
            </summary>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="field">The field.</param>
            <param name="filter">The filter.</param>
            <returns>
            An array filtering projection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.ProjectionDefinitionBuilder`1.ElemMatch``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            Creates a projection that filters the contents of an array.
            </summary>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="field">The field.</param>
            <param name="filter">The filter.</param>
            <returns>
            An array filtering projection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.ProjectionDefinitionBuilder`1.Exclude(MongoDB.Driver.FieldDefinition{`0})">
            <summary>
            Creates a projection that excludes a field.
            </summary>
            <param name="field">The field.</param>
            <returns>
            An exclusion projection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.ProjectionDefinitionBuilder`1.Exclude(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            Creates a projection that excludes a field.
            </summary>
            <param name="field">The field.</param>
            <returns>
            An exclusion projection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.ProjectionDefinitionBuilder`1.Expression``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Creates a projection based on the expression.
            </summary>
            <typeparam name="TProjection">The type of the result.</typeparam>
            <param name="expression">The expression.</param>
            <returns>
            An expression projection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.ProjectionDefinitionBuilder`1.Include(MongoDB.Driver.FieldDefinition{`0})">
            <summary>
            Creates a projection that includes a field.
            </summary>
            <param name="field">The field.</param>
            <returns>
            An inclusion projection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.ProjectionDefinitionBuilder`1.Include(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            Creates a projection that includes a field.
            </summary>
            <param name="field">The field.</param>
            <returns>
            An inclusion projection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.ProjectionDefinitionBuilder`1.MetaTextScore(System.String)">
            <summary>
            Creates a text score projection.
            </summary>
            <param name="field">The field.</param>
            <returns>
            A text score projection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.ProjectionDefinitionBuilder`1.Slice(MongoDB.Driver.FieldDefinition{`0},System.Int32,System.Nullable{System.Int32})">
            <summary>
            Creates an array slice projection.
            </summary>
            <param name="field">The field.</param>
            <param name="skip">The skip.</param>
            <param name="limit">The limit.</param>
            <returns>
            An array slice projection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.ProjectionDefinitionBuilder`1.Slice(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Int32,System.Nullable{System.Int32})">
            <summary>
            Creates an array slice projection.
            </summary>
            <param name="field">The field.</param>
            <param name="skip">The skip.</param>
            <param name="limit">The limit.</param>
            <returns>
            An array slice projection.
            </returns>
        </member>
        <member name="T:MongoDB.Driver.RenameCollectionOptions">
            <summary>
            Options for renaming a collection.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.RenameCollectionOptions.DropTarget">
            <summary>
            Gets or sets a value indicating whether to drop the target collection first if it already exists.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.ReplaceOneModel`1">
            <summary>
            Model for replacing a single document.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.ReplaceOneModel`1.#ctor(MongoDB.Driver.FilterDefinition{`0},`0)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.ReplaceOneModel`1"/> class.
            </summary>
            <param name="filter">The filter.</param>
            <param name="replacement">The replacement.</param>
        </member>
        <member name="P:MongoDB.Driver.ReplaceOneModel`1.Collation">
            <summary>
            Gets or sets the collation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ReplaceOneModel`1.Filter">
            <summary>
            Gets the filter.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ReplaceOneModel`1.IsUpsert">
            <summary>
            Gets or sets a value indicating whether to insert the document if it doesn't already exist.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ReplaceOneModel`1.Replacement">
            <summary>
            Gets the replacement.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ReplaceOneModel`1.ModelType">
            <summary>
            Gets the type of the model.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.ReplaceOneResult">
            <summary>
            The result of an update operation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ReplaceOneResult.IsAcknowledged">
            <summary>
            Gets a value indicating whether the result is acknowledged.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ReplaceOneResult.IsModifiedCountAvailable">
            <summary>
            Gets a value indicating whether the modified count is available.
            </summary>
            <remarks>
            The modified count is only available when all servers have been upgraded to 2.6 or above.
            </remarks>
        </member>
        <member name="P:MongoDB.Driver.ReplaceOneResult.MatchedCount">
            <summary>
            Gets the matched count. If IsAcknowledged is false, this will throw an exception.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ReplaceOneResult.ModifiedCount">
            <summary>
            Gets the modified count. If IsAcknowledged is false, this will throw an exception.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ReplaceOneResult.UpsertedId">
            <summary>
            Gets the upserted id, if one exists. If IsAcknowledged is false, this will throw an exception.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.ReplaceOneResult.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.ReplaceOneResult"/> class.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.ReplaceOneResult.Acknowledged">
            <summary>
            The result of an acknowledged update operation.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.ReplaceOneResult.Acknowledged.#ctor(System.Int64,System.Nullable{System.Int64},MongoDB.Bson.BsonValue)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.ReplaceOneResult.Acknowledged"/> class.
            </summary>
            <param name="matchedCount">The matched count.</param>
            <param name="modifiedCount">The modified count.</param>
            <param name="upsertedId">The upserted id.</param>
        </member>
        <member name="P:MongoDB.Driver.ReplaceOneResult.Acknowledged.IsAcknowledged">
            <inheritdoc/>
        </member>
        <member name="P:MongoDB.Driver.ReplaceOneResult.Acknowledged.IsModifiedCountAvailable">
            <inheritdoc/>
        </member>
        <member name="P:MongoDB.Driver.ReplaceOneResult.Acknowledged.MatchedCount">
            <inheritdoc/>
        </member>
        <member name="P:MongoDB.Driver.ReplaceOneResult.Acknowledged.ModifiedCount">
            <inheritdoc/>
        </member>
        <member name="P:MongoDB.Driver.ReplaceOneResult.Acknowledged.UpsertedId">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.ReplaceOneResult.Unacknowledged">
            <summary>
            The result of an unacknowledged update operation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ReplaceOneResult.Unacknowledged.Instance">
            <summary>
            Gets the instance.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ReplaceOneResult.Unacknowledged.IsAcknowledged">
            <inheritdoc/>
        </member>
        <member name="P:MongoDB.Driver.ReplaceOneResult.Unacknowledged.IsModifiedCountAvailable">
            <inheritdoc/>
        </member>
        <member name="P:MongoDB.Driver.ReplaceOneResult.Unacknowledged.MatchedCount">
            <inheritdoc/>
        </member>
        <member name="P:MongoDB.Driver.ReplaceOneResult.Unacknowledged.ModifiedCount">
            <inheritdoc/>
        </member>
        <member name="P:MongoDB.Driver.ReplaceOneResult.Unacknowledged.UpsertedId">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.ReplaceOptions">
            <summary>
            Options for replacing a single document.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.ReplaceOptions.From(MongoDB.Driver.UpdateOptions)">
            <summary>
            Creates a new ReplaceOptions from an UpdateOptions.
            </summary>
            <param name="updateOptions">The update options.</param>
            <returns>A ReplaceOptions.</returns>
        </member>
        <member name="P:MongoDB.Driver.ReplaceOptions.BypassDocumentValidation">
            <summary>
            Gets or sets a value indicating whether to bypass document validation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ReplaceOptions.Collation">
            <summary>
            Gets or sets the collation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ReplaceOptions.IsUpsert">
            <summary>
            Gets or sets a value indicating whether to insert the document if it doesn't already exist.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.ReturnDocument">
            <summary>
            Which version of the document to return when executing a FindAndModify command.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.ReturnDocument.Before">
            <summary>
            Return the document before the modification.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.ReturnDocument.After">
            <summary>
            Return the document after the modification.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.ServerSession">
            <summary>
            A server session.
            </summary>
            <seealso cref="T:MongoDB.Driver.IServerSession" />
        </member>
        <member name="P:MongoDB.Driver.ServerSession.Id">
            <inheritdoc />
        </member>
        <member name="P:MongoDB.Driver.ServerSession.LastUsedAt">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.ServerSession.AdvanceTransactionNumber">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.ServerSession.Dispose">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.ServerSession.WasUsed">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.Setting`1">
            <summary>
            Represents a setting that may or may not have been set.
            </summary>
            <typeparam name="T">The type of the value.</typeparam>
        </member>
        <member name="P:MongoDB.Driver.Setting`1.Value">
            <summary>
            Gets the value of the setting.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Setting`1.HasBeenSet">
            <summary>
            Gets a value indicating whether the setting has been set.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Setting`1.Reset">
            <summary>
            Resets the setting to the unset state.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Setting`1.ToString">
            <summary>
            Gets a canonical string representation for this setting.
            </summary>
            <returns>A canonical string representation for this setting.</returns>
        </member>
        <member name="T:MongoDB.Driver.SortDirection">
            <summary>
            The direction of the sort.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.SortDirection.Ascending">
            <summary>
            Ascending.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.SortDirection.Descending">
            <summary>
            Descending.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.SortDefinition`1">
            <summary>
            Base class for sorts.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.SortDefinition`1.Render(MongoDB.Bson.Serialization.IBsonSerializer{`0},MongoDB.Bson.Serialization.IBsonSerializerRegistry)">
            <summary>
            Renders the sort to a <see cref="T:MongoDB.Bson.BsonDocument"/>.
            </summary>
            <param name="documentSerializer">The document serializer.</param>
            <param name="serializerRegistry">The serializer registry.</param>
            <returns>A <see cref="T:MongoDB.Bson.BsonDocument"/>.</returns>
        </member>
        <member name="M:MongoDB.Driver.SortDefinition`1.op_Implicit(MongoDB.Bson.BsonDocument)~MongoDB.Driver.SortDefinition{`0}">
            <summary>
            Performs an implicit conversion from <see cref="T:MongoDB.Bson.BsonDocument"/> to <see cref="T:MongoDB.Driver.SortDefinition`1"/>.
            </summary>
            <param name="document">The document.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.SortDefinition`1.op_Implicit(System.String)~MongoDB.Driver.SortDefinition{`0}">
            <summary>
            Performs an implicit conversion from <see cref="T:System.String"/> to <see cref="T:MongoDB.Driver.SortDefinition`1"/>.
            </summary>
            <param name="json">The JSON string.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="T:MongoDB.Driver.BsonDocumentSortDefinition`1">
            <summary>
            A <see cref="T:MongoDB.Bson.BsonDocument"/> based sort.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.BsonDocumentSortDefinition`1.#ctor(MongoDB.Bson.BsonDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.BsonDocumentSortDefinition`1"/> class.
            </summary>
            <param name="document">The document.</param>
        </member>
        <member name="P:MongoDB.Driver.BsonDocumentSortDefinition`1.Document">
            <summary>
            Gets the document.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.BsonDocumentSortDefinition`1.Render(MongoDB.Bson.Serialization.IBsonSerializer{`0},MongoDB.Bson.Serialization.IBsonSerializerRegistry)">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.JsonSortDefinition`1">
            <summary>
            A JSON <see cref="T:System.String" /> based sort.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.JsonSortDefinition`1.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.JsonSortDefinition`1"/> class.
            </summary>
            <param name="json">The json.</param>
        </member>
        <member name="P:MongoDB.Driver.JsonSortDefinition`1.Json">
            <summary>
            Gets the json.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.JsonSortDefinition`1.Render(MongoDB.Bson.Serialization.IBsonSerializer{`0},MongoDB.Bson.Serialization.IBsonSerializerRegistry)">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.ObjectSortDefinition`1">
            <summary>
            An <see cref="P:MongoDB.Driver.ObjectSortDefinition`1.Object" /> based sort.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.ObjectSortDefinition`1.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.ObjectSortDefinition`1"/> class.
            </summary>
            <param name="obj">The object.</param>
        </member>
        <member name="P:MongoDB.Driver.ObjectSortDefinition`1.Object">
            <summary>
            Gets the object.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.ObjectSortDefinition`1.Render(MongoDB.Bson.Serialization.IBsonSerializer{`0},MongoDB.Bson.Serialization.IBsonSerializerRegistry)">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.SortDefinitionExtensions">
            <summary>
            Extension methods for SortDefinition.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.SortDefinitionExtensions.Ascending``1(MongoDB.Driver.SortDefinition{``0},MongoDB.Driver.FieldDefinition{``0})">
            <summary>
            Combines an existing sort with an ascending field.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="sort">The sort.</param>
            <param name="field">The field.</param>
            <returns>
            A combined sort.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.SortDefinitionExtensions.Ascending``1(MongoDB.Driver.SortDefinition{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Combines an existing sort with an ascending field.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="sort">The sort.</param>
            <param name="field">The field.</param>
            <returns>
            A combined sort.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.SortDefinitionExtensions.Descending``1(MongoDB.Driver.SortDefinition{``0},MongoDB.Driver.FieldDefinition{``0})">
            <summary>
            Combines an existing sort with an descending field.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="sort">The sort.</param>
            <param name="field">The field.</param>
            <returns>
            A combined sort.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.SortDefinitionExtensions.Descending``1(MongoDB.Driver.SortDefinition{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Combines an existing sort with an descending field.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="sort">The sort.</param>
            <param name="field">The field.</param>
            <returns>
            A combined sort.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.SortDefinitionExtensions.MetaTextScore``1(MongoDB.Driver.SortDefinition{``0},System.String)">
            <summary>
            Combines an existing sort with a descending sort on the computed relevance score of a text search.
            The field name should be the name of the projected relevance score field.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="sort">The sort.</param>
            <param name="field">The field.</param>
            <returns>
            A combined sort.
            </returns>
        </member>
        <member name="T:MongoDB.Driver.SortDefinitionBuilder`1">
            <summary>
            A builder for a <see cref="T:MongoDB.Driver.SortDefinition`1"/>.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.SortDefinitionBuilder`1.Ascending(MongoDB.Driver.FieldDefinition{`0})">
            <summary>
            Creates an ascending sort.
            </summary>
            <param name="field">The field.</param>
            <returns>An ascending sort.</returns>
        </member>
        <member name="M:MongoDB.Driver.SortDefinitionBuilder`1.Ascending(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            Creates an ascending sort.
            </summary>
            <param name="field">The field.</param>
            <returns>An ascending sort.</returns>
        </member>
        <member name="M:MongoDB.Driver.SortDefinitionBuilder`1.Combine(MongoDB.Driver.SortDefinition{`0}[])">
            <summary>
            Creates a combined sort.
            </summary>
            <param name="sorts">The sorts.</param>
            <returns>A combined sort.</returns>
        </member>
        <member name="M:MongoDB.Driver.SortDefinitionBuilder`1.Combine(System.Collections.Generic.IEnumerable{MongoDB.Driver.SortDefinition{`0}})">
            <summary>
            Creates a combined sort.
            </summary>
            <param name="sorts">The sorts.</param>
            <returns>A combined sort.</returns>
        </member>
        <member name="M:MongoDB.Driver.SortDefinitionBuilder`1.Descending(MongoDB.Driver.FieldDefinition{`0})">
            <summary>
            Creates a descending sort.
            </summary>
            <param name="field">The field.</param>
            <returns>A descending sort.</returns>
        </member>
        <member name="M:MongoDB.Driver.SortDefinitionBuilder`1.Descending(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            Creates a descending sort.
            </summary>
            <param name="field">The field.</param>
            <returns>A descending sort.</returns>
        </member>
        <member name="M:MongoDB.Driver.SortDefinitionBuilder`1.MetaTextScore(System.String)">
            <summary>
            Creates a descending sort on the computed relevance score of a text search.
            The name of the key should be the name of the projected relevence score field.
            </summary>
            <param name="field">The field.</param>
            <returns>A meta text score sort.</returns>
        </member>
        <member name="T:MongoDB.Driver.SslSettings">
            <summary>
            Represents the settings for using SSL.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.SslSettings.CheckCertificateRevocation">
            <summary>
            Gets or sets a value indicating whether to check for certificate revocation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.SslSettings.ClientCertificates">
            <summary>
            Gets or sets the client certificates.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.SslSettings.ClientCertificateSelectionCallback">
            <summary>
            Gets or sets the client certificate selection callback.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.SslSettings.EnabledSslProtocols">
            <summary>
            Gets or sets the enabled SSL protocols.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.SslSettings.ServerCertificateValidationCallback">
            <summary>
            Gets or sets the server certificate validation callback.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.SslSettings.op_Equality(MongoDB.Driver.SslSettings,MongoDB.Driver.SslSettings)">
            <summary>
            Determines whether two <see cref="T:MongoDB.Driver.SslSettings"/> instances are equal.
            </summary>
            <param name="lhs">The LHS.</param>
            <param name="rhs">The RHS.</param>
            <returns>
              <c>true</c> if the left hand side is equal to the right hand side; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.SslSettings.op_Inequality(MongoDB.Driver.SslSettings,MongoDB.Driver.SslSettings)">
            <summary>
            Determines whether two <see cref="T:MongoDB.Driver.SslSettings"/> instances are not equal.
            </summary>
            <param name="lhs">The LHS.</param>
            <param name="rhs">The RHS.</param>
            <returns>
              <c>true</c> if the left hand side is not equal to the right hand side; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.SslSettings.Clone">
            <summary>
            Clones an SslSettings.
            </summary>
            <returns>The cloned SslSettings.</returns>
        </member>
        <member name="M:MongoDB.Driver.SslSettings.Equals(MongoDB.Driver.SslSettings)">
            <summary>
            Determines whether the specified <see cref="T:MongoDB.Driver.SslSettings" /> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:MongoDB.Driver.SslSettings" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:MongoDB.Driver.SslSettings" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.SslSettings.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.SslSettings.Freeze">
            <summary>
            Freezes the settings.
            </summary>
            <returns>The frozen settings.</returns>
        </member>
        <member name="M:MongoDB.Driver.SslSettings.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:MongoDB.Driver.SslSettings.ToString">
            <summary>
            Returns a string representation of the settings.
            </summary>
            <returns>A string representation of the settings.</returns>
        </member>
        <member name="T:MongoDB.Driver.TextSearchOptions">
            <summary>
            Represents text search options.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.TextSearchOptions.CaseSensitive">
            <summary>
            Gets or sets whether a text search should be case sensitive.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.TextSearchOptions.DiacriticSensitive">
            <summary>
            Gets or sets whether a text search should be diacritic sensitive.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.TextSearchOptions.Language">
            <summary>
            Gets or sets the language for a text search.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.UpdateDefinition`1">
            <summary>
            Base class for updates.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinition`1.Render(MongoDB.Bson.Serialization.IBsonSerializer{`0},MongoDB.Bson.Serialization.IBsonSerializerRegistry)">
            <summary>
            Renders the update to a <see cref="T:MongoDB.Bson.BsonValue"/>.
            </summary>
            <param name="documentSerializer">The document serializer.</param>
            <param name="serializerRegistry">The serializer registry.</param>
            <returns>A <see cref="T:MongoDB.Bson.BsonValue"/>.</returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinition`1.op_Implicit(MongoDB.Bson.BsonDocument)~MongoDB.Driver.UpdateDefinition{`0}">
            <summary>
            Performs an implicit conversion from <see cref="T:MongoDB.Bson.BsonDocument"/> to <see cref="T:MongoDB.Driver.UpdateDefinition`1"/>.
            </summary>
            <param name="document">The document.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinition`1.op_Implicit(System.String)~MongoDB.Driver.UpdateDefinition{`0}">
            <summary>
            Performs an implicit conversion from <see cref="T:System.String"/> to <see cref="T:MongoDB.Driver.UpdateDefinition`1"/>.
            </summary>
            <param name="json">The JSON string.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinition`1.op_Implicit(MongoDB.Driver.PipelineDefinition{`0,`0})~MongoDB.Driver.UpdateDefinition{`0}">
            <summary>
            Performs an implicit conversion from <see cref="T:MongoDB.Driver.PipelineDefinition`2"/> to <see cref="T:MongoDB.Driver.UpdateDefinition`1"/>.
            </summary>
            <param name="pipeline">The pipeline.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="T:MongoDB.Driver.PipelineUpdateDefinition`1">
            <summary>
            A <see cref="T:MongoDB.Driver.PipelineDefinition`2"/> based update definition.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.PipelineUpdateDefinition`1.#ctor(MongoDB.Driver.PipelineDefinition{`0,`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.PipelineUpdateDefinition`1"/> class.
            </summary>
            <param name="pipeline">The pipeline.</param>
        </member>
        <member name="M:MongoDB.Driver.PipelineUpdateDefinition`1.Render(MongoDB.Bson.Serialization.IBsonSerializer{`0},MongoDB.Bson.Serialization.IBsonSerializerRegistry)">
            <summary>
            Renders the update to a <see cref="T:MongoDB.Bson.BsonValue"/> that represents <see cref="T:MongoDB.Bson.BsonArray"/>.
            </summary>
            <param name="documentSerializer">The document serializer.</param>
            <param name="serializerRegistry">The serializer registry.</param>
            <returns>A <see cref="T:MongoDB.Bson.BsonValue"/>.</returns>
        </member>
        <member name="M:MongoDB.Driver.PipelineUpdateDefinition`1.ToString">
            <inheritdoc />
        </member>
        <member name="M:MongoDB.Driver.PipelineUpdateDefinition`1.ToString(MongoDB.Bson.Serialization.IBsonSerializer{`0},MongoDB.Bson.Serialization.IBsonSerializerRegistry)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <param name="inputSerializer">The input serializer.</param>
            <param name="serializerRegistry">The serializer registry.</param>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:MongoDB.Driver.BsonDocumentUpdateDefinition`1">
            <summary>
            A <see cref="T:MongoDB.Bson.BsonDocument"/> based update.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.BsonDocumentUpdateDefinition`1.#ctor(MongoDB.Bson.BsonDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.BsonDocumentUpdateDefinition`1"/> class.
            </summary>
            <param name="document">The document.</param>
        </member>
        <member name="P:MongoDB.Driver.BsonDocumentUpdateDefinition`1.Document">
            <summary>
            Gets the document.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.BsonDocumentUpdateDefinition`1.Render(MongoDB.Bson.Serialization.IBsonSerializer{`0},MongoDB.Bson.Serialization.IBsonSerializerRegistry)">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.JsonUpdateDefinition`1">
            <summary>
            A JSON <see cref="T:System.String" /> based update.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.JsonUpdateDefinition`1.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.JsonUpdateDefinition`1"/> class.
            </summary>
            <param name="json">The json.</param>
        </member>
        <member name="P:MongoDB.Driver.JsonUpdateDefinition`1.Json">
            <summary>
            Gets the json.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.JsonUpdateDefinition`1.Render(MongoDB.Bson.Serialization.IBsonSerializer{`0},MongoDB.Bson.Serialization.IBsonSerializerRegistry)">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.ObjectUpdateDefinition`1">
            <summary>
            An <see cref="P:MongoDB.Driver.ObjectUpdateDefinition`1.Object" /> based update.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.ObjectUpdateDefinition`1.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.ObjectUpdateDefinition`1"/> class.
            </summary>
            <param name="obj">The object.</param>
        </member>
        <member name="P:MongoDB.Driver.ObjectUpdateDefinition`1.Object">
            <summary>
            Gets the object.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.ObjectUpdateDefinition`1.Render(MongoDB.Bson.Serialization.IBsonSerializer{`0},MongoDB.Bson.Serialization.IBsonSerializerRegistry)">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.UpdateDefinitionExtensions">
            <summary>
            Extension methods for UpdateDefinition.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionExtensions.AddToSet``2(MongoDB.Driver.UpdateDefinition{``0},MongoDB.Driver.FieldDefinition{``0},``1)">
            <summary>
            Combines an existing update with an add to set operator.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="update">The update.</param>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>
            A combined update.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionExtensions.AddToSet``2(MongoDB.Driver.UpdateDefinition{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}},``1)">
            <summary>
            Combines an existing update with an add to set operator.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="update">The update.</param>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>
            A combined update.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionExtensions.AddToSetEach``2(MongoDB.Driver.UpdateDefinition{``0},MongoDB.Driver.FieldDefinition{``0},System.Collections.Generic.IEnumerable{``1})">
            <summary>
            Combines an existing update with an add to set operator.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="update">The update.</param>
            <param name="field">The field.</param>
            <param name="values">The values.</param>
            <returns>
            A combined update.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionExtensions.AddToSetEach``2(MongoDB.Driver.UpdateDefinition{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}},System.Collections.Generic.IEnumerable{``1})">
            <summary>
            Combines an existing update with an add to set operator.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="update">The update.</param>
            <param name="field">The field.</param>
            <param name="values">The values.</param>
            <returns>
            A combined update.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionExtensions.BitwiseAnd``2(MongoDB.Driver.UpdateDefinition{``0},MongoDB.Driver.FieldDefinition{``0,``1},``1)">
            <summary>
            Combines an existing update with a bitwise and operator.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="update">The update.</param>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>
            A combined update.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionExtensions.BitwiseAnd``2(MongoDB.Driver.UpdateDefinition{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},``1)">
            <summary>
            Combines an existing update with a bitwise and operator.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="update">The update.</param>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>
            A combined update.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionExtensions.BitwiseOr``2(MongoDB.Driver.UpdateDefinition{``0},MongoDB.Driver.FieldDefinition{``0,``1},``1)">
            <summary>
            Combines an existing update with a bitwise or operator.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="update">The update.</param>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>
            A combined update.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionExtensions.BitwiseOr``2(MongoDB.Driver.UpdateDefinition{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},``1)">
            <summary>
            Combines an existing update with a bitwise or operator.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="update">The update.</param>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>
            A combined update.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionExtensions.BitwiseXor``2(MongoDB.Driver.UpdateDefinition{``0},MongoDB.Driver.FieldDefinition{``0,``1},``1)">
            <summary>
            Combines an existing update with a bitwise xor operator.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="update">The update.</param>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>
            A combined update.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionExtensions.BitwiseXor``2(MongoDB.Driver.UpdateDefinition{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},``1)">
            <summary>
            Combines an existing update with a bitwise xor operator.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="update">The update.</param>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>
            A combined update.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionExtensions.CurrentDate``1(MongoDB.Driver.UpdateDefinition{``0},MongoDB.Driver.FieldDefinition{``0},System.Nullable{MongoDB.Driver.UpdateDefinitionCurrentDateType})">
            <summary>
            Combines an existing update with a current date operator.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="update">The update.</param>
            <param name="field">The field.</param>
            <param name="type">The type.</param>
            <returns>
            A combined update.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionExtensions.CurrentDate``1(MongoDB.Driver.UpdateDefinition{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Nullable{MongoDB.Driver.UpdateDefinitionCurrentDateType})">
            <summary>
            Combines an existing update with a current date operator.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="update">The update.</param>
            <param name="field">The field.</param>
            <param name="type">The type.</param>
            <returns>
            A combined update.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionExtensions.Inc``2(MongoDB.Driver.UpdateDefinition{``0},MongoDB.Driver.FieldDefinition{``0,``1},``1)">
            <summary>
            Combines an existing update with an increment operator.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="update">The update.</param>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>
            A combined update.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionExtensions.Inc``2(MongoDB.Driver.UpdateDefinition{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},``1)">
            <summary>
            Combines an existing update with an increment operator.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="update">The update.</param>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>
            A combined update.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionExtensions.Max``2(MongoDB.Driver.UpdateDefinition{``0},MongoDB.Driver.FieldDefinition{``0,``1},``1)">
            <summary>
            Combines an existing update with a max operator.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="update">The update.</param>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>
            A combined update.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionExtensions.Max``2(MongoDB.Driver.UpdateDefinition{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},``1)">
            <summary>
            Combines an existing update with a max operator.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="update">The update.</param>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>
            A combined update.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionExtensions.Min``2(MongoDB.Driver.UpdateDefinition{``0},MongoDB.Driver.FieldDefinition{``0,``1},``1)">
            <summary>
            Combines an existing update with a min operator.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="update">The update.</param>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>
            A combined update.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionExtensions.Min``2(MongoDB.Driver.UpdateDefinition{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},``1)">
            <summary>
            Combines an existing update with a min operator.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="update">The update.</param>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>
            A combined update.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionExtensions.Mul``2(MongoDB.Driver.UpdateDefinition{``0},MongoDB.Driver.FieldDefinition{``0,``1},``1)">
            <summary>
            Combines an existing update with a multiply operator.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="update">The update.</param>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>
            A combined update.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionExtensions.Mul``2(MongoDB.Driver.UpdateDefinition{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},``1)">
            <summary>
            Combines an existing update with a multiply operator.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="update">The update.</param>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>
            A combined update.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionExtensions.PopFirst``1(MongoDB.Driver.UpdateDefinition{``0},MongoDB.Driver.FieldDefinition{``0})">
            <summary>
            Combines an existing update with a pop operator.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="update">The update.</param>
            <param name="field">The field.</param>
            <returns>
            A combined update.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionExtensions.PopFirst``1(MongoDB.Driver.UpdateDefinition{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Combines an existing update with a pop operator.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="update">The update.</param>
            <param name="field">The field.</param>
            <returns>
            A combined update.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionExtensions.PopLast``1(MongoDB.Driver.UpdateDefinition{``0},MongoDB.Driver.FieldDefinition{``0})">
            <summary>
            Combines an existing update with a pop operator.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="update">The update.</param>
            <param name="field">The field.</param>
            <returns>
            A combined update.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionExtensions.PopLast``1(MongoDB.Driver.UpdateDefinition{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Combines an existing update with a pop operator.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="update">The update.</param>
            <param name="field">The field.</param>
            <returns>
            A combined update.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionExtensions.Pull``2(MongoDB.Driver.UpdateDefinition{``0},MongoDB.Driver.FieldDefinition{``0},``1)">
            <summary>
            Combines an existing update with a pull operator.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="update">The update.</param>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>
            A combined update.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionExtensions.Pull``2(MongoDB.Driver.UpdateDefinition{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}},``1)">
            <summary>
            Combines an existing update with a pull operator.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="update">The update.</param>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>
            A combined update.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionExtensions.PullAll``2(MongoDB.Driver.UpdateDefinition{``0},MongoDB.Driver.FieldDefinition{``0},System.Collections.Generic.IEnumerable{``1})">
            <summary>
            Combines an existing update with a pull operator.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="update">The update.</param>
            <param name="field">The field.</param>
            <param name="values">The values.</param>
            <returns>
            A combined update.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionExtensions.PullAll``2(MongoDB.Driver.UpdateDefinition{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}},System.Collections.Generic.IEnumerable{``1})">
            <summary>
            Combines an existing update with a pull operator.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="update">The update.</param>
            <param name="field">The field.</param>
            <param name="values">The values.</param>
            <returns>
            A combined update.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionExtensions.PullFilter``2(MongoDB.Driver.UpdateDefinition{``0},MongoDB.Driver.FieldDefinition{``0},MongoDB.Driver.FilterDefinition{``1})">
            <summary>
            Combines an existing update with a pull operator.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="update">The update.</param>
            <param name="field">The field.</param>
            <param name="filter">The filter.</param>
            <returns>
            A combined update.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionExtensions.PullFilter``2(MongoDB.Driver.UpdateDefinition{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}},MongoDB.Driver.FilterDefinition{``1})">
            <summary>
            Combines an existing update with a pull operator.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="update">The update.</param>
            <param name="field">The field.</param>
            <param name="filter">The filter.</param>
            <returns>
            A combined update.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionExtensions.PullFilter``2(MongoDB.Driver.UpdateDefinition{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``1,System.Boolean}})">
            <summary>
            Combines an existing update with a pull operator.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="update">The update.</param>
            <param name="field">The field.</param>
            <param name="filter">The filter.</param>
            <returns>
            A combined update.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionExtensions.Push``2(MongoDB.Driver.UpdateDefinition{``0},MongoDB.Driver.FieldDefinition{``0},``1)">
            <summary>
            Combines an existing update with a push operator.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="update">The update.</param>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>
            A combined update.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionExtensions.Push``2(MongoDB.Driver.UpdateDefinition{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}},``1)">
            <summary>
            Combines an existing update with a push operator.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="update">The update.</param>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>
            A combined update.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionExtensions.PushEach``2(MongoDB.Driver.UpdateDefinition{``0},MongoDB.Driver.FieldDefinition{``0},System.Collections.Generic.IEnumerable{``1},System.Nullable{System.Int32},System.Nullable{System.Int32},MongoDB.Driver.SortDefinition{``1})">
            <summary>
            Combines an existing update with a push operator.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="update">The update.</param>
            <param name="field">The field.</param>
            <param name="values">The values.</param>
            <param name="slice">The slice.</param>
            <param name="position">The position.</param>
            <param name="sort">The sort.</param>
            <returns>
            A combined update.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionExtensions.PushEach``2(MongoDB.Driver.UpdateDefinition{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}},System.Collections.Generic.IEnumerable{``1},System.Nullable{System.Int32},System.Nullable{System.Int32},MongoDB.Driver.SortDefinition{``1})">
            <summary>
            Combines an existing update with a push operator.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="update">The update.</param>
            <param name="field">The field.</param>
            <param name="values">The values.</param>
            <param name="slice">The slice.</param>
            <param name="position">The position.</param>
            <param name="sort">The sort.</param>
            <returns>
            A combined update.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionExtensions.Rename``1(MongoDB.Driver.UpdateDefinition{``0},MongoDB.Driver.FieldDefinition{``0},System.String)">
            <summary>
            Combines an existing update with a field renaming operator.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="update">The update.</param>
            <param name="field">The field.</param>
            <param name="newName">The new name.</param>
            <returns>
            A combined update.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionExtensions.Rename``1(MongoDB.Driver.UpdateDefinition{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String)">
            <summary>
            Combines an existing update with a field renaming operator.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="update">The update.</param>
            <param name="field">The field.</param>
            <param name="newName">The new name.</param>
            <returns>
            A combined update.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionExtensions.Set``2(MongoDB.Driver.UpdateDefinition{``0},MongoDB.Driver.FieldDefinition{``0,``1},``1)">
            <summary>
            Combines an existing update with a set operator.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="update">The update.</param>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>
            A combined update.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionExtensions.Set``2(MongoDB.Driver.UpdateDefinition{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},``1)">
            <summary>
            Combines an existing update with a set operator.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="update">The update.</param>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>
            A combined update.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionExtensions.SetOnInsert``2(MongoDB.Driver.UpdateDefinition{``0},MongoDB.Driver.FieldDefinition{``0,``1},``1)">
            <summary>
            Combines an existing update with a set on insert operator.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="update">The update.</param>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>
            A combined update.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionExtensions.SetOnInsert``2(MongoDB.Driver.UpdateDefinition{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},``1)">
            <summary>
            Combines an existing update with a set on insert operator.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="update">The update.</param>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>
            A combined update.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionExtensions.Unset``1(MongoDB.Driver.UpdateDefinition{``0},MongoDB.Driver.FieldDefinition{``0})">
            <summary>
            Combines an existing update with an unset operator.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="update">The update.</param>
            <param name="field">The field.</param>
            <returns>
            A combined update.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionExtensions.Unset``1(MongoDB.Driver.UpdateDefinition{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Combines an existing update with an unset operator.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="update">The update.</param>
            <param name="field">The field.</param>
            <returns>
            A combined update.
            </returns>
        </member>
        <member name="T:MongoDB.Driver.UpdateDefinitionCurrentDateType">
            <summary>
            The type to use for a $currentDate operator.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.UpdateDefinitionCurrentDateType.Date">
            <summary>
            A date.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.UpdateDefinitionCurrentDateType.Timestamp">
            <summary>
            A timestamp.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.UpdateDefinitionBuilder`1">
            <summary>
            A builder for an <see cref="T:MongoDB.Driver.UpdateDefinition`1"/>.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionBuilder`1.AddToSet``1(MongoDB.Driver.FieldDefinition{`0},``0)">
            <summary>
            Creates an add to set operator.
            </summary>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>An add to set operator.</returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionBuilder`1.AddToSet``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},``0)">
            <summary>
            Creates an add to set operator.
            </summary>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>An add to set operator.</returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionBuilder`1.AddToSetEach``1(MongoDB.Driver.FieldDefinition{`0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Creates an add to set operator.
            </summary>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="field">The field.</param>
            <param name="values">The values.</param>
            <returns>An add to set operator.</returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionBuilder`1.AddToSetEach``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Creates an add to set operator.
            </summary>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="field">The field.</param>
            <param name="values">The values.</param>
            <returns>An add to set operator.</returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionBuilder`1.BitwiseAnd``1(MongoDB.Driver.FieldDefinition{`0,``0},``0)">
            <summary>
            Creates a bitwise and operator.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A bitwise and operator.</returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionBuilder`1.BitwiseAnd``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
            <summary>
            Creates a bitwise and operator.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A bitwise and operator.</returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionBuilder`1.BitwiseOr``1(MongoDB.Driver.FieldDefinition{`0,``0},``0)">
            <summary>
            Creates a bitwise or operator.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A bitwise or operator.</returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionBuilder`1.BitwiseOr``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
            <summary>
            Creates a bitwise or operator.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A bitwise or operator.</returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionBuilder`1.BitwiseXor``1(MongoDB.Driver.FieldDefinition{`0,``0},``0)">
            <summary>
            Creates a bitwise xor operator.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A bitwise xor operator.</returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionBuilder`1.BitwiseXor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
            <summary>
            Creates a bitwise xor operator.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A bitwise xor operator.</returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionBuilder`1.Combine(MongoDB.Driver.UpdateDefinition{`0}[])">
            <summary>
            Creates a combined update.
            </summary>
            <param name="updates">The updates.</param>
            <returns>A combined update.</returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionBuilder`1.Combine(System.Collections.Generic.IEnumerable{MongoDB.Driver.UpdateDefinition{`0}})">
            <summary>
            Creates a combined update.
            </summary>
            <param name="updates">The updates.</param>
            <returns>A combined update.</returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionBuilder`1.CurrentDate(MongoDB.Driver.FieldDefinition{`0},System.Nullable{MongoDB.Driver.UpdateDefinitionCurrentDateType})">
            <summary>
            Creates a current date operator.
            </summary>
            <param name="field">The field.</param>
            <param name="type">The type.</param>
            <returns>A current date operator.</returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionBuilder`1.CurrentDate(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Nullable{MongoDB.Driver.UpdateDefinitionCurrentDateType})">
            <summary>
            Creates a current date operator.
            </summary>
            <param name="field">The field.</param>
            <param name="type">The type.</param>
            <returns>A current date operator.</returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionBuilder`1.Inc``1(MongoDB.Driver.FieldDefinition{`0,``0},``0)">
            <summary>
            Creates an increment operator.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>An increment operator.</returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionBuilder`1.Inc``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
            <summary>
            Creates an increment operator.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>An increment operator.</returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionBuilder`1.Max``1(MongoDB.Driver.FieldDefinition{`0,``0},``0)">
            <summary>
            Creates a max operator.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A max operator.</returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionBuilder`1.Max``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
            <summary>
            Creates a max operator.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A max operator.</returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionBuilder`1.Min``1(MongoDB.Driver.FieldDefinition{`0,``0},``0)">
            <summary>
            Creates a min operator.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A min operator.</returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionBuilder`1.Min``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
            <summary>
            Creates a min operator.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A min operator.</returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionBuilder`1.Mul``1(MongoDB.Driver.FieldDefinition{`0,``0},``0)">
            <summary>
            Creates a multiply operator.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A multiply operator.</returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionBuilder`1.Mul``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
            <summary>
            Creates a multiply operator.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A multiply operator.</returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionBuilder`1.Pipeline(MongoDB.Driver.PipelineDefinition{`0,`0})">
            <summary>
            Creates an update pipeline.
            </summary>
            <param name="pipeline">The pipeline.</param>
            <returns>An update pipeline.</returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionBuilder`1.PopFirst(MongoDB.Driver.FieldDefinition{`0})">
            <summary>
            Creates a pop operator.
            </summary>
            <param name="field">The field.</param>
            <returns>A pop operator.</returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionBuilder`1.PopFirst(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            Creates a pop first operator.
            </summary>
            <param name="field">The field.</param>
            <returns>A pop first operator.</returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionBuilder`1.PopLast(MongoDB.Driver.FieldDefinition{`0})">
            <summary>
            Creates a pop operator.
            </summary>
            <param name="field">The field.</param>
            <returns>A pop operator.</returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionBuilder`1.PopLast(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            Creates a pop first operator.
            </summary>
            <param name="field">The field.</param>
            <returns>A pop first operator.</returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionBuilder`1.Pull``1(MongoDB.Driver.FieldDefinition{`0},``0)">
            <summary>
            Creates a pull operator.
            </summary>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A pull operator.</returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionBuilder`1.Pull``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},``0)">
            <summary>
            Creates a pull operator.
            </summary>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A pull operator.</returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionBuilder`1.PullAll``1(MongoDB.Driver.FieldDefinition{`0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Creates a pull operator.
            </summary>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="field">The field.</param>
            <param name="values">The values.</param>
            <returns>A pull operator.</returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionBuilder`1.PullAll``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Creates a pull operator.
            </summary>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="field">The field.</param>
            <param name="values">The values.</param>
            <returns>A pull operator.</returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionBuilder`1.PullFilter``1(MongoDB.Driver.FieldDefinition{`0},MongoDB.Driver.FilterDefinition{``0})">
            <summary>
            Creates a pull operator.
            </summary>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="field">The field.</param>
            <param name="filter">The filter.</param>
            <returns>A pull operator.</returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionBuilder`1.PullFilter``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},MongoDB.Driver.FilterDefinition{``0})">
            <summary>
            Creates a pull operator.
            </summary>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="field">The field.</param>
            <param name="filter">The filter.</param>
            <returns>A pull operator.</returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionBuilder`1.PullFilter``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            Creates a pull operator.
            </summary>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="field">The field.</param>
            <param name="filter">The filter.</param>
            <returns>A pull operator.</returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionBuilder`1.Push``1(MongoDB.Driver.FieldDefinition{`0},``0)">
            <summary>
            Creates a push operator.
            </summary>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A push operator.</returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionBuilder`1.Push``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},``0)">
            <summary>
            Creates a push operator.
            </summary>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A push operator.</returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionBuilder`1.PushEach``1(MongoDB.Driver.FieldDefinition{`0},System.Collections.Generic.IEnumerable{``0},System.Nullable{System.Int32},System.Nullable{System.Int32},MongoDB.Driver.SortDefinition{``0})">
            <summary>
            Creates a push operator.
            </summary>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="field">The field.</param>
            <param name="values">The values.</param>
            <param name="slice">The slice.</param>
            <param name="position">The position.</param>
            <param name="sort">The sort.</param>
            <returns>A push operator.</returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionBuilder`1.PushEach``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Collections.Generic.IEnumerable{``0},System.Nullable{System.Int32},System.Nullable{System.Int32},MongoDB.Driver.SortDefinition{``0})">
            <summary>
            Creates a push operator.
            </summary>
            <typeparam name="TItem">The type of the item.</typeparam>
            <param name="field">The field.</param>
            <param name="values">The values.</param>
            <param name="slice">The slice.</param>
            <param name="position">The position.</param>
            <param name="sort">The sort.</param>
            <returns>A push operator.</returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionBuilder`1.Rename(MongoDB.Driver.FieldDefinition{`0},System.String)">
            <summary>
            Creates a field renaming operator.
            </summary>
            <param name="field">The field.</param>
            <param name="newName">The new name.</param>
            <returns>A field rename operator.</returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionBuilder`1.Rename(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String)">
            <summary>
            Creates a field renaming operator.
            </summary>
            <param name="field">The field.</param>
            <param name="newName">The new name.</param>
            <returns>A field rename operator.</returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionBuilder`1.Set``1(MongoDB.Driver.FieldDefinition{`0,``0},``0)">
            <summary>
            Creates a set operator.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A set operator.</returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionBuilder`1.Set``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
            <summary>
            Creates a set operator.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A set operator.</returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionBuilder`1.SetOnInsert``1(MongoDB.Driver.FieldDefinition{`0,``0},``0)">
            <summary>
            Creates a set on insert operator.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A set on insert operator.</returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionBuilder`1.SetOnInsert``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
            <summary>
            Creates a set on insert operator.
            </summary>
            <typeparam name="TField">The type of the field.</typeparam>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns>A set on insert operator.</returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionBuilder`1.Unset(MongoDB.Driver.FieldDefinition{`0})">
            <summary>
            Creates an unset operator.
            </summary>
            <param name="field">The field.</param>
            <returns>An unset operator.</returns>
        </member>
        <member name="M:MongoDB.Driver.UpdateDefinitionBuilder`1.Unset(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            Creates an unset operator.
            </summary>
            <param name="field">The field.</param>
            <returns>An unset operator.</returns>
        </member>
        <member name="T:MongoDB.Driver.UpdateManyModel`1">
            <summary>
            Model for updating many documents.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.UpdateManyModel`1.#ctor(MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.UpdateDefinition{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.UpdateManyModel`1"/> class.
            </summary>
            <param name="filter">The filter.</param>
            <param name="update">The update.</param>
        </member>
        <member name="P:MongoDB.Driver.UpdateManyModel`1.ArrayFilters">
            <summary>
            Gets or sets the array filters.
            </summary>
            <value>
            The array filters.
            </value>
        </member>
        <member name="P:MongoDB.Driver.UpdateManyModel`1.Collation">
            <summary>
            Gets or sets the collation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.UpdateManyModel`1.Filter">
            <summary>
            Gets the filter.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.UpdateManyModel`1.IsUpsert">
            <summary>
            Gets or sets a value indicating whether to insert the document if it doesn't already exist.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.UpdateManyModel`1.Update">
            <summary>
            Gets the update.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.UpdateManyModel`1.ModelType">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.UpdateManyModel`1.ThrowIfNotValid">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.UpdateOneModel`1">
            <summary>
            Model for updating a single document.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.UpdateOneModel`1.#ctor(MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.UpdateDefinition{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.UpdateOneModel`1"/> class.
            </summary>
            <param name="filter">The filter.</param>
            <param name="update">The update.</param>
        </member>
        <member name="P:MongoDB.Driver.UpdateOneModel`1.ArrayFilters">
            <summary>
            Gets or sets the array filters.
            </summary>
            <value>
            The array filters.
            </value>
        </member>
        <member name="P:MongoDB.Driver.UpdateOneModel`1.Collation">
            <summary>
            Gets or sets the collation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.UpdateOneModel`1.Filter">
            <summary>
            Gets the filter.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.UpdateOneModel`1.IsUpsert">
            <summary>
            Gets or sets a value indicating whether to insert the document if it doesn't already exist.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.UpdateOneModel`1.Update">
            <summary>
            Gets the update.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.UpdateOneModel`1.ModelType">
            <inheritdoc/>
        </member>
        <member name="M:MongoDB.Driver.UpdateOneModel`1.ThrowIfNotValid">
            <inheritdoc />
        </member>
        <member name="T:MongoDB.Driver.UpdateOptions">
            <summary>
            Options for updating a single document.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.UpdateOptions.ArrayFilters">
            <summary>
            Gets or sets the array filters.
            </summary>
            <value>
            The array filters.
            </value>
        </member>
        <member name="P:MongoDB.Driver.UpdateOptions.BypassDocumentValidation">
            <summary>
            Gets or sets a value indicating whether to bypass document validation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.UpdateOptions.Collation">
            <summary>
            Gets or sets the collation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.UpdateOptions.IsUpsert">
            <summary>
            Gets or sets a value indicating whether to insert the document if it doesn't already exist.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.UpdateResult">
            <summary>
            The result of an update operation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.UpdateResult.IsAcknowledged">
            <summary>
            Gets a value indicating whether the result is acknowledged.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.UpdateResult.IsModifiedCountAvailable">
            <summary>
            Gets a value indicating whether the modified count is available.
            </summary>
            <remarks>
            The modified count is only available when all servers have been upgraded to 2.6 or above.
            </remarks>
        </member>
        <member name="P:MongoDB.Driver.UpdateResult.MatchedCount">
            <summary>
            Gets the matched count. If IsAcknowledged is false, this will throw an exception.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.UpdateResult.ModifiedCount">
            <summary>
            Gets the modified count. If IsAcknowledged is false, this will throw an exception.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.UpdateResult.UpsertedId">
            <summary>
            Gets the upserted id, if one exists. If IsAcknowledged is false, this will throw an exception.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.UpdateResult.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.UpdateResult"/> class.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.UpdateResult.Acknowledged">
            <summary>
            The result of an acknowledged update operation.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.UpdateResult.Acknowledged.#ctor(System.Int64,System.Nullable{System.Int64},MongoDB.Bson.BsonValue)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.UpdateResult.Acknowledged"/> class.
            </summary>
            <param name="matchedCount">The matched count.</param>
            <param name="modifiedCount">The modified count.</param>
            <param name="upsertedId">The upserted id.</param>
        </member>
        <member name="P:MongoDB.Driver.UpdateResult.Acknowledged.IsAcknowledged">
            <inheritdoc/>
        </member>
        <member name="P:MongoDB.Driver.UpdateResult.Acknowledged.IsModifiedCountAvailable">
            <inheritdoc/>
        </member>
        <member name="P:MongoDB.Driver.UpdateResult.Acknowledged.MatchedCount">
            <inheritdoc/>
        </member>
        <member name="P:MongoDB.Driver.UpdateResult.Acknowledged.ModifiedCount">
            <inheritdoc/>
        </member>
        <member name="P:MongoDB.Driver.UpdateResult.Acknowledged.UpsertedId">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.UpdateResult.Unacknowledged">
            <summary>
            The result of an acknowledged update operation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.UpdateResult.Unacknowledged.Instance">
            <summary>
            Gets the instance.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.UpdateResult.Unacknowledged.IsAcknowledged">
            <inheritdoc/>
        </member>
        <member name="P:MongoDB.Driver.UpdateResult.Unacknowledged.IsModifiedCountAvailable">
            <inheritdoc/>
        </member>
        <member name="P:MongoDB.Driver.UpdateResult.Unacknowledged.MatchedCount">
            <inheritdoc/>
        </member>
        <member name="P:MongoDB.Driver.UpdateResult.Unacknowledged.ModifiedCount">
            <inheritdoc/>
        </member>
        <member name="P:MongoDB.Driver.UpdateResult.Unacknowledged.UpsertedId">
            <inheritdoc/>
        </member>
        <member name="T:MongoDB.Driver.WriteConcernError">
            <summary>
            Represents the details of a write concern error.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.WriteConcernError.Code">
            <summary>
            Gets the error code.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.WriteConcernError.CodeName">
            <summary>
            Gets the name of the error code.
            </summary>
            <value>
            The name of the error code.
            </value>
        </member>
        <member name="P:MongoDB.Driver.WriteConcernError.Details">
            <summary>
            Gets the error information.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.WriteConcernError.Message">
            <summary>
            Gets the error message.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.WriteError">
            <summary>
            Represents the details of a write error.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.WriteError.Category">
            <summary>
            Gets the category.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.WriteError.Code">
            <summary>
            Gets the error code.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.WriteError.Details">
            <summary>
            Gets the error details.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.WriteError.Message">
            <summary>
            Gets the error message.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.WriteModel`1">
            <summary>
            Base class for a write model.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="P:MongoDB.Driver.WriteModel`1.ModelType">
            <summary>
            Gets the type of the model.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.WriteModel`1.ThrowIfNotValid">
            <summary>
            Validate model.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.WriteModelType">
            <summary>
            The type of a write model.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.WriteModelType.InsertOne">
            <summary>
            A model to insert a single document.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.WriteModelType.DeleteOne">
            <summary>
            A model to delete a single document.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.WriteModelType.DeleteMany">
            <summary>
            A model to delete multiple documents.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.WriteModelType.ReplaceOne">
            <summary>
            A model to replace a single document.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.WriteModelType.UpdateOne">
            <summary>
            A model to update a single document.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.WriteModelType.UpdateMany">
            <summary>
            A model to update many documents.
            </summary>
        </member>
    </members>
</doc>
